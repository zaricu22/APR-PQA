
TOTAL: 1050

1: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Chart-19_Auto\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -695,7 +695,7 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.3
      */
     public int getDomainAxisIndex(CategoryAxis axis) {
-        return this.domainAxes.indexOf(axis);
+if (axis == null){throw new IllegalArgumentException();}        return this.domainAxes.indexOf(axis);
     }
     
     /**
@@ -970,7 +970,7 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
-        int result = this.rangeAxes.indexOf(axis);
+if (axis == null){throw new IllegalArgumentException();}        int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();
             if (parent instanceof CategoryPlot) {

2: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Chart-19_Manual\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -695,6 +695,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.3
      */
     public int getDomainAxisIndex(CategoryAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         return this.domainAxes.indexOf(axis);
     }
     
@@ -970,6 +973,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();

3: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-24_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-24_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -1409,7 +1409,7 @@ public class NumberUtils {
             }
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
-                // not allowing L with an exponent or decimal point
+if (hasDecPoint==true){return false;}                // not allowing L with an exponent or decimal point
                 return foundDigit && !hasExp;
             }
             // last character is illegal

4: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-24_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-24_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -1410,7 +1410,7 @@ public class NumberUtils {
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
                 // not allowing L with an exponent or decimal point
-                return foundDigit && !hasExp;
+                return foundDigit && !hasExp && !hasDecPoint;
             }
             // last character is illegal
             return false;

5: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-35_Buggy\\src\\org\\apache\\commons\\lang3\\ArrayUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-35_Auto\\src\\org\\apache\\commons\\lang3\\ArrayUtils.java"	
@@ -3297,7 +3297,7 @@ public class ArrayUtils {
         @SuppressWarnings("unchecked") // type must be T
         T[] newArray = (T[]) copyArrayGrow1(array, type);
         newArray[newArray.length - 1] = element;
-        return newArray;
+if (element == null){throw new IllegalArgumentException();}        return newArray;
     }
 
     /**
@@ -3571,7 +3571,7 @@ public class ArrayUtils {
         } else if (element != null) {
             clss = element.getClass();
         } else {
-            return (T[]) new Object[] { null };
+if (element == null){throw new IllegalArgumentException();}            return (T[]) new Object[] { null };
         }
         @SuppressWarnings("unchecked") // the add method creates an array of type clss, which is type T
         final T[] newArray = (T[]) add(array, index, element, clss);

6: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-35_Buggy\\src\\org\\apache\\commons\\lang3\\ArrayUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-35_Manual\\src\\org\\apache\\commons\\lang3\\ArrayUtils.java"	
@@ -3292,7 +3292,7 @@ public class ArrayUtils {
         } else if (element != null) {
             type = element.getClass();
         } else {
-            type = Object.class;
+            throw new IllegalArgumentException("Arguments cannot both be null");            
         }
         @SuppressWarnings("unchecked") // type must be T
         T[] newArray = (T[]) copyArrayGrow1(array, type);
@@ -3571,7 +3571,7 @@ public class ArrayUtils {
         } else if (element != null) {
             clss = element.getClass();
         } else {
-            return (T[]) new Object[] { null };
+            throw new IllegalArgumentException("Array and element cannot both be null");            
         }
         @SuppressWarnings("unchecked") // the add method creates an array of type clss, which is type T
         final T[] newArray = (T[]) add(array, index, element, clss);

7: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-7_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -450,7 +450,7 @@ public class NumberUtils {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
         if (str.startsWith("--")) {
-            return null;
+if (str.startsWith("--")==true){throw new NumberFormatException();}            return null;
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x

8: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Lang-7_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,6 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
@@ -718,10 +715,13 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
+        if (str.trim().startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
             // to be in specification of class. OS X Java parses it to 
             // a wrong value.
+            throw new NumberFormatException(str + " is not a valid number.");
+        }
         return new BigDecimal(str);
     }
 

9: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-25_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\fitting\\HarmonicFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-25_Auto\\src\\org\\apache\\commons\\math3\\optimization\\fitting\\HarmonicFitter.java"	
@@ -322,7 +322,7 @@ public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {
             } else {
                     // In some ill-conditioned cases (cf. MATH-844), the guesser
                     // procedure cannot produce sensible results.
-
+if (c2==0.0){throw new MathIllegalStateException();}
                 a = FastMath.sqrt(c1 / c2);
                 omega = FastMath.sqrt(c2 / c3);
             }

10: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-25_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\fitting\\HarmonicFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-25_Manual\\src\\org\\apache\\commons\\math3\\optimization\\fitting\\HarmonicFitter.java"	
@@ -320,8 +320,11 @@ public class HarmonicFitter extends CurveFitter<HarmonicOscillator.Parametric> {
                 }
                 a = 0.5 * (yMax - yMin);
             } else {
+                if (c2 == 0) {
                     // In some ill-conditioned cases (cf. MATH-844), the guesser
                     // procedure cannot produce sensible results.
+                    throw new MathIllegalStateException(LocalizedFormats.ZERO_DENOMINATOR);
+                }
 
                 a = FastMath.sqrt(c1 / c2);
                 omega = FastMath.sqrt(c2 / c3);

11: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -112,8 +112,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
 
         if (minRatioPositions.size() == 0) {
             return null;
-        } else if (minRatioPositions.size() > 1) {
-            // there's a degeneracy as indicated by a tie in the minimum ratio test
+} else if (minRatioPositions.size() > 1&&!(minRatioPositions.size()>(double)0.0)) {            // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
                 for (Integer row : minRatioPositions) {

12: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

13: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-35_Auto\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -49,6 +49,8 @@ public class ElitisticListPopulation extends ListPopulation {
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
         this.elitismRate = elitismRate;
+      if (elitismRate>(double)1.0){throw new OutOfRangeException(null,null,null);}
+      if (elitismRate<(double)0.0){throw new OutOfRangeException(null,null,null);}
     }
 
     /**
@@ -63,6 +65,8 @@ public class ElitisticListPopulation extends ListPopulation {
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
         super(populationLimit);
         this.elitismRate = elitismRate;
+      if (elitismRate>(double)1.0){throw new OutOfRangeException(null,null,null);}
+      if (elitismRate<(double)0.0){throw new OutOfRangeException(null,null,null);}
     }
 
     /**

14: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-35_Manual\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -48,7 +48,7 @@ public class ElitisticListPopulation extends ListPopulation {
                                    final int populationLimit,
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**
@@ -62,7 +62,7 @@ public class ElitisticListPopulation extends ListPopulation {
      */
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
         super(populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**

15: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-3_Buggy\\src\\org\\apache\\commons\\math3\\util\\MathArrays.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-3_Auto\\src\\org\\apache\\commons\\math3\\util\\MathArrays.java"	
@@ -843,7 +843,7 @@ public class MathArrays {
 
 
         final double prodHighCur = prodHigh[0];
-        double prodHighNext = prodHigh[1];
+if (len==1.0){return a[0] * b[0];}        double prodHighNext = prodHigh[1];
         double sHighPrev = prodHighCur + prodHighNext;
         double sPrime = sHighPrev - prodHighNext;
         double sLowSum = (prodHighNext - (sHighPrev - sPrime)) + (prodHighCur - sPrime);

16: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-3_Buggy\\src\\org\\apache\\commons\\math3\\util\\MathArrays.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-3_Manual\\src\\org\\apache\\commons\\math3\\util\\MathArrays.java"	
@@ -818,7 +818,10 @@ public class MathArrays {
             throw new DimensionMismatchException(len, b.length);
         }
 
+        if (len == 1) {
             // Revert to scalar multiplication.
+            return a[0] * b[0];
+        }
 
         final double[] prodHigh = new double[len];
         double prodLowSum = 0;

17: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-5_Auto\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -302,7 +302,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+if (this.equals(new Complex(0,0))){return INF;}            return NaN;
         }
 
         if (isInfinite) {

18: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-5_Manual\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -302,7 +302,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+            return INF;
         }
 
         if (isInfinite) {

19: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-73_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-73_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
@@ -134,7 +134,7 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         }
 
 
-        // full Brent algorithm starting with provided initial guess
+if (initial>(double)0.0){throw new IllegalArgumentException();}        // full Brent algorithm starting with provided initial guess
         return solve(f, min, yMin, max, yMax, initial, yInitial);
 
     }

20: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-73_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-73_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
@@ -133,6 +133,10 @@ public class BrentSolver extends UnivariateRealSolverImpl {
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
 
+        if (yMin * yMax > 0) {
+            throw MathRuntimeException.createIllegalArgumentException(
+                  NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
+        }
 
         // full Brent algorithm starting with provided initial guess
         return solve(f, min, yMin, max, yMax, initial, yInitial);

21: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1540,8 +1540,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
+if (end - start > 2&&!(end - start>=(double)0.0)) {                    b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
                         if (b2 == 0.0) {

22: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

23: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,8 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
-                final double ratio = rhs / entry;
+if (MathUtils.compareTo(entry, 0, epsilon) >= 0&&!(MathUtils.compareTo(entry, 0, epsilon)==0.0)) {                final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 

24: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

25: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,8 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
+if (fa * fb >= 0.0 &&!(fa * fb==0.0)) {            throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
                       "final b value={6}, f(a)={7}, f(b)={8}",

26: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

27: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-89_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+if (!(v instanceof Comparable<?>)){throw new IllegalArgumentException();}            addValue((Comparable<?>) v);            
     }
     
     /**

28: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-89_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,11 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
+        if (v instanceof Comparable<?>){
             addValue((Comparable<?>) v);            
+        } else {
+            throw new IllegalArgumentException("Object must implement Comparable");
+        }
     }
     
     /**

29: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-90_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-90_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -130,7 +130,7 @@ public class Frequency implements Serializable {
                 freqTable.put(obj, Long.valueOf(count.longValue() + 1));
             }
         } catch (ClassCastException ex) {   
-            //TreeMap will throw ClassCastException if v is not comparable
+if (!(v instanceof Comparable<?>)){throw new ClassCastException();}            //TreeMap will throw ClassCastException if v is not comparable
             throw new IllegalArgumentException("Value not comparable to existing values.");
         }
     }

30: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-90_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-90_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,6 +107,8 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
+        addValue((Comparable<?>) v);
+    }
     
     /**
      * Adds 1 to the frequency count for v.
@@ -118,6 +120,7 @@ public class Frequency implements Serializable {
      * @param v the value to add.
      * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries
      */
+    public void addValue(Comparable<?>v){
         Object obj = v;
         if (v instanceof Integer) {
            obj = Long.valueOf(((Integer) v).longValue());

31: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-93_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-93_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -25,6 +25,13 @@ import java.util.Arrays;
  * @version $Revision$ $Date$
  */
 public final class MathUtils {
+private static long patch_method(int n){
+  long result=1;
+  for (int i=2; i <= n; i++) {
+    result*=i;
+  }
+  return result;
+}
 
     /** Smallest positive number such that 1 - EPSILON is not numerically equal to 1. */
     public static final double EPSILON = 0x1.0p-53;
@@ -374,7 +381,7 @@ public final class MathUtils {
         if (n < 0) {
             throw new IllegalArgumentException("must have n >= 0 for n!");
         }
-        return Math.floor(Math.exp(factorialLog(n)) + 0.5);
+if (n<(int)20.0){return patch_method(n);}        return Math.floor(Math.exp(factorialLog(n)) + 0.5);
     }
 
     /**

32: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-93_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-93_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -342,8 +342,10 @@ public final class MathUtils {
      * @throws IllegalArgumentException if n < 0
      */
     public static long factorial(final int n) {
-        long result = Math.round(factorialDouble(n));
-        if (result == Long.MAX_VALUE) {
+        if (n < 0) {
+            throw new IllegalArgumentException("must have n >= 0 for n!");
+        }
+        if (n > 20) {
             throw new ArithmeticException(
                     "factorial value is too large to fit in a long");
         }
@@ -374,6 +376,9 @@ public final class MathUtils {
         if (n < 0) {
             throw new IllegalArgumentException("must have n >= 0 for n!");
         }
+        if (n < 21) {
+            return factorial(n);
+        }
         return Math.floor(Math.exp(factorialLog(n)) + 0.5);
     }
 
@@ -394,6 +399,9 @@ public final class MathUtils {
         if (n < 0) {
             throw new IllegalArgumentException("must have n > 0 for n!");
         }
+        if (n < 21) {
+            return Math.log(factorial(n));
+        }
         double logSum = 0;
         for (int i = 2; i <= n; i++) {
             logSum += Math.log((double)i);

33: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-97_Buggy\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-97_Auto\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
@@ -135,8 +135,7 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
-            // check if either value is close to a zero
+if (sign >= 0&&!(sign<=(double)0.6)) {            // check if either value is close to a zero
                 // neither value is close to zero and min and max do not bracket root.
                 throw new IllegalArgumentException
                 ("Function values at endpoints do not have different signs." +

34: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-97_Buggy\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-97_Manual\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
@@ -135,17 +135,31 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
+        if (sign > 0) {
             // check if either value is close to a zero
+            if (Math.abs(yMin) <= functionValueAccuracy) {
+                setResult(min, 0);
+                ret = min;
+            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                setResult(max, 0);
+                ret = max;
+            } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw new IllegalArgumentException
                 ("Function values at endpoints do not have different signs." +
                         "  Endpoints: [" + min + "," + max + "]" + 
                         "  Values: [" + yMin + "," + yMax + "]");
-        } else {
+            }
+        } else if (sign < 0){
             // solve using only the first endpoint as initial guess
             ret = solve(min, yMin, max, yMax, min, yMin);
+        } else {
             // either min or max is a root
+            if (yMin == 0.0) {
+                ret = min;
+            } else {
+                ret = max;
+            }
         }
 
         return ret;

35: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-99_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-99_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -540,7 +540,7 @@ public final class MathUtils {
         int u = p;
         int v = q;
         if ((u == 0) || (v == 0)) {
-            return (Math.abs(u) + Math.abs(v));
+if (u==Integer.MIN_VALUE){throw new ArithmeticException();}if (v==Integer.MIN_VALUE){throw new ArithmeticException();}            return (Math.abs(u) + Math.abs(v));
         }
         // keep u and v negative, as negative integers range down to
         // -2^31, while positive numbers can only be as large as 2^31-1
@@ -711,7 +711,7 @@ public final class MathUtils {
             return 0;
         }
         int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));
-        return lcm;
+if (lcm==Integer.MIN_VALUE){throw new ArithmeticException();}        return lcm;
     }
 
     /** 

36: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-99_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Math-99_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -540,6 +540,11 @@ public final class MathUtils {
         int u = p;
         int v = q;
         if ((u == 0) || (v == 0)) {
+            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
+                throw MathRuntimeException.createArithmeticException(
+                        "overflow: gcd({0}, {1}) is 2^31",
+                        new Object[] { p, q });
+            }
             return (Math.abs(u) + Math.abs(v));
         }
         // keep u and v negative, as negative integers range down to
@@ -711,6 +716,9 @@ public final class MathUtils {
             return 0;
         }
         int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));
+        if (lcm == Integer.MIN_VALUE){
+            throw new ArithmeticException("overflow: lcm is 2^31");
+        }
         return lcm;
     }
 

37: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Time-15_Buggy\\src\\org\\joda\\time\\field\\FieldUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Time-15_Auto\\src\\org\\joda\\time\\field\\FieldUtils.java"	
@@ -135,7 +135,7 @@ public class FieldUtils {
     public static long safeMultiply(long val1, int val2) {
         switch (val2) {
             case -1:
-                return -val1;
+if (val1==Long.MIN_VALUE){throw new ArithmeticException();}                return -val1;
             case 0:
                 return 0L;
             case 1:

38: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Time-15_Buggy\\src\\org\\joda\\time\\field\\FieldUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ACS_Time-15_Manual\\src\\org\\joda\\time\\field\\FieldUtils.java"	
@@ -135,6 +135,9 @@ public class FieldUtils {
     public static long safeMultiply(long val1, int val2) {
         switch (val2) {
             case -1:
+                if (val1 == Long.MIN_VALUE) {
+                    throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+                }
                 return -val1;
             case 0:
                 return 0L;

39: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-12_Auto\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

40: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-12_Manual\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

41: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-13_Auto\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -319,7 +319,8 @@ public class BorderArrangement implements Arrangement, Serializable {
             w[4] = size.width;
             h[4] = size.height;
         }
-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
+        this.rightBlock = null;
+		double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
         return arrange(container, g2, new RectangleConstraint(width, height));
     }
 

42: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-13_Manual\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

43: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,9 +1794,6 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
-        }
         int seriesCount = dataset.getRowCount();
         if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
             for (int i = 0; i < seriesCount; i++) {

44: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

45: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-3_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -580,17 +580,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
         Class c = item.getPeriod().getClass();
         if (this.timePeriodClass == null) {
             this.timePeriodClass = c;
-        }
-        else if (!this.timePeriodClass.equals(c)) {
-            StringBuffer b = new StringBuffer();
-            b.append("You are trying to add data where the time period class ");
-            b.append("is ");
-            b.append(item.getPeriod().getClass().getName());
-            b.append(", but the TimeSeries is expecting an instance of ");
-            b.append(this.timePeriodClass.getName());
-            b.append(".");
-            throw new SeriesException(b.toString());
-        }
+        } else
+			findBoundsByIteration();
 
         // make the change (if it's not a duplicate time period)...
         boolean added = false;
@@ -664,7 +655,10 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
     public void add(RegularTimePeriod period, double value, boolean notify) {
         // defer argument checking...
         TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);
-        add(item, notify);
+        if (notify) {
+			fireSeriesChanged();
+		}
+		add(item, notify);
     }
 
     /**

46: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-3_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -1054,6 +1054,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+        copy.minY = Double.NaN;
+        copy.maxY = Double.NaN;
         copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {

47: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -556,17 +556,8 @@ public class XYSeries extends Series implements Cloneable, Serializable {
             existing.setY(y);
         }
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
-            if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
-            }
-            else {
-                this.data.add(new XYDataItem(x, y));
-            }
-            // check if this addition will exceed the maximum item count...
+            this.data.add(new XYDataItem(x, y));
+			// check if this addition will exceed the maximum item count...
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }

48: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

49: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-7_Auto\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -314,7 +314,8 @@ public class TimePeriodValues extends Series implements Serializable {
             long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
                 .getTime();
             if (end < minEnd) {
-                this.minEndIndex = index;           
+                this.data.remove(index);
+				this.minEndIndex = index;           
             }
         }
         else {

50: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Chart-7_Manual\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,9 +297,9 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
                 .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
                 .getTime();
             long maxMiddle = s + (e - s) / 2;
             if (middle > maxMiddle) {

51: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-112_Auto\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1068,48 +1068,8 @@ class TypeInference
       for (JSType alernative : unionType.getAlternates()) {
         maybeResolveTemplatedType(alernative, argType, resolvedTypes);
       }
-    } else if (paramType.isFunctionType()) {
-      FunctionType paramFunctionType = paramType.toMaybeFunctionType();
-      FunctionType argFunctionType = argType
-          .restrictByNotNullOrUndefined()
-          .collapseUnion()
-          .toMaybeFunctionType();
-      if (argFunctionType != null && argFunctionType.isSubtype(paramType)) {
-        // infer from return type of the function type
-        maybeResolveTemplatedType(
-            paramFunctionType.getTypeOfThis(),
-            argFunctionType.getTypeOfThis(), resolvedTypes);
-        // infer from return type of the function type
-        maybeResolveTemplatedType(
-            paramFunctionType.getReturnType(),
-            argFunctionType.getReturnType(), resolvedTypes);
-        // infer from parameter types of the function type
-        maybeResolveTemplateTypeFromNodes(
-            paramFunctionType.getParameters(),
-            argFunctionType.getParameters(), resolvedTypes);
-      }
-    } else if (paramType.isTemplatizedType()) {
-      // @param {Array.<T>}
-      ObjectType referencedParamType = paramType
-          .toMaybeTemplatizedType()
-          .getReferencedType();
-      JSType argObjectType = argType
-          .restrictByNotNullOrUndefined()
-          .collapseUnion();
-
-      if (argObjectType.isSubtype(referencedParamType)) {
-        // If the argument type is a subtype of the parameter type, resolve any
-        // template types amongst their templatized types.
-        TemplateTypeMap paramTypeMap = paramType.getTemplateTypeMap();
-        TemplateTypeMap argTypeMap = argObjectType.getTemplateTypeMap();
-        for (TemplateType key : paramTypeMap.getTemplateKeys()) {
-          maybeResolveTemplatedType(
-              paramTypeMap.getTemplateType(key),
-              argTypeMap.getTemplateType(key),
-              resolvedTypes);
-        }
-      }
-    }
+    } else
+		;
   }
 
   private void maybeResolveTemplateTypeFromNodes(
@@ -1356,7 +1316,7 @@ class TypeInference
         TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();
         TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(
             registry, typeMap);
-        propertyType = propertyType.visit(replacer);
+        return null;
       }
     }
 

52: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-112_Manual\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1189,9 +1189,15 @@ class TypeInference
     }
 
     // Try to infer the template types
-    Map<TemplateType, JSType> inferred = 
-        inferTemplateTypesFromParameters(fnType, n);
-
+    Map<TemplateType, JSType> inferred = Maps.filterKeys(
+        inferTemplateTypesFromParameters(fnType, n),
+        new Predicate<TemplateType>() {
+
+          @Override
+          public boolean apply(TemplateType key) {
+            return keys.contains(key);
+          }}
+        );
 
     // Replace all template types. If we couldn't find a replacement, we
     // replace it with UNKNOWN.

53: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-114_Buggy\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-114_Auto\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
@@ -1596,22 +1596,6 @@ final class NameAnalyzer implements CompilerPass {
     // Function expression.  try to get a name from the parent var
     // declaration or assignment.
     Node parent = function.getParent();
-    if (parent != null) {
-      // Account for functions defined in the form:
-      //   var a = cond ? function a() {} : function b() {};
-      while (parent.isHook()) {
-        parent = parent.getParent();
-      }
-
-      if (parent.isName()) {
-        return scopes.get(parent);
-      }
-
-      if (parent.isAssign()) {
-        return scopes.get(parent);
-      }
-    }
-
     return Collections.emptyList();
   }
 

54: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-114_Buggy\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-114_Manual\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
@@ -575,7 +575,7 @@ final class NameAnalyzer implements CompilerPass {
           } else {
             recordDepScope(nameNode, ns);
           }
-        } else {
+        } else if (!(parent.isCall() && parent.getFirstChild() == n)) {
           // The rhs of the assignment is the caller, so it's used by the
           // context. Don't associate it w/ the lhs.
           // FYI: this fixes only the specific case where the assignment is the

55: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -727,9 +727,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

56: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

57: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-117_Auto\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -725,34 +725,6 @@ class TypeValidator {
 
     // The best type name is the actual type name.
 
-    // If we're analyzing a GETPROP, the property may be inherited by the
-    // prototype chain. So climb the prototype chain and find out where
-    // the property was originally defined.
-    if (n.isGetProp()) {
-      ObjectType objectType = getJSType(n.getFirstChild()).dereference();
-      if (objectType != null) {
-        String propName = n.getLastChild().getString();
-        if (objectType.getConstructor() != null &&
-            objectType.getConstructor().isInterface()) {
-          objectType = FunctionType.getTopDefiningInterface(
-              objectType, propName);
-        } else {
-          // classes
-          while (objectType != null && !objectType.hasOwnProperty(propName)) {
-            objectType = objectType.getImplicitPrototype();
-          }
-        }
-
-        // Don't show complex function names or anonymous types.
-        // Instead, try to get a human-readable type name.
-        if (objectType != null &&
-            (objectType.getConstructor() != null ||
-             objectType.isFunctionPrototypeType())) {
-          return objectType.toString() + "." + propName;
-        }
-      }
-    }
-
     JSType type = getJSType(n);
     if (dereference) {
       ObjectType dereferenced = type.dereference();

58: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-117_Manual\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -722,8 +722,20 @@ class TypeValidator {
    *     to an Object type, if possible.
    */
   String getReadableJSTypeName(Node n, boolean dereference) {
+    JSType type = getJSType(n);
+    if (dereference) {
+      ObjectType dereferenced = type.dereference();
+      if (dereferenced != null) {
+        type = dereferenced;
+      }
+    }
 
     // The best type name is the actual type name.
+    if (type.isFunctionPrototypeType() ||
+        (type.toObjectType() != null &&
+         type.toObjectType().getConstructor() != null)) {
+      return type.toString();
+    }
 
     // If we're analyzing a GETPROP, the property may be inherited by the
     // prototype chain. So climb the prototype chain and find out where
@@ -753,18 +765,6 @@ class TypeValidator {
       }
     }
 
-    JSType type = getJSType(n);
-    if (dereference) {
-      ObjectType dereferenced = type.dereference();
-      if (dereferenced != null) {
-        type = dereferenced;
-      }
-    }
-    if (type.isFunctionPrototypeType() ||
-        (type.toObjectType() != null &&
-         type.toObjectType().getConstructor() != null)) {
-      return type.toString();
-    }
     String qualifiedName = n.getQualifiedName();
     if (qualifiedName != null) {
       return qualifiedName;

59: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-124_Auto\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -174,7 +174,6 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
             // Dive down the right side of the assign.
             parent = next;
             next = leftSide.getNext();
-            break;
           } else {
             return false;
           }

60: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-124_Manual\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -210,7 +210,9 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
     }
     Preconditions.checkArgument(node.isGetProp());
 
+    while (node.isGetProp()) {
       node = node.getFirstChild();
+    }
     if (node.isName()
         && isNameAssignedTo(node.getString(), replacement)) {
       return false;

61: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-125_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,12 +1658,6 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
-        visitParameterList(t, n, fnType);
-        ensureTyped(t, n, fnType.getInstanceType());
-      } else {
-        ensureTyped(t, n);
-      }
     } else {
       report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);

62: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-125_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,7 +1658,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
+      if (fnType != null && fnType.hasInstanceType()) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {

63: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -117,7 +117,8 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       if (n == parent.getLastChild()) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
+          if (ancestorType == Token.COMMA)
+			break;
           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
           else break;
         }

64: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

65: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -95,38 +95,6 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       return;
     }
 
-    // Do not try to remove a block or an expr result. We already handle
-    // these cases when we visit the child, and the peephole passes will
-    // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
-      return;
-        }
-    }
-
-    // This no-op statement was there so that JSDoc information could
-    // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
-      return;
-      }
-    }
-
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&

66: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

67: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-33_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -555,27 +555,6 @@ class PrototypeObjectType extends ObjectType {
   public void matchConstraint(ObjectType constraintObj) {
     // We only want to match contraints on anonymous types.
 
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraintObj {{prop: (number|undefined)}}
-    // function f(constraintObj) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
-    if (constraintObj.isRecordType()) {
-      for (String prop : constraintObj.getOwnPropertyNames()) {
-        JSType propType = constraintObj.getPropertyType(prop);
-        if (!isPropertyTypeDeclared(prop)) {
-          JSType typeToInfer = propType;
-          if (!hasProperty(prop)) {
-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)
-                .getLeastSupertype(propType);
-          }
-          defineInferredProperty(prop, typeToInfer, null);
-        }
-      }
-    }
+    
   }
 }
\ No newline at end of file

68: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-33_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -554,6 +554,9 @@ class PrototypeObjectType extends ObjectType {
   @Override
   public void matchConstraint(ObjectType constraintObj) {
     // We only want to match contraints on anonymous types.
+    if (hasReferenceName()) {
+      return;
+    }
 
     // Handle the case where the constraint object is a record type.
     //

69: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-3_Auto\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -152,20 +152,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
-        c.inlineVariable();
-
-        // If definition c has dependencies, then inlining it may have
-        // introduced new dependencies for our other inlining candidates.
-        //
-        // MustBeReachingVariableDef uses this dependency graph in its
-        // analysis, so some of these candidates may no longer be valid.
-        // We keep track of when the variable dependency graph changed
-        // so that we can back off appropriately.
-        if (!c.defMetadata.depends.isEmpty()) {
-          inlinedNewDependencies.add(t.getScope().getVar(c.varName));
-        }
-      }
+      break;
     }
   }
 

70: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-3_Manual\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -152,7 +152,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
+      if (c.canInline(t.getScope())) {
         c.inlineVariable();
 
         // If definition c has dependencies, then inlining it may have
@@ -277,7 +277,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
       return defMetadata.node;
     }
 
-    private boolean canInline() {
+    private boolean canInline(final Scope scope) {
       // Cannot inline a parameter.
       if (getDefCfgNode().isFunction()) {
         return false;
@@ -372,6 +372,12 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
                   case Token.REGEXP:
                   case Token.NEW:
                     return true;
+                  case Token.NAME:
+                    Var var = scope.getOwnSlot(input.getString());
+                    if (var != null
+                        && var.getParentNode().isCatch()) {
+                      return true;
+                    }
                 }
                 return false;
               }

71: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-55_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -114,7 +114,7 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return false;
   }
 
   /**

72: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-55_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -114,7 +114,8 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return NodeUtil.isFunctionExpression(n)
+        && !NodeUtil.isGetOrSetKey(n.getParent());
   }
 
   /**

73: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-86_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2459,10 +2459,7 @@ public final class NodeUtil {
             || isToStringMethodCall(value)
             || locals.apply(value);
       case Token.NEW:
-        // TODO(nicksantos): This needs to be changed so that it
-        // returns true iff we're sure the value was never aliased from inside
-        // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

74: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-86_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2462,7 +2462,7 @@ public final class NodeUtil {
         // TODO(nicksantos): This needs to be changed so that it
         // returns true iff we're sure the value was never aliased from inside
         // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

75: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-88_Buggy\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-88_Auto\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
@@ -324,10 +324,6 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
-        // The expression to which the assignment is made is evaluated before
-        // the RHS is evaluated (normal left to right evaluation) but the KILL
-        // occurs after the RHS is evaluated.
-        return VariableLiveness.KILL;
       } else {
         return VariableLiveness.READ;
       }

76: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-88_Buggy\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-88_Manual\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
@@ -324,9 +324,15 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
+        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
         // The expression to which the assignment is made is evaluated before
         // the RHS is evaluated (normal left to right evaluation) but the KILL
         // occurs after the RHS is evaluated.
+        Node rhs = n.getNext();
+        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
+        if (state == VariableLiveness.READ) {
+          return state;
+        }
         return VariableLiveness.KILL;
       } else {
         return VariableLiveness.READ;

77: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-8_Buggy\\src\\com\\google\\javascript\\jscomp\\CollapseVariableDeclarations.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-8_Auto\\src\\com\\google\\javascript\\jscomp\\CollapseVariableDeclarations.java"	
@@ -114,7 +114,6 @@ class CollapseVariableDeclarations implements CompilerPass {
 
     if (!collapses.isEmpty()) {
       applyCollapses();
-      compiler.reportCodeChange();
     }
   }
 
@@ -207,40 +206,5 @@ class CollapseVariableDeclarations implements CompilerPass {
 
 
   private void applyCollapses() {
-    for (Collapse collapse : collapses) {
-
-      Node var = new Node(Token.VAR);
-      var.copyInformationFrom(collapse.startNode);
-      collapse.parent.addChildBefore(var, collapse.startNode);
-
-      boolean redeclaration = false;
-      for (Node n = collapse.startNode; n != collapse.endNode;) {
-        Node next = n.getNext();
-
-        Preconditions.checkState(var.getNext() == n);
-        collapse.parent.removeChildAfter(var);
-
-        if (n.isVar()) {
-          while(n.hasChildren()) {
-            var.addChildToBack(n.removeFirstChild());
-          }
-        } else {
-          Node assign = n.getFirstChild();
-          Node lhs = assign.getFirstChild();
-          Preconditions.checkState(lhs.isName());
-          Node rhs = assign.getLastChild();
-          lhs.addChildToBack(rhs.detachFromParent());
-          var.addChildToBack(lhs.detachFromParent());
-          redeclaration = true;
-        }
-        n = next;
-      }
-
-      if (redeclaration) {
-        JSDocInfo info = new JSDocInfo();
-        info.addSuppression("duplicate");
-        var.setJSDocInfo(info);
-      }
-    }
   }
 }
\ No newline at end of file

78: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-8_Buggy\\src\\com\\google\\javascript\\jscomp\\CollapseVariableDeclarations.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Closure-8_Manual\\src\\com\\google\\javascript\\jscomp\\CollapseVariableDeclarations.java"	
@@ -201,10 +201,14 @@ class CollapseVariableDeclarations implements CompilerPass {
       Var var = s.getVar(lhs.getString());
       return var != null
           && var.getScope() == s
+          && !isNamedParameter(var)
           && !blacklistedVars.contains(var);
     }
   }
 
+  private boolean isNamedParameter(Var v) {
+    return v.getParentNode().isParamList();
+  }
 
   private void applyCollapses() {
     for (Collapse collapse : collapses) {

79: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-16_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -542,7 +542,7 @@ public class NumberUtils {
                     }
                     //$FALL-THROUGH$
                 default :
-                    throw new NumberFormatException(str + " is not a valid number.");
+				return createInteger(str);
 
             }
         } else {

80: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-16_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -455,7 +455,7 @@ public class NumberUtils {
             // a wrong value.
             return null;
         }
-        if (str.startsWith("0x") || str.startsWith("-0x")) {
+        if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             return createInteger(str);
         }   
         char lastChar = str.charAt(str.length() - 1);

81: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-20_Auto\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3295,7 +3295,7 @@ public class StringUtils {
             return EMPTY;
         }
         
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
+        StringBuilder buf = new StringBuilder(256);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {
@@ -3380,7 +3380,7 @@ public class StringUtils {
             return EMPTY;
         }
 
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
+        StringBuilder buf = new StringBuilder(256);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

82: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-20_Manual\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3295,7 +3295,7 @@ public class StringUtils {
             return EMPTY;
         }
         
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {
@@ -3380,7 +3380,7 @@ public class StringUtils {
             return EMPTY;
         }
 
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

83: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-43_Auto\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,7 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+            pos.setIndex(pos.getIndex() + 1);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {

84: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-43_Manual\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,6 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;

85: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-46_Auto\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -241,7 +241,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
-                            out.write('\\');
+					if (escapeSingleQuote) {
+						out.write('\\');
+					}
                         out.write('/');
                         break;
                     default :

86: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-46_Manual\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -83,7 +83,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJava(String str) {
-        return escapeJavaStyleString(str, false);
+        return escapeJavaStyleString(str, false, false);
     }
 
     /**
@@ -99,7 +99,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      */
     public static void escapeJava(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, false);
+        escapeJavaStyleString(out, str, false, false);
     }
 
     /**
@@ -124,7 +124,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJavaScript(String str) {
-        return escapeJavaStyleString(str, true);
+        return escapeJavaStyleString(str, true, true);
     }
 
     /**
@@ -140,7 +140,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      **/
     public static void escapeJavaScript(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, true);
+        escapeJavaStyleString(out, str, true, true);
     }
 
     /**
@@ -151,13 +151,13 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @return the escaped string
      */
-    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
+    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {
         if (str == null) {
             return null;
         }
         try {
             StringWriter writer = new StringWriter(str.length() * 2);
-            escapeJavaStyleString(writer, str, escapeSingleQuotes);
+            escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);
             return writer.toString();
         } catch (IOException ioe) {
             // this should never ever happen while writing to a StringWriter
@@ -175,7 +175,8 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @throws IOException if an IOException occurs
      */
-    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
+    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote,
+            boolean escapeForwardSlash) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
@@ -241,7 +242,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
+                        if (escapeForwardSlash) {
                             out.write('\\');
+                        }
                         out.write('/');
                         break;
                     default :

87: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-50_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-50_Auto\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -282,7 +282,10 @@ public class FastDateFormat extends Format {
             key = new Pair(key, timeZone);
         }
 
-        if (locale != null) {
+        if (locale == null) {
+			locale = Locale.getDefault();
+		}
+		if (locale != null) {
             key = new Pair(key, locale);
         }
 
@@ -290,7 +293,6 @@ public class FastDateFormat extends Format {
         FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
         if (format == null) {
             if (locale == null) {
-                locale = Locale.getDefault();
             }
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
@@ -468,7 +470,8 @@ public class FastDateFormat extends Format {
 
         FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
+            key = new Pair(key, locale);
+			if (locale == null) {
                 locale = Locale.getDefault();
             }
             try {

88: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-50_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-50_Manual\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -282,16 +282,14 @@ public class FastDateFormat extends Format {
             key = new Pair(key, timeZone);
         }
 
-        if (locale != null) {
-            key = new Pair(key, locale);
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
 
+        key = new Pair(key, locale);
 
         FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
                 String pattern = formatter.toPattern();
@@ -462,15 +460,13 @@ public class FastDateFormat extends Format {
         if (timeZone != null) {
             key = new Pair(key, timeZone);
         }
-        if (locale != null) {
-            key = new Pair(key, locale);
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
+        key = new Pair(key, locale);
 
         FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,
                         locale);

89: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-59_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,8 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                buffer = new char[CAPACITY];
+				str.getChars(0, strLen, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

90: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-59_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

91: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -435,7 +435,8 @@ public class DurationFormatUtils {
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
+            end = (Calendar) start.clone();
+			end.add( field, newdiff );
             return newdiff;
         } else {
             return 0;

92: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

93: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -121,7 +121,6 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         int column = i + tableau.getArtificialVariableOffset();
                         final double entry = tableau.getEntry(row, column);
                         if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
-                            return row;
                         }
                     }
                 }

94: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

95: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-35_Auto\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -48,7 +48,9 @@ public class ElitisticListPopulation extends ListPopulation {
                                    final int populationLimit,
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
-        this.elitismRate = elitismRate;
+        if (elitismRate < 0 || elitismRate > 1) {
+			throw new OutOfRangeException(LocalizedFormats.ELITISM_RATE, elitismRate, 0, 1);
+		}
     }
 
     /**
@@ -62,7 +64,10 @@ public class ElitisticListPopulation extends ListPopulation {
      */
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
         super(populationLimit);
-        this.elitismRate = elitismRate;
+        if (elitismRate < 0 || elitismRate > 1) {
+			throw new OutOfRangeException(LocalizedFormats.ELITISM_RATE, elitismRate, 0, 1);
+		}
+		this.elitismRate = elitismRate;
     }
 
     /**

96: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-35_Manual\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -48,7 +48,7 @@ public class ElitisticListPopulation extends ListPopulation {
                                    final int populationLimit,
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**
@@ -62,7 +62,7 @@ public class ElitisticListPopulation extends ListPopulation {
      */
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
         super(populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**

97: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-40_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-40_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
@@ -261,7 +261,8 @@ public class BracketingNthOrderBrentSolver
                         // we have more points before the sign change, drop the lowest point
                         ++start;
                     } else {
-                        // we have more points after sign change, drop the highest point
+                        ++start;
+						// we have more points after sign change, drop the highest point
                         --end;
                     }
 

98: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-40_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-40_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
@@ -232,10 +232,16 @@ public class BracketingNthOrderBrentSolver
             double targetY;
             if (agingA >= MAXIMAL_AGING) {
                 // we keep updating the high bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yB;
+                final int p = agingA - MAXIMAL_AGING;
+                final double weightA = (1 << p) - 1;
+                final double weightB = p + 1;
+                targetY = (weightA * yA - weightB * REDUCTION_FACTOR * yB) / (weightA + weightB);
             } else if (agingB >= MAXIMAL_AGING) {
                 // we keep updating the low bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yA;
+                final int p = agingB - MAXIMAL_AGING;
+                final double weightA = p + 1;
+                final double weightB = (1 << p) - 1;
+                targetY = (weightB * yB - weightA * REDUCTION_FACTOR * yA) / (weightA + weightB);
             } else {
                 // bracketing is balanced, try to find the root itself
                 targetY = 0;

99: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-49_Auto\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -355,7 +355,8 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        checkVectorDimensions(v.length);
+		Iterator iter = res.entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v[iter.key()]);
@@ -367,7 +368,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));
@@ -380,7 +381,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v[iter.key()]);

100: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-49_Manual\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -342,7 +342,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
@@ -355,7 +355,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v[iter.key()]);
@@ -367,7 +367,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));
@@ -380,7 +380,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v[iter.key()]);

101: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -185,7 +185,6 @@ public abstract class BaseSecantSolver
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }
                     break;

102: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

103: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-53_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-53_Auto\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -149,7 +149,9 @@ public class Complex implements FieldElement<Complex>, Serializable  {
      */
     public Complex add(Complex rhs)
         throws NullArgumentException {
-        MathUtils.checkNotNull(rhs);
+        if (isNaN || rhs.isNaN) {
+			return NaN;
+		}
         return createComplex(real + rhs.getReal(),
             imaginary + rhs.getImaginary());
     }

104: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-53_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-53_Manual\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -150,6 +150,9 @@ public class Complex implements FieldElement<Complex>, Serializable  {
     public Complex add(Complex rhs)
         throws NullArgumentException {
         MathUtils.checkNotNull(rhs);
+        if (isNaN || rhs.isNaN) {
+            return NaN;
+        }
         return createComplex(real + rhs.getReal(),
             imaginary + rhs.getImaginary());
     }

105: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-56_Buggy\\src\\org\\apache\\commons\\math\\util\\MultidimensionalCounter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-56_Auto\\src\\org\\apache\\commons\\math\\util\\MultidimensionalCounter.java"	
@@ -237,7 +237,11 @@ public class MultidimensionalCounter implements Iterable<Integer> {
         int idx = 1;
         while (count < index) {
             count += idx;
-            ++idx;
+            while (count < index) {
+				count += idx;
+				++idx;
+			}
+			++idx;
         }
         --idx;
         indices[last] = idx;

106: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-56_Buggy\\src\\org\\apache\\commons\\math\\util\\MultidimensionalCounter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-56_Manual\\src\\org\\apache\\commons\\math\\util\\MultidimensionalCounter.java"	
@@ -234,13 +234,7 @@ public class MultidimensionalCounter implements Iterable<Integer> {
             indices[i] = idx;
         }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
+        indices[last] = index - count;
 
         return indices;
     }

107: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-58_Auto\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**

108: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-58_Manual\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit(guess);
     }
 
     /**

109: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-70_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

110: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-70_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

111: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1059,7 +1059,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 work[l - 2 * pingPong] =
                     Math.min(work[l - 2 * pingPong],
                              Math.min(work[6 + pingPong], work[6 + pingPong]));
-                qMax  = Math.max(qMax, Math.max(work[3 + pingPong], work[7 + pingPong]));
+                dMin = 0.0;
                 dMin  = -0.0;
             }
         }
@@ -1103,7 +1103,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     } else {
                         // early failure. Divide by 4.
                         tau *= 0.25;
-                        tType -= 12;
+                        tType = -8;
                     }
                 } else if (Double.isNaN(dMin)) {
                     tau = 0.0;
@@ -1134,11 +1134,6 @@ public class EigenDecompositionImpl implements EigenDecomposition {
             // flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
-                }
                 j -= 4;
             }
             return true;

112: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

113: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -902,21 +902,6 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
-                            (work[i + 2] <= TOLERANCE_2 * sigma)) {
-                            // insert a split
-                            work[i + 2]  = -sigma;
-                            split        = i / 4;
-                            diagMax      = 0;
-                            offDiagMin   = work[i + 6];
-                            previousEMin = work[i + 7];
-                        } else {
-                            diagMax      = Math.max(diagMax, work[i + 4]);
-                            offDiagMin   = Math.min(offDiagMin, work[i + 2]);
-                            previousEMin = Math.min(previousEMin, work[i + 3]);
-                        }
-                    }
                     work[4 * n0 - 2] = offDiagMin;
                     work[4 * n0 - 1] = previousEMin;
                     i0 = split + 1;
@@ -1539,27 +1524,6 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 }
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
-                // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
-                    a2 = a2 + b2;
-                    for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
-                        if (b2 == 0.0) {
-                            break;
-                        }
-                        b1 = b2;
-                        if (work[i4]  >  work[i4 - 2]) {
-                            return;
-                        }
-                        b2 = b2 * (work[i4] / work[i4 - 2]);
-                        a2 = a2 + b2;
-                        if (100 * Math.max(b2, b1) < a2 || cnst1 < a2)  {
-                            break;
-                        }
-                    }
-                    a2 = cnst3 * a2;
-                }
-
                 if (a2 < cnst1) {
                     tau = gam * (1 - Math.sqrt(a2)) / (1 + a2);
                 } else {

114: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

115: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,12 +87,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
-                return;
-            }
+            break;
 
         }
 

116: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

117: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,15 +195,6 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
-        }
-        
         return new double[]{a, b};
     }
 

118: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

119: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,9 @@ class SimplexTableau implements Serializable {
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                    coefficients[i] = (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()))
+							- (restrictToNonNegative ? 0 : mostNegative);
+					if (tableau.getEntry(basicRow, j) == 1) {
                          coefficients[i] = 0;
                     }
                 }

120: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

121: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-95_Auto\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -143,8 +143,7 @@ public class FDistributionImpl
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+            ret = 0.5;
         return ret;
     }
     

122: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\ARJA_Math-95_Manual\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,12 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double ret = 1.0;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2.0) {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
     

123: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-11_Buggy\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-11_Auto\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
@@ -272,7 +272,7 @@ public class ShapeUtilities {
             return false;
         }
         PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+        PathIterator iterator2 = p2.getPathIterator(null);
         double[] d1 = new double[6];
         double[] d2 = new double[6];
         boolean done = iterator1.isDone() && iterator2.isDone();

124: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-11_Buggy\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-11_Manual\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
@@ -272,7 +272,7 @@ public class ShapeUtilities {
             return false;
         }
         PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+        PathIterator iterator2 = p2.getPathIterator(null);
         double[] d1 = new double[6];
         double[] d2 = new double[6];
         boolean done = iterator1.isDone() && iterator2.isDone();

125: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-19_Auto\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -970,7 +970,10 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
-        int result = this.rangeAxes.indexOf(axis);
+        if (axis == null) {
+    throw new IllegalArgumentException("Null 'axis' argument.");
+}
+int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();
             if (parent instanceof CategoryPlot) {

126: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-19_Manual\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -695,6 +695,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.3
      */
     public int getDomainAxisIndex(CategoryAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         return this.domainAxes.indexOf(axis);
     }
     
@@ -970,6 +973,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();

127: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

128: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

129: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-24_Buggy\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-24_Auto\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
@@ -123,7 +123,7 @@ public class GrayPaintScale
     public Paint getPaint(double value) {
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound 
+        int g = (int) ((v - this.lowerBound) / (this.upperBound 
                 - this.lowerBound) * 255.0);
         return new Color(g, g, g);
     }

130: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-24_Buggy\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-24_Manual\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
@@ -123,7 +123,7 @@ public class GrayPaintScale
     public Paint getPaint(double value) {
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound 
+        int g = (int) ((v - this.lowerBound) / (this.upperBound 
                 - this.lowerBound) * 255.0);
         return new Color(g, g, g);
     }

131: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-25_Auto\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -170,49 +170,7 @@ public class StatisticalBarRenderer extends BarRenderer
         notifyListeners(new RendererChangeEvent(this));
     }
     
-    /**
-     * Draws the bar with its standard deviation line range for a single 
-     * (series, category) data item.
-     *
-     * @param g2  the graphics device.
-     * @param state  the renderer state.
-     * @param dataArea  the data area.
-     * @param plot  the plot.
-     * @param domainAxis  the domain axis.
-     * @param rangeAxis  the range axis.
-     * @param data  the data.
-     * @param row  the row index (zero-based).
-     * @param column  the column index (zero-based).
-     * @param pass  the pass index.
-     */
-    public void drawItem(Graphics2D g2,
-                         CategoryItemRendererState state,
-                         Rectangle2D dataArea,
-                         CategoryPlot plot,
-                         CategoryAxis domainAxis,
-                         ValueAxis rangeAxis,
-                         CategoryDataset data,
-                         int row,
-                         int column,
-                         int pass) {
-
-        // defensive check
-        if (!(data instanceof StatisticalCategoryDataset)) {
-            throw new IllegalArgumentException(
-                "Requires StatisticalCategoryDataset.");
-        }
-        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
-
-        PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
-        }
-    }
+    
                 
     /**
      * Draws an item for a plot with a horizontal orientation.

132: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-25_Manual\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -256,6 +256,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -312,7 +315,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -341,6 +346,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
                                      lowVal, rectY + rectHeight * 0.75);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
@@ -400,6 +406,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR Y
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -456,7 +465,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -484,6 +495,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
                                      rectX + rectWidth / 2.0d + 5.0d, lowVal);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);

133: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-26_Auto\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,14 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
-                EntityCollection entities = owner.getEntityCollection();
+                if (owner != null) {
+	EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+}
+
         }
         return state;
 

134: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-26_Manual\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,13 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
+            if (owner != null) {
                 EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+            }
         }
         return state;
 

135: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-4_Auto\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,7 +4490,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
-                    Collection c = r.getAnnotations();
+                    if (r != null) {
+	Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
                         XYAnnotation a = (XYAnnotation) i.next();
@@ -4498,6 +4499,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+}
+
             }
         }
 

136: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-4_Manual\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,6 +4490,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
+                if (r != null) {
                     Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
@@ -4498,6 +4499,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+                }
             }
         }
 

137: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -524,7 +524,7 @@ public class XYSeries extends Series implements Cloneable, Serializable {
      * @since 1.0.10
      */
     public XYDataItem addOrUpdate(double x, double y) {
-        return addOrUpdate(new Double(x), new Double(y));
+        return addOrUpdate(new Double(y), new Double(y));
     }
 
     /**

138: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

139: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-7_Auto\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,7 +297,7 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxStartIndex).getPeriod().getStart()
                 .getTime();
             long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                 .getTime();

140: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Chart-7_Manual\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,9 +297,9 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
                 .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
                 .getTime();
             long maxMiddle = s + (e - s) / 2;
             if (middle > maxMiddle) {

141: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-108_Buggy\\src\\com\\google\\javascript\\jscomp\\ScopedAliases.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-108_Auto\\src\\com\\google\\javascript\\jscomp\\ScopedAliases.java"	
@@ -419,7 +419,7 @@ class ScopedAliases implements HotSwapCompilerPass {
                 compiler.getCodingConvention(),
                 globalName,
                 value,
-                v.getJSDocInfo())
+                grandparent.getJSDocInfo())
                 .useSourceInfoIfMissingFromForTree(n);
             NodeUtil.setDebugInformation(
                 newDecl.getFirstChild().getFirstChild(), n, name);

142: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-108_Buggy\\src\\com\\google\\javascript\\jscomp\\ScopedAliases.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-108_Manual\\src\\com\\google\\javascript\\jscomp\\ScopedAliases.java"	
@@ -256,6 +256,7 @@ class ScopedAliases implements HotSwapCompilerPass {
     private final Map<String, Var> aliases = Maps.newHashMap();
 
     // Also temporary and cleared for each scope.
+    private final Set<Node> injectedDecls = Sets.newHashSet();
 
     // Suppose you create an alias.
     // var x = goog.x;
@@ -313,6 +314,7 @@ class ScopedAliases implements HotSwapCompilerPass {
 
       if (t.getScopeDepth() == 2) {
         renameNamespaceShadows(t);
+        injectedDecls.clear();
         aliases.clear();
         forbiddenLocals.clear();
         transformation = null;
@@ -429,6 +431,7 @@ class ScopedAliases implements HotSwapCompilerPass {
             } else {
               grandparent.addChildBefore(newDecl, varNode);
             }
+            injectedDecls.add(newDecl.getFirstChild());
           }
 
           // Rewrite "var name = EXPR;" to "var name = $jscomp.scope.name;"
@@ -578,7 +581,7 @@ class ScopedAliases implements HotSwapCompilerPass {
         // When we inject declarations, we duplicate jsdoc. Make sure
         // we only process that jsdoc once.
         JSDocInfo info = n.getJSDocInfo();
-        if (info != null) {
+        if (info != null && !injectedDecls.contains(n)) {
           for (Node node : info.getTypeNodes()) {
             fixTypeNode(node);
           }

143: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -695,13 +695,7 @@ class FunctionInjector {
     Node block = fnNode.getLastChild();
 
     boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
+    
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 

144: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

145: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-11_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,7 +1311,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
+    } else if (n.getJSType() == null && parent.isAssign()) {
       return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {

146: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-11_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,8 +1311,6 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);

147: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -114,7 +114,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       if (isResultUsed) {
         return;
       }
-      if (n == parent.getLastChild()) {
+      if (parent == parent.getLastChild()) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA) continue;

148: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

149: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -108,7 +108,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
+      if (gramps == parent.getLastChild()) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA)

150: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

151: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-2_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1571,7 +1571,8 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     Set<String> currentPropertyNames;
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
-      currentPropertyNames = implicitProto.getOwnPropertyNames();
+      if (implicitProto != null) {
+	currentPropertyNames = implicitProto.getOwnPropertyNames();
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {
@@ -1585,6 +1586,8 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       }
       currentProperties.put(name, interfaceType);
     }
+}
+
     for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
       checkInterfaceConflictProperties(t, n, functionName, properties,
           currentProperties, iType);

152: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-2_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1569,9 +1569,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       ObjectType interfaceType) {
     ObjectType implicitProto = interfaceType.getImplicitPrototype();
     Set<String> currentPropertyNames;
+    if (implicitProto == null) {
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
+      currentPropertyNames = ImmutableSet.of();
+    } else {
       currentPropertyNames = implicitProto.getOwnPropertyNames();
+    }
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {

153: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-38_Auto\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if (x <= 0 && prev == '-') {
       add(" ");
     }
 

154: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-38_Manual\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if ((x < 0 || negativeZero) && prev == '-') {
       add(" ");
     }
 

155: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-45_Buggy\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-45_Auto\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
@@ -732,10 +732,7 @@ class RemoveUnusedVars
           for (Assign assign : assignsByVar.get(var)) {
             if (assign.isPropertyAssign) {
               hasPropertyAssign = true;
-            } else if (!NodeUtil.isLiteralValue(
-                assign.assignNode.getLastChild(), true)) {
-              assignedToUnknownValue = true;
-            }
+            } else assignedToUnknownValue = true;
           }
 
           if (assignedToUnknownValue && hasPropertyAssign) {

156: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-45_Buggy\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-45_Manual\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
@@ -729,6 +729,7 @@ class RemoveUnusedVars
             assignedToUnknownValue = true;
           }
 
+          boolean maybeEscaped = false;
           for (Assign assign : assignsByVar.get(var)) {
             if (assign.isPropertyAssign) {
               hasPropertyAssign = true;
@@ -736,9 +737,12 @@ class RemoveUnusedVars
                 assign.assignNode.getLastChild(), true)) {
               assignedToUnknownValue = true;
             }
+            if (assign.maybeAliased) {
+              maybeEscaped = true;
+            }
           }
 
-          if (assignedToUnknownValue && hasPropertyAssign) {
+          if ((assignedToUnknownValue || maybeEscaped) && hasPropertyAssign) {
             changes = markReferencedVar(var) || changes;
             maybeUnreferenced.remove(current);
             current--;
@@ -901,7 +905,7 @@ class RemoveUnusedVars
       this.nameNode = nameNode;
       this.isPropertyAssign = isPropertyAssign;
 
-      this.maybeAliased = !assignNode.getParent().isExprResult();
+      this.maybeAliased = NodeUtil.isExpressionResultUsed(assignNode);
       this.mayHaveSecondarySideEffects =
           maybeAliased ||
           NodeUtil.mayHaveSideEffects(assignNode.getFirstChild()) ||

157: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-46_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,7 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
+  
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

158: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-46_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,6 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

159: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-48_Buggy\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-48_Auto\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
@@ -1438,7 +1438,7 @@ final class TypedScopeCreator implements ScopeCreator {
       JSType valueType = getDeclaredType(t.getSourceName(), info, n, rhsValue);
       if (valueType == null && rhsValue != null) {
         // Determining type for #5
-        valueType = rhsValue.getJSType();
+        valueType = ownerNode.getJSType();
       }
       // Function prototypes are special.
       // It's a common JS idiom to do:

160: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-48_Buggy\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-48_Manual\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
@@ -1518,11 +1518,14 @@ final class TypedScopeCreator implements ScopeCreator {
             || FunctionTypeBuilder.isFunctionTypeDeclaration(info));
       }
 
-      if (inferred) {
+      if (inferred && rhsValue != null && rhsValue.isFunction()) {
         // Determining declaration for #2
-        inferred = !(rhsValue != null &&
-            rhsValue.isFunction() &&
-            (info != null || !scope.isDeclared(qName, false)));
+        if (info != null) {
+          inferred = false;
+        } else if (!scope.isDeclared(qName, false) &&
+                   n.isUnscopedQualifiedName()) {
+          inferred = false;
+        }
       }
 
       if (!inferred) {

161: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-62_Auto\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

162: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-62_Manual\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

163: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-66_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-66_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1910,7 +1910,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
    * @return a number between 0.0 and 100.0
    */
   double getTypedPercent() {
-    int total = nullCount + unknownCount + typedCount;
+    int total = this.noTypeCheckSection + unknownCount + typedCount;
     if (total == 0) {
       return 0.0;
     } else {

164: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-66_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-66_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -513,7 +513,9 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
         // Object literal keys are handled with OBJECTLIT
         if (!NodeUtil.isObjectLitKey(n, n.getParent())) {
           ensureTyped(t, n, STRING_TYPE);
+        } else {
           // Object literal keys are not typeable
+          typeable = false;
         }
         break;
 

165: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-73_Auto\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

166: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Closure-73_Manual\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

167: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-10_Auto\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -304,13 +304,7 @@ public class FastDateParser implements DateParser, Serializable {
         boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
+            
             wasWhite= false;
             switch(c) {
             case '\'':

168: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-10_Manual\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -301,17 +301,8 @@ public class FastDateParser implements DateParser, Serializable {
      * @return The <code>StringBuilder</code>
      */
     private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {
-        boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
-            wasWhite= false;
             switch(c) {
             case '\'':
                 if(unquote) {

169: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-13_Buggy\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-13_Auto\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
@@ -251,23 +251,7 @@ public class SerializationUtils {
 
         }
 
-        /**
-         * Overriden version that uses the parametrized <code>ClassLoader</code> or the <code>ClassLoader</code>
-         * of the current <code>Thread</code> to resolve the class.
-         * @param desc An instance of class <code>ObjectStreamClass</code>.
-         * @return A <code>Class</code> object corresponding to <code>desc</code>.
-         * @throws IOException Any of the usual Input/Output exceptions.
-         * @throws ClassNotFoundException If class of a serialized object cannot be found.
-         */
-        @Override
-        protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
-            String name = desc.getName();
-            try {
-                return Class.forName(name, false, classLoader);
-            } catch (ClassNotFoundException ex) {
-                    return Class.forName(name, false, Thread.currentThread().getContextClassLoader());
-            }
-        }
+        
 
     }
 

170: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-13_Buggy\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-13_Manual\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
@@ -236,6 +236,8 @@ public class SerializationUtils {
      * class here is a workaround, see the JIRA issue LANG-626. </p>
      */
      static class ClassLoaderAwareObjectInputStream extends ObjectInputStream {
+        private static final Map<String, Class<?>> primitiveTypes = 
+                new HashMap<String, Class<?>>();
         private ClassLoader classLoader;
         
         /**
@@ -249,6 +251,15 @@ public class SerializationUtils {
             super(in);
             this.classLoader = classLoader;
 
+            primitiveTypes.put("byte", byte.class);
+            primitiveTypes.put("short", short.class);
+            primitiveTypes.put("int", int.class);
+            primitiveTypes.put("long", long.class);
+            primitiveTypes.put("float", float.class);
+            primitiveTypes.put("double", double.class);
+            primitiveTypes.put("boolean", boolean.class);
+            primitiveTypes.put("char", char.class);
+            primitiveTypes.put("void", void.class);
         }
 
         /**
@@ -265,7 +276,15 @@ public class SerializationUtils {
             try {
                 return Class.forName(name, false, classLoader);
             } catch (ClassNotFoundException ex) {
+                try {
                     return Class.forName(name, false, Thread.currentThread().getContextClassLoader());
+                } catch (ClassNotFoundException cnfe) {
+                    Class<?> cls = primitiveTypes.get(name);
+                    if (cls != null)
+                        return cls;
+                    else
+                        throw cnfe;
+                }
             }
         }
 

171: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-20_Auto\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3295,7 +3295,7 @@ public class StringUtils {
             return EMPTY;
         }
         
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
+        StringBuilder buf = new StringBuilder((16) + 1);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

172: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-20_Manual\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3295,7 +3295,7 @@ public class StringUtils {
             return EMPTY;
         }
         
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {
@@ -3380,7 +3380,7 @@ public class StringUtils {
             return EMPTY;
         }
 
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

173: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-22_Auto\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -581,7 +581,7 @@ public final class Fraction extends Number implements Comparable<Fraction> {
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(v) <= 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

174: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-22_Manual\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -580,8 +580,14 @@ public final class Fraction extends Number implements Comparable<Fraction> {
      */
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
+        if ((u == 0) || (v == 0)) {
+            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
+                throw new ArithmeticException("overflow: gcd is 2^31");
+            }
+            return Math.abs(u) + Math.abs(v);
+        }
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(u) == 1 || Math.abs(v) == 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

175: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-27_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -485,7 +485,7 @@ public class NumberUtils {
             }
             mant = str.substring(0, decPos);
         } else {
-            if (expPos > -1) {
+            if (expPos < -1) {
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;

176: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-27_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -476,7 +476,7 @@ public class NumberUtils {
         if (decPos > -1) {
 
             if (expPos > -1) {
-                if (expPos < decPos) {
+                if (expPos < decPos || expPos > str.length()) {
                     throw new NumberFormatException(str + " is not a valid number.");
                 }
                 dec = str.substring(decPos + 1, expPos);
@@ -486,6 +486,9 @@ public class NumberUtils {
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
+                if (expPos > str.length()) {
+                    throw new NumberFormatException(str + " is not a valid number.");
+                }
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;

177: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-39_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-39_Auto\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3673,7 +3673,7 @@ public class StringUtils {
 
         // count the replacement text elements that are larger than their corresponding text being replaced
         for (int i = 0; i < searchList.length; i++) {
-            int greater = replacementList[i].length() - searchList[i].length();
+            int greater = searchList[i].length() - searchList[i].length();
             if (greater > 0) {
                 increase += 3 * greater; // assume 3 matches
             }

178: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-39_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-39_Manual\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3673,6 +3673,9 @@ public class StringUtils {
 
         // count the replacement text elements that are larger than their corresponding text being replaced
         for (int i = 0; i < searchList.length; i++) {
+            if (searchList[i] == null || replacementList[i] == null) {
+                continue;
+            }
             int greater = replacementList[i].length() - searchList[i].length();
             if (greater > 0) {
                 increase += 3 * greater; // assume 3 matches

179: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-51_Auto\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -674,11 +674,9 @@ public class BooleanUtils {
                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
                         (str.charAt(2) == 's' || str.charAt(2) == 'S');
                 }
-                if (ch == 'Y') {
-                    return 
+                return 
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
-                }
             }
             case 4: {
                 char ch = str.charAt(0);

180: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-51_Manual\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -679,6 +679,7 @@ public class BooleanUtils {
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
                 }
+                return false;
             }
             case 4: {
                 char ch = str.charAt(0);

181: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-57_Auto\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,7 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        return cAvailableLocaleList.contains(locale);
     }
 
     //
182: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-57_Manual\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,7 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        return availableLocaleList().contains(locale);
     }
 
     //
183: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,7 +451,6 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
                         && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
                         try {
                             return createLong(numeric);

184: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

185: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-59_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

186: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-59_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

187: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -319,7 +319,7 @@ public class DurationFormatUtils {
         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
+        days -= reduceAndCorrect(end, end, Calendar.DAY_OF_MONTH, days);
         months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
         years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 

188: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

189: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-6_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-6_Auto\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
@@ -92,7 +92,7 @@ public abstract class CharSequenceTranslator {
 //          // contract with translators is that they have to understand codepoints 
 //          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos += Character.charCount(Character.codePointAt(input, pt));
             }
         }
     }

190: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-6_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-6_Manual\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
@@ -92,7 +92,7 @@ public abstract class CharSequenceTranslator {
 //          // contract with translators is that they have to understand codepoints 
 //          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos += Character.charCount(Character.codePointAt(input, pt));
             }
         }
     }

191: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-7_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,7 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
+        
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -

192: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Lang-7_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,6 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
@@ -718,10 +715,13 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
+        if (str.trim().startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
             // to be in specification of class. OS X Java parses it to 
             // a wrong value.
+            throw new NumberFormatException(str + " is not a valid number.");
+        }
         return new BigDecimal(str);
     }
 

193: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-104_Buggy\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-104_Auto\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
@@ -159,7 +159,7 @@ public class Gamma implements Serializable {
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (a >= 1.0 && x >= a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);

194: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-104_Buggy\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-104_Manual\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
@@ -34,7 +34,7 @@ public class Gamma implements Serializable {
     private static final long serialVersionUID = -6587513359895466954L;
 
     /** Maximum allowed numerical error. */
-    private static final double DEFAULT_EPSILON = 10e-9;
+    private static final double DEFAULT_EPSILON = 10e-15;
 
     /** Lanczos coefficients */
     private static double[] lanczos =

195: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -135,20 +135,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
-                Integer minRow = null;
-                int minIndex = tableau.getWidth();
-                for (Integer row : minRatioPositions) {
-                    int i = tableau.getNumObjectiveFunctions();
-                    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
-                        if (row == tableau.getBasicRow(i)) {
-                            if (i < minIndex) {
-                                minIndex = i;
-                                minRow = row;
-                            }
-                        }
-                    }
-                }
-                return minRow;
+                
         }
         return minRatioPositions.get(0);
     }

196: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

197: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-33_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, this.epsilon) > 0) {
                 columnsToDrop.add(i);
             }
         }

198: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-33_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, epsilon) > 0) {
                 columnsToDrop.add(i);
             }
         }

199: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,7 +184,7 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
+                    if (fx == x1) {
                         x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }

200: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

201: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-57_Auto\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -96,7 +96,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         assignPointsToClusters(clusters, points);
 
         // iterate through updating the centers until we're done
-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
+        final int max = (maxIterations <= 0) ? Integer.MAX_VALUE : maxIterations;
         for (int count = 0; count < max; count++) {
             boolean clusteringChanged = false;
             List<Cluster<T>> newClusters = new ArrayList<Cluster<T>>();

202: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-57_Manual\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -172,7 +172,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
+            double sum = 0;
             for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
                 final Cluster<T> nearest = getNearestCluster(resultSet, p);

203: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-62_Buggy\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-62_Auto\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
@@ -159,7 +159,7 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
             try {
                 final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
                 final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
-                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
+                optima[i] = optimizer.optimize(f, goal, FastMath.min(min, bound2), FastMath.max(bound1, bound2));
             } catch (FunctionEvaluationException fee) {
                 optima[i] = null;
             } catch (ConvergenceException ce) {

204: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-62_Buggy\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-62_Manual\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
@@ -143,7 +143,7 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
                                                  final GoalType goal,
                                                  final double min, final double max)
         throws FunctionEvaluationException {
-        return optimize(f, goal, min, max, 0);
+        return optimize(f, goal, min, max, min + 0.5 * (max - min));
     }
 
     /** {@inheritDoc} */
@@ -157,9 +157,8 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
         // Multi-start loop.
         for (int i = 0; i < starts; ++i) {
             try {
-                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
-                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
-                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
+                final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
+                optima[i] = optimizer.optimize(f, goal, min, max, s);
             } catch (FunctionEvaluationException fee) {
                 optima[i] = null;
             } catch (ConvergenceException ce) {

205: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * this.pingPong - 1;
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

206: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

207: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1540,7 +1540,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start <= 2) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

208: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

209: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

210: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

211: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,7 +87,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
+            if (comparator.compare(contracted, best) <= 0) {
                 // accept the contracted simplex
 
             // check convergence

212: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

213: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

214: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

215: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                    if (tableau.getEntry(basicRow, i) == 1) {
                          coefficients[i] = 0;
                     }
                 }

216: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

217: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-89_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,12 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+            if (v instanceof Comparable<?>) {
+	addValue((Comparable<?>) v);
+} else {
+	throw new IllegalArgumentException("Illegal argument: v");
+}
+            
     }
     
     /**

218: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-89_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,11 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
+        if (v instanceof Comparable<?>){
             addValue((Comparable<?>) v);            
+        } else {
+            throw new IllegalArgumentException("Object must implement Comparable");
+        }
     }
     
     /**

219: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-95_Auto\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -145,7 +145,7 @@ public class FDistributionImpl
         double d = getDenominatorDegreesOfFreedom();
             // use mean
             ret = d / (d - 2.0);
-        return ret;
+        return d;
     }
     
     /**

220: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Math-95_Manual\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,12 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double ret = 1.0;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2.0) {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
     

221: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-29_Buggy\\src\\org\\mockito\\internal\\matchers\\Same.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-29_Auto\\src\\org\\mockito\\internal\\matchers\\Same.java"	
@@ -26,7 +26,10 @@ public class Same extends ArgumentMatcher<Object> implements Serializable {
     public void describeTo(Description description) {
         description.appendText("same(");
         appendQuoting(description);
-        description.appendText(wanted.toString());
+        if (wanted != null) {
+	description.appendText(wanted.toString());
+}
+
         appendQuoting(description);
         description.appendText(")");
     }

222: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-29_Buggy\\src\\org\\mockito\\internal\\matchers\\Same.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-29_Manual\\src\\org\\mockito\\internal\\matchers\\Same.java"	
@@ -26,7 +26,7 @@ public class Same extends ArgumentMatcher<Object> implements Serializable {
     public void describeTo(Description description) {
         description.appendText("same(");
         appendQuoting(description);
-        description.appendText(wanted.toString());
+        description.appendText(wanted == null ? "null" : wanted.toString());
         appendQuoting(description);
         description.appendText(")");
     }

223: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-38_Buggy\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-38_Auto\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
@@ -45,6 +45,9 @@ public class ArgumentMatchingTool {
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
-        return StringDescription.toString(m).equals(arg.toString());
+        if (arg == null) {
+    return false;
+}
+return StringDescription.toString(m).equals(arg.toString());
     }
 }
\ No newline at end of file

224: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-38_Buggy\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Mockito-38_Manual\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
@@ -45,6 +45,6 @@ public class ArgumentMatchingTool {
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
-        return StringDescription.toString(m).equals(arg.toString());
+        return StringDescription.toString(m).equals(arg == null? "null" : arg.toString());
     }
 }
\ No newline at end of file

225: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Time-18_Buggy\\src\\org\\joda\\time\\chrono\\GJChronology.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Time-18_Auto\\src\\org\\joda\\time\\chrono\\GJChronology.java"	
@@ -347,35 +347,7 @@ public final class GJChronology extends AssembledChronology {
         return instant;
     }
 
-    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
-                                  int hourOfDay, int minuteOfHour,
-                                  int secondOfMinute, int millisOfSecond)
-        throws IllegalArgumentException
-    {
-        Chronology base;
-        if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        }
-
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
-                throw new IllegalArgumentException("Specified date does not exist");
-            }
-        }
-        return instant;
-    }
+    
 
     /**
      * Gets the cutover instant between Gregorian and Julian chronologies.

226: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Time-18_Buggy\\src\\org\\joda\\time\\chrono\\GJChronology.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\AVATAR_Time-18_Manual\\src\\org\\joda\\time\\chrono\\GJChronology.java"	
@@ -361,9 +361,21 @@ public final class GJChronology extends AssembledChronology {
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalFieldValueException ex) {
+            if (monthOfYear != 2 || dayOfMonth != 29) {
+                throw ex;
+            }
+            instant = iGregorianChronology.getDateTimeMillis
+                (year, monthOfYear, 28,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant >= iCutoverMillis) {
+                throw ex;
+            }
+        }
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis

227: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-13_Auto\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -441,13 +441,15 @@ public class BorderArrangement implements Arrangement, Serializable {
             h[1] = size.height;
         }
         h[2] = constraint.getHeight() - h[1] - h[0];
-        if (this.leftBlock != null) {
-            RectangleConstraint c3 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth()),
-                    LengthConstraintType.RANGE, h[2], null,
-                    LengthConstraintType.FIXED);
-            Size2D size = this.leftBlock.arrange(g2, c3);
-            w[2] = size.width;
+        if (false) {
+            if (this.leftBlock != null) {
+                RectangleConstraint c3 = new RectangleConstraint(0.0,
+                new Range(0.0, constraint.getWidth()),
+                LengthConstraintType.RANGE, h[2], null,
+                LengthConstraintType.FIXED);
+                Size2D size = this.leftBlock.arrange(g2, c3);
+                w[2] = size.width;
+            }
         }
         h[3] = h[2];
         if (this.rightBlock != null) {

228: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-13_Manual\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

229: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,8 +1794,10 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
+        if (false) {
+            if (dataset != null) {
+                return result;
+            }
         }
         int seriesCount = dataset.getRowCount();
         if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {

230: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

231: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-25_Auto\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -204,13 +204,15 @@ public class StatisticalBarRenderer extends BarRenderer
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
+        if (false) {
+            if (orientation == PlotOrientation.HORIZONTAL) {
+                drawHorizontalItem(g2, state, dataArea, plot, domainAxis,
+                rangeAxis, statData, row, column);
+            }
+            else if (orientation == PlotOrientation.VERTICAL) {
+                drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis,
+                statData, row, column);
+            }
         }
     }
                 

232: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-25_Manual\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -256,6 +256,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -312,7 +315,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -341,6 +346,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
                                      lowVal, rectY + rectHeight * 0.75);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
@@ -400,6 +406,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR Y
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -456,7 +465,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -484,6 +495,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
                                      rectX + rectWidth / 2.0d + 5.0d, lowVal);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);

233: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -560,7 +560,7 @@ public class XYSeries extends Series implements Cloneable, Serializable {
             // Collections.binarySearch() and tells us where to insert the
             // new item...otherwise it will be just -1 and we should just
             // append the value to the list...
-            if (this.autoSort) {
+            if (false) {
                 this.data.add(-index - 1, new XYDataItem(x, y));
             }
             else {

234: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

235: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-46_Auto\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -241,7 +241,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
-                            out.write('\\');
+                            if (escapeSingleQuote) {
+                                out.write('\\');
+                            }
                         out.write('/');
                         break;
                     default :

236: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-46_Manual\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -83,7 +83,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJava(String str) {
-        return escapeJavaStyleString(str, false);
+        return escapeJavaStyleString(str, false, false);
     }
 
     /**
@@ -99,7 +99,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      */
     public static void escapeJava(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, false);
+        escapeJavaStyleString(out, str, false, false);
     }
 
     /**
@@ -124,7 +124,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJavaScript(String str) {
-        return escapeJavaStyleString(str, true);
+        return escapeJavaStyleString(str, true, true);
     }
 
     /**
@@ -140,7 +140,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      **/
     public static void escapeJavaScript(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, true);
+        escapeJavaStyleString(out, str, true, true);
     }
 
     /**
@@ -151,13 +151,13 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @return the escaped string
      */
-    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
+    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {
         if (str == null) {
             return null;
         }
         try {
             StringWriter writer = new StringWriter(str.length() * 2);
-            escapeJavaStyleString(writer, str, escapeSingleQuotes);
+            escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);
             return writer.toString();
         } catch (IOException ioe) {
             // this should never ever happen while writing to a StringWriter
@@ -175,7 +175,8 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @throws IOException if an IOException occurs
      */
-    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
+    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote,
+            boolean escapeForwardSlash) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
@@ -241,7 +242,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
+                        if (escapeForwardSlash) {
                             out.write('\\');
+                        }
                         out.write('/');
                         break;
                     default :

237: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-51_Auto\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -669,10 +669,10 @@ public class BooleanUtils {
             }
             case 3: {
                 char ch = str.charAt(0);
-                if (ch == 'y') {
-                    return 
-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');
+                if (true) {
+                    return
+                    (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
+                    (str.charAt(2) == 's' || str.charAt(2) == 'S');
                 }
                 if (ch == 'Y') {
                     return 

238: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-51_Manual\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -679,6 +679,7 @@ public class BooleanUtils {
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
                 }
+                return false;
             }
             case 4: {
                 char ch = str.charAt(0);

239: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-55_Buggy\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-55_Auto\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
@@ -115,7 +115,9 @@ public class StopWatch {
         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {
             throw new IllegalStateException("Stopwatch is not running. ");
         }
-            stopTime = System.currentTimeMillis();
+            if (this.runningState == 1) {
+                stopTime = System.currentTimeMillis();
+            }
         this.runningState = STATE_STOPPED;
     }
 

240: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-55_Buggy\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-55_Manual\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
@@ -115,7 +115,9 @@ public class StopWatch {
         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {
             throw new IllegalStateException("Stopwatch is not running. ");
         }
+        if(this.runningState == STATE_RUNNING) {
             stopTime = System.currentTimeMillis();
+        }
         this.runningState = STATE_STOPPED;
     }
 

241: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -449,17 +449,14 @@ public class NumberUtils {
             switch (lastChar) {
                 case 'l' :
                 case 'L' :
-                    if (dec == null
-                        && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                    if (exp == dec) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {
                             //Too big for a long
                         }
                         return createBigInteger(numeric);
-
+                        
                     }
                     throw new NumberFormatException(str + " is not a valid number.");
                 case 'f' :

242: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

243: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -435,7 +435,9 @@ public class DurationFormatUtils {
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
+            if (false) {
+                end.add( field, newdiff );
+            }
             return newdiff;
         } else {
             return 0;

244: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

245: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-101_Buggy\\src\\org\\apache\\commons\\math\\complex\\ComplexFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-101_Auto\\src\\org\\apache\\commons\\math\\complex\\ComplexFormat.java"	
@@ -375,8 +375,7 @@ public class ComplexFormat extends Format implements Serializable {
         startIndex = pos.getIndex();
         int endIndex = startIndex + n;
         if (
-            source.substring(startIndex, endIndex).compareTo(
-            getImaginaryCharacter()) != 0) {
+            startIndex == source.length()) {
             // set index back to initial, error index should be the start index
             // character examined.
             pos.setIndex(initialIndex);

246: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-101_Buggy\\src\\org\\apache\\commons\\math\\complex\\ComplexFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-101_Manual\\src\\org\\apache\\commons\\math\\complex\\ComplexFormat.java"	
@@ -374,7 +374,8 @@ public class ComplexFormat extends Format implements Serializable {
         int n = getImaginaryCharacter().length();
         startIndex = pos.getIndex();
         int endIndex = startIndex + n;
-        if (
+        if ((startIndex >= source.length()) ||
+            (endIndex > source.length()) ||
             source.substring(startIndex, endIndex).compareTo(
             getImaginaryCharacter()) != 0) {
             // set index back to initial, error index should be the start index

247: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-105_Buggy\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-105_Auto\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
@@ -104,7 +104,9 @@ public class SimpleRegression implements Serializable {
      */
     public void addData(double x, double y) {
         if (n == 0) {
-            xbar = x;
+            if ((x <= 1) || (y <= x)) {
+                xbar = x;
+            }
             ybar = y;
         } else {
             double dx = x - xbar;

248: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-105_Buggy\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-105_Manual\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
@@ -261,7 +261,7 @@ public class SimpleRegression implements Serializable {
      * @return sum of squared errors associated with the regression model
      */
     public double getSumSquaredErrors() {
-        return sumYY - sumXY * sumXY / sumXX;
+        return Math.max(0d, sumYY - sumXY * sumXY / sumXX);
     }
 
     /**

249: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-20_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-20_Auto\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -784,7 +784,7 @@ public class CMAESOptimizer
                 C = C.add(eye(dimension, dimension).scalarMultiply(tfac));
                 diagD = diagD.add(ones(dimension, 1).scalarMultiply(tfac));
             }
-            if (max(diagD) > 1e14 * min(diagD)) {
+            if (this.dimension == 1) {
                 double tfac = max(diagD) / 1e14 - min(diagD);
                 C = C.add(eye(dimension, dimension).scalarMultiply(tfac));
                 diagD = diagD.add(ones(dimension, 1).scalarMultiply(tfac));

250: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-20_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-20_Manual\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -918,7 +918,8 @@ public class CMAESOptimizer
          * @return the original objective variables, possibly repaired.
          */
         public double[] repairAndDecode(final double[] x) {
-            return
+            return boundaries != null && isRepairMode ?
+                decode(repair(x)) :
                 decode(x);
         }
 

251: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -148,7 +148,9 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
-                return minRow;
+                if (false) {
+                    return minRow;
+                }
         }
         return minRatioPositions.get(0);
     }

252: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

253: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-32_Buggy\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-32_Auto\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
@@ -133,7 +133,7 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {
 
         if (v.length == 0) {
             final BSPTree<Euclidean2D> tree = getTree(false);
-            if ((Boolean) tree.getAttribute()) {
+            if (false) {
                 // the instance covers the whole space
                 setSize(Double.POSITIVE_INFINITY);
                 setBarycenter(Vector2D.NaN);

254: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-32_Buggy\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-32_Manual\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
@@ -133,7 +133,7 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {
 
         if (v.length == 0) {
             final BSPTree<Euclidean2D> tree = getTree(false);
-            if ((Boolean) tree.getAttribute()) {
+            if (tree.getCut() == null && (Boolean) tree.getAttribute()) {
                 // the instance covers the whole space
                 setSize(Double.POSITIVE_INFINITY);
                 setBarycenter(Vector2D.NaN);

255: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-41_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-41_Auto\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
@@ -315,14 +315,16 @@ public class Variance extends AbstractStorelessUnivariateStatistic implements Se
 
         double var = Double.NaN;
 
-        if (test(values, weights,begin, length)) {
-            clear();
-            if (length == 1) {
-                var = 0.0;
-            } else if (length > 1) {
-                Mean mean = new Mean();
-                double m = mean.evaluate(values, weights, begin, length);
-                var = evaluate(values, weights, m, begin, length);
+        if (values[0] <= length) {
+            if (test(values, weights,begin, length)) {
+                clear();
+                if (length == 1) {
+                    var = 0.0;
+                } else if (length > 1) {
+                    Mean mean = new Mean();
+                    double m = mean.evaluate(values, weights, begin, length);
+                    var = evaluate(values, weights, m, begin, length);
+                }
             }
         }
         return var;

256: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-41_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-41_Manual\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
@@ -517,7 +517,7 @@ public class Variance extends AbstractStorelessUnivariateStatistic implements Se
                 }
 
                 double sumWts = 0;
-                for (int i = 0; i < weights.length; i++) {
+                for (int i = begin; i < begin + length; i++) {
                     sumWts += weights[i];
                 }
 

257: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-49_Auto\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -663,8 +663,12 @@ public class OpenMapRealVector extends AbstractRealVector
         checkIndex(index);
         if (!isDefaultValue(value)) {
             entries.put(index, value);
-        } else if (entries.containsKey(index)) {
-            entries.remove(index);
+        } else {
+            if (this.DEFAULT_ZERO_TOLERANCE == this.epsilon) {
+                if (entries.containsKey(index)) {
+                    entries.remove(index);
+                }
+            }
         }
     }
 

258: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-49_Manual\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -342,7 +342,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
@@ -355,7 +355,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v[iter.key()]);
@@ -367,7 +367,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));
@@ -380,7 +380,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v[iter.key()]);

259: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -185,7 +185,9 @@ public abstract class BaseSecantSolver
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
+                        if (false) {
+                            x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
+                        }
                         f0 = computeObjectiveValue(x0);
                     }
                     break;

260: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

261: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1133,13 +1133,15 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
             int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+            if (false) {
+                for (int i = 0; i < j; i += 4) {
+                    for (int k = 0; k < 4; k += step) {
+                        final double tmp = work[i + k];
+                        work[i + k] = work[j - k];
+                        work[j - k] = tmp;
+                    }
+                    j -= 4;
                 }
-                j -= 4;
             }
             return true;
         }

262: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

263: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1540,24 +1540,26 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
-                    a2 = a2 + b2;
-                    for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
-                        if (b2 == 0.0) {
-                            break;
-                        }
-                        b1 = b2;
-                        if (work[i4]  >  work[i4 - 2]) {
-                            return;
-                        }
-                        b2 = b2 * (work[i4] / work[i4 - 2]);
+                if (false) {
+                    if (end - start > 2) {
+                        b2 = work[nn - 13] / work[nn - 15];
                         a2 = a2 + b2;
-                        if (100 * Math.max(b2, b1) < a2 || cnst1 < a2)  {
-                            break;
+                        for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
+                            if (b2 == 0.0) {
+                                break;
+                            }
+                            b1 = b2;
+                            if (work[i4]  >  work[i4 - 2]) {
+                                return;
+                            }
+                            b2 = b2 * (work[i4] / work[i4 - 2]);
+                            a2 = a2 + b2;
+                            if (100 * Math.max(b2, b1) < a2 || cnst1 < a2)  {
+                                break;
+                            }
                         }
+                        a2 = cnst3 * a2;
                     }
-                    a2 = cnst3 * a2;
                 }
 
                 if (a2 < cnst1) {

264: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

265: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -60,7 +60,9 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                if (false) {
+                    minValue = tableau.getEntry(0, i);
+                }
                 minPos = i;
             }
         }

266: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

267: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,13 +195,15 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+        if (false) {
+            if (fa * fb >= 0.0 ) {
+                throw new ConvergenceException(
+                "number of iterations={0}, maximum iterations={1}, " +
+                "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
+                "final b value={6}, f(a)={7}, f(b)={8}",
+                numIterations, maximumIterations, initial,
+                lowerBound, upperBound, a, b, fa, fb);
+            }
         }
         
         return new double[]{a, b};

268: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

269: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -336,7 +336,9 @@ class SimplexTableau implements Serializable {
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
+                         if (mostNegative != coefficients[0]) {
+                             coefficients[i] = 0;
+                         }
                     }
                 }
             }

270: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

271: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-8_Auto\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -186,8 +186,10 @@ public class DiscreteDistribution<T> {
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
+        if (false) {
+            for (int i = 0; i < sampleSize; i++) {
+                out[i] = sample();
+            }
         }
 
         return out;

272: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-8_Manual\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -178,13 +178,13 @@ public class DiscreteDistribution<T> {
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+    public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        final Object[] out = new Object[sampleSize];
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();

273: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-97_Buggy\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-97_Auto\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
@@ -135,13 +135,13 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
+        if (this.functionValueAccuracy <= sign) {
             // check if either value is close to a zero
-                // neither value is close to zero and min and max do not bracket root.
-                throw new IllegalArgumentException
-                ("Function values at endpoints do not have different signs." +
-                        "  Endpoints: [" + min + "," + max + "]" + 
-                        "  Values: [" + yMin + "," + yMax + "]");
+            // neither value is close to zero and min and max do not bracket root.
+            throw new IllegalArgumentException
+            ("Function values at endpoints do not have different signs." +
+            "  Endpoints: [" + min + "," + max + "]" +
+            "  Values: [" + yMin + "," + yMax + "]");
         } else {
             // solve using only the first endpoint as initial guess
             ret = solve(min, yMin, max, yMax, min, yMin);

274: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-97_Buggy\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\DynaMoth_Math-97_Manual\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
@@ -135,17 +135,31 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
+        if (sign > 0) {
             // check if either value is close to a zero
+            if (Math.abs(yMin) <= functionValueAccuracy) {
+                setResult(min, 0);
+                ret = min;
+            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                setResult(max, 0);
+                ret = max;
+            } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw new IllegalArgumentException
                 ("Function values at endpoints do not have different signs." +
                         "  Endpoints: [" + min + "," + max + "]" + 
                         "  Values: [" + yMin + "," + yMax + "]");
-        } else {
+            }
+        } else if (sign < 0){
             // solve using only the first endpoint as initial guess
             ret = solve(min, yMin, max, yMax, min, yMin);
+        } else {
             // either min or max is a root
+            if (yMin == 0.0) {
+                ret = min;
+            } else {
+                ret = max;
+            }
         }
 
         return ret;

275: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-11_Buggy\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-11_Auto\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
@@ -272,7 +272,7 @@ public class ShapeUtilities {
             return false;
         }
         PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+        PathIterator iterator2 = p2.getPathIterator(null);
         double[] d1 = new double[6];
         double[] d2 = new double[6];
         boolean done = iterator1.isDone() && iterator2.isDone();

276: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-11_Buggy\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-11_Manual\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
@@ -272,7 +272,7 @@ public class ShapeUtilities {
             return false;
         }
         PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+        PathIterator iterator2 = p2.getPathIterator(null);
         double[] d1 = new double[6];
         double[] d2 = new double[6];
         boolean done = iterator1.isDone() && iterator2.isDone();

277: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-12_Auto\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

278: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-12_Manual\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

279: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-13_Auto\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, constraint.getWidth() - w[1]),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

280: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-13_Manual\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

281: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-17_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-17_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -876,7 +876,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
-        if (end < start) {
+        if ((end < start) && (this.data.size() > 0)) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();

282: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-17_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-17_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -854,7 +854,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
      *         subclasses may differ.
      */
     public Object clone() throws CloneNotSupportedException {
-        Object clone = createCopy(0, getItemCount() - 1);
+        TimeSeries clone = (TimeSeries) super.clone();
+        clone.data = (List) ObjectUtilities.deepClone(this.data);
         return clone;
     }
 

283: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-19_Auto\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -970,7 +970,10 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
-        int result = this.rangeAxes.indexOf(axis);
+        if (axis == null) {
+    throw new IllegalArgumentException("Empty variable: " + axis);
+}
+int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();
             if (parent instanceof CategoryPlot) {

284: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-19_Manual\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -695,6 +695,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.3
      */
     public int getDomainAxisIndex(CategoryAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         return this.domainAxes.indexOf(axis);
     }
     
@@ -970,6 +973,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();

285: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

286: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

287: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-24_Buggy\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-24_Auto\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
@@ -123,7 +123,7 @@ public class GrayPaintScale
     public Paint getPaint(double value) {
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound 
+        int g = (int) ((v - this.lowerBound) / (this.upperBound 
                 - this.lowerBound) * 255.0);
         return new Color(g, g, g);
     }

288: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-24_Buggy\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-24_Manual\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
@@ -123,7 +123,7 @@ public class GrayPaintScale
     public Paint getPaint(double value) {
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound 
+        int g = (int) ((v - this.lowerBound) / (this.upperBound 
                 - this.lowerBound) * 255.0);
         return new Color(g, g, g);
     }

289: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-26_Auto\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,14 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
-                EntityCollection entities = owner.getEntityCollection();
+                if (owner != null) {
+EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+}
+
         }
         return state;
 

290: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-26_Manual\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,13 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
+            if (owner != null) {
                 EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+            }
         }
         return state;
 

291: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-3_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -882,7 +882,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
                 this.data.remove(0);
                 removed = true;
             }
-            if (removed) {
+            if ((removed) || !(notify)) {
                 findBoundsByIteration();
                 if (notify) {
                     fireSeriesChanged();

292: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-3_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -1054,6 +1054,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+        copy.minY = Double.NaN;
+        copy.maxY = Double.NaN;
         copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {

293: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-4_Auto\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,7 +4490,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
-                    Collection c = r.getAnnotations();
+                    if (r != null) {
+Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
                         XYAnnotation a = (XYAnnotation) i.next();
@@ -4498,6 +4499,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+}
+
             }
         }
 

294: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-4_Manual\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,6 +4490,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
+                if (r != null) {
                     Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
@@ -4498,6 +4499,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+                }
             }
         }
 

295: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-7_Auto\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -285,7 +285,7 @@ public class TimePeriodValues extends Series implements Serializable {
         if (this.minMiddleIndex >= 0) {
             long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                 .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            long e = getDataItem(this.maxStartIndex).getPeriod().getEnd()
                 .getTime();
             long minMiddle = s + (e - s) / 2;
             if (middle < minMiddle) {

296: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Chart-7_Manual\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,9 +297,9 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
                 .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
                 .getTime();
             long maxMiddle = s + (e - s) / 2;
             if (middle > maxMiddle) {

297: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-10_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

298: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-10_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

299: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -695,7 +695,7 @@ class FunctionInjector {
     Node block = fnNode.getLastChild();
 
     boolean hasSideEffects = false;
-    if (block.hasChildren()) {
+    if (block.isFromExterns()) {
       Preconditions.checkState(block.hasOneChild());
       Node stmt = block.getFirstChild();
       if (stmt.isReturn()) {

300: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

301: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-13_Buggy\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-13_Auto\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
@@ -123,8 +123,10 @@ class PeepholeOptimizationsPass
     do {
       Node c = node.getFirstChild();
       while(c != null) {
-        traverse(c);
+        
         Node next = c.getNext();
+	traverse(c);
+
         c = next;
       }
 

302: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-13_Buggy\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-13_Manual\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
@@ -123,8 +123,8 @@ class PeepholeOptimizationsPass
     do {
       Node c = node.getFirstChild();
       while(c != null) {
-        traverse(c);
         Node next = c.getNext();
+        traverse(c);
         c = next;
       }
 

303: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-19_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-19_Auto\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -172,8 +172,7 @@ public abstract class ChainableReverseAbstractInterpreter
         // "this" references aren't currently modeled in the CFG.
 
       default:
-        throw new IllegalArgumentException("Node cannot be refined. \n" +
-            node.toStringTree());
+        
     }
   }
 

304: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-19_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-19_Manual\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -169,7 +169,9 @@ public abstract class ChainableReverseAbstractInterpreter
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
 
+      case Token.THIS:
         // "this" references aren't currently modeled in the CFG.
+        break;
 
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +

305: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-2_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1571,6 +1571,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     Set<String> currentPropertyNames;
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
+    if (implicitProto != null) {
       currentPropertyNames = implicitProto.getOwnPropertyNames();
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
@@ -1585,6 +1586,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       }
       currentProperties.put(name, interfaceType);
     }
+    }
     for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
       checkInterfaceConflictProperties(t, n, functionName, properties,
           currentProperties, iType);

306: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-2_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1569,9 +1569,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       ObjectType interfaceType) {
     ObjectType implicitProto = interfaceType.getImplicitPrototype();
     Set<String> currentPropertyNames;
+    if (implicitProto == null) {
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
+      currentPropertyNames = ImmutableSet.of();
+    } else {
       currentPropertyNames = implicitProto.getOwnPropertyNames();
+    }
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {

307: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-38_Auto\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if (x <= 0 && prev == '-') {
       add(" ");
     }
 

308: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-38_Manual\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if ((x < 0 || negativeZero) && prev == '-') {
       add(" ");
     }
 

309: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-46_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,7 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
+  
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

310: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-46_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,6 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

311: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-62_Auto\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno || charno < sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

312: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-62_Manual\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

313: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-73_Auto\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

314: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Closure-73_Manual\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

315: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-10_Auto\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -304,13 +304,7 @@ public class FastDateParser implements DateParser, Serializable {
         boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
+            
             wasWhite= false;
             switch(c) {
             case '\'':

316: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-10_Manual\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -301,17 +301,8 @@ public class FastDateParser implements DateParser, Serializable {
      * @return The <code>StringBuilder</code>
      */
     private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {
-        boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
-            wasWhite= false;
             switch(c) {
             case '\'':
                 if(unquote) {

317: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-19_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\NumericEntityUnescaper.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-19_Auto\\src\\org\\apache\\commons\\lang3\\text\\translate\\NumericEntityUnescaper.java"	
@@ -37,7 +37,7 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         int seqEnd = input.length();
         // Uses -2 to ensure there is something after the &#
-        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
+        if(input.charAt(index) == '&' && index < seqEnd - 4 && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 

318: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-19_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\NumericEntityUnescaper.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-19_Manual\\src\\org\\apache\\commons\\lang3\\text\\translate\\NumericEntityUnescaper.java"	
@@ -37,7 +37,7 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         int seqEnd = input.length();
         // Uses -2 to ensure there is something after the &#
-        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
+        if(input.charAt(index) == '&' && index < seqEnd - 2 && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
@@ -47,11 +47,16 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
                 isHex = true;
 
                 // Check there's more than just an x after the &#
+                if(start == seqEnd) {
+                    return 0;
+                }
             }
 
             int end = start;
             // Note that this supports character codes without a ; on the end
-            while(input.charAt(end) != ';') 
+            while(end < seqEnd && ( (input.charAt(end) >= '0' && input.charAt(end) <= '9') ||
+                                    (input.charAt(end) >= 'a' && input.charAt(end) <= 'f') ||
+                                    (input.charAt(end) >= 'A' && input.charAt(end) <= 'F') ) )
             {
                 end++;
             }
@@ -76,8 +81,9 @@ public class NumericEntityUnescaper extends CharSequenceTranslator {
                 out.write(entityValue);
             }
 
+            boolean semiNext = (end != seqEnd) && (input.charAt(end) == ';');
 
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+            return 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);
         }
         return 0;
     }

319: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-22_Auto\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -581,7 +581,7 @@ public final class Fraction extends Number implements Comparable<Fraction> {
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(u) <= 1 && Math.abs(v) <= 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

320: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-22_Manual\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -580,8 +580,14 @@ public final class Fraction extends Number implements Comparable<Fraction> {
      */
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
+        if ((u == 0) || (v == 0)) {
+            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
+                throw new ArithmeticException("overflow: gcd is 2^31");
+            }
+            return Math.abs(u) + Math.abs(v);
+        }
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(u) == 1 || Math.abs(v) == 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

321: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-56_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-56_Auto\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -137,7 +137,7 @@ public class FastDateFormat extends Format {
     /**
      * The parsed rules.
      */
-    private Rule[] mRules;
+    private transient  Rule[] mRules;
     /**
      * The estimated maximum length.
      */

322: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-56_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-56_Manual\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -137,11 +137,11 @@ public class FastDateFormat extends Format {
     /**
      * The parsed rules.
      */
-    private Rule[] mRules;
+    private transient Rule[] mRules;
     /**
      * The estimated maximum length.
      */
-    private int mMaxLengthEstimate;
+    private transient int mMaxLengthEstimate;
 
     //
323: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-57_Auto\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,7 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        return availableLocaleList().contains(locale);
     }
 
     //
324: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-57_Manual\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,7 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        return availableLocaleList().contains(locale);
     }
 
     //
325: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && isDigits(numeric.substring(1)) || (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

326: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

327: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-59_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

328: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-59_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

329: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -283,7 +283,8 @@ public class DurationFormatUtils {
         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
+        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
+	int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
 
         // each initial estimate is adjusted in case it is under 0
         while (milliseconds < 0) {
@@ -320,7 +321,7 @@ public class DurationFormatUtils {
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
         days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
+        
         years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 

330: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

331: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-7_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,7 +449,7 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
+        if (str.startsWith("--", INTEGER_ONE)) {
             return null;
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {

332: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Lang-7_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,6 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
@@ -718,10 +715,13 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
+        if (str.trim().startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
             // to be in specification of class. OS X Java parses it to 
             // a wrong value.
+            throw new NumberFormatException(str + " is not a valid number.");
+        }
         return new BigDecimal(str);
     }
 

333: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-20_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-20_Auto\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -237,7 +237,7 @@ public class CMAESOptimizer
      * Default constructor, uses default parameters
      */
     public CMAESOptimizer() {
-        this(0);
+        
     }
 
     /**

334: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-20_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-20_Manual\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -918,7 +918,8 @@ public class CMAESOptimizer
          * @return the original objective variables, possibly repaired.
          */
         public double[] repairAndDecode(final double[] x) {
-            return
+            return boundaries != null && isRepairMode ?
+                decode(repair(x)) :
                 decode(x);
         }
 

335: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,15 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
-                for (Integer row : minRatioPositions) {
-                    for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
-                        int column = i + tableau.getArtificialVariableOffset();
-                        final double entry = tableau.getEntry(row, column);
-                        if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
-                            return row;
-                        }
-                    }
-                }
+                
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index

336: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

337: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-30_Buggy\\src\\org\\apache\\commons\\math3\\stat\\inference\\MannWhitneyUTest.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-30_Auto\\src\\org\\apache\\commons\\math3\\stat\\inference\\MannWhitneyUTest.java"	
@@ -170,7 +170,7 @@ public class MannWhitneyUTest {
                                              final int n2)
         throws ConvergenceException, MaxCountExceededException {
 
-        final int n1n2prod = n1 * n2;
+        final double n1n2prod = n1 * n2;
 
         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
         final double EU = n1n2prod / 2.0;

338: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-30_Buggy\\src\\org\\apache\\commons\\math3\\stat\\inference\\MannWhitneyUTest.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-30_Manual\\src\\org\\apache\\commons\\math3\\stat\\inference\\MannWhitneyUTest.java"	
@@ -170,7 +170,7 @@ public class MannWhitneyUTest {
                                              final int n2)
         throws ConvergenceException, MaxCountExceededException {
 
-        final int n1n2prod = n1 * n2;
+        final double n1n2prod = n1 * n2;
 
         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
         final double EU = n1n2prod / 2.0;

339: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-33_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, this.epsilon) > 0) {
                 columnsToDrop.add(i);
             }
         }

340: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-33_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, epsilon) > 0) {
                 columnsToDrop.add(i);
             }
         }

341: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-34_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-34_Auto\\src\\org\\apache\\commons\\math3\\genetics\\ListPopulation.java"	
@@ -206,6 +206,6 @@ public abstract class ListPopulation implements Population {
      * @return chromosome iterator
      */
     public Iterator<Chromosome> iterator() {
-        return chromosomes.iterator();
+        return getChromosomes().iterator();
     }
 }
\ No newline at end of file

342: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-34_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-34_Manual\\src\\org\\apache\\commons\\math3\\genetics\\ListPopulation.java"	
@@ -206,6 +206,6 @@ public abstract class ListPopulation implements Population {
      * @return chromosome iterator
      */
     public Iterator<Chromosome> iterator() {
-        return chromosomes.iterator();
+        return getChromosomes().iterator();
     }
 }
\ No newline at end of file

343: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-35_Auto\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -48,7 +48,7 @@ public class ElitisticListPopulation extends ListPopulation {
                                    final int populationLimit,
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**

344: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-35_Manual\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -48,7 +48,7 @@ public class ElitisticListPopulation extends ListPopulation {
                                    final int populationLimit,
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**
@@ -62,7 +62,7 @@ public class ElitisticListPopulation extends ListPopulation {
      */
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
         super(populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**

345: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,7 +184,7 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
+                    if (fx == x1) {
                         x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }

346: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

347: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-57_Auto\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -172,7 +172,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
+            double sum = 0;
             for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
                 final Cluster<T> nearest = getNearestCluster(resultSet, p);

348: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-57_Manual\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -172,7 +172,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
+            double sum = 0;
             for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
                 final Cluster<T> nearest = getNearestCluster(resultSet, p);

349: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-63_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -414,7 +414,7 @@ public final class MathUtils {
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        return (Double.isNaN(EPSILON) && Double.isNaN(y)) || x == y;
     }
 
     /**

350: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-63_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -414,7 +414,7 @@ public final class MathUtils {
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        return equals(x, y, 1);
     }
 
     /**

351: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-64_Buggy\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-64_Auto\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
@@ -362,7 +362,7 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
 
                 // evaluate the function at x + p and calculate its norm
                 updateResidualsAndCost();
-                current = new VectorialPointValuePair(point, objective);
+                
 
                 // compute the scaled actual reduction
                 double actRed = -1.0;
@@ -432,6 +432,8 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                     residuals = oldRes;
                     oldRes    = tmpVec;
                 }
+	current = new VectorialPointValuePair(point, objective);
+
                 if (checker==null) {
                 	if (((Math.abs(actRed) <= costRelativeTolerance) &&
                         (preRed <= costRelativeTolerance) &&

352: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-64_Buggy\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-64_Manual\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
@@ -255,6 +255,8 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
         double[] diag    = new double[cols];
         double[] oldX    = new double[cols];
         double[] oldRes  = new double[rows];
+        double[] oldObj  = new double[rows];
+        double[] qtf     = new double[rows];
         double[] work1   = new double[cols];
         double[] work2   = new double[cols];
         double[] work3   = new double[cols];
@@ -267,6 +269,9 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
         boolean firstIteration = true;
         VectorialPointValuePair current = new VectorialPointValuePair(point, objective);
         while (true) {
+            for (int i=0;i<rows;i++) {
+                qtf[i]=residuals[i];
+            }
             incrementIterationsCounter();
 
             // compute the Q.R. decomposition of the jacobian matrix
@@ -275,7 +280,7 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
             qrDecomposition();
 
             // compute Qt.res
-            qTy(residuals);
+            qTy(qtf);
             // now we don't need Q anymore,
             // so let jacobian contain the R matrix with its diagonal elements
             for (int k = 0; k < solvedCols; ++k) {
@@ -313,7 +318,7 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                     if (s != 0) {
                         double sum = 0;
                         for (int i = 0; i <= j; ++i) {
-                            sum += jacobian[i][pj] * residuals[i];
+                            sum += jacobian[i][pj] * qtf[i];
                         }
                         maxCosine = Math.max(maxCosine, Math.abs(sum) / (s * cost));
                     }
@@ -321,6 +326,8 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
             }
             if (maxCosine <= orthoTolerance) {
                 // convergence has been reached
+            	updateResidualsAndCost();
+            	current = new VectorialPointValuePair(point, objective);
                 return current;
             }
 
@@ -341,9 +348,12 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                 double[] tmpVec = residuals;
                 residuals = oldRes;
                 oldRes    = tmpVec;
+                tmpVec    = objective;
+                objective = oldObj;
+                oldObj    = tmpVec;
 
                 // determine the Levenberg-Marquardt parameter
-                determineLMParameter(oldRes, delta, diag, work1, work2, work3);
+                determineLMParameter(qtf, delta, diag, work1, work2, work3);
 
                 // compute the new point and the norm of the evolution direction
                 double lmNorm = 0;
@@ -362,7 +372,6 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
 
                 // evaluate the function at x + p and calculate its norm
                 updateResidualsAndCost();
-                current = new VectorialPointValuePair(point, objective);
 
                 // compute the scaled actual reduction
                 double actRed = -1.0;
@@ -418,9 +427,15 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                         xNorm    += xK * xK;
                     }
                     xNorm = Math.sqrt(xNorm);
+                    current = new VectorialPointValuePair(point, objective);
 
                     // tests for convergence.
+                    if (checker != null) {
                     // we use the vectorial convergence checker
+                    	if (checker.converged(getIterations(), previous, current)) {
+                    		return current;
+                    	}
+                    }
                 } else {
                     // failed iteration, reset the previous values
                     cost = previousCost;
@@ -431,6 +446,9 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                     tmpVec    = residuals;
                     residuals = oldRes;
                     oldRes    = tmpVec;
+                    tmpVec    = objective;
+                    objective = oldObj;
+                    oldObj    = tmpVec;
                 }
                 if (checker==null) {
                 	if (((Math.abs(actRed) <= costRelativeTolerance) &&
@@ -439,10 +457,6 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                        (delta <= parRelativeTolerance * xNorm)) {
                        return current;
                    }
-                } else {
-                    if (checker.converged(getIterations(), previous, current)) {
-                        return current;
-                    }
                 }
                 // tests for termination and stringent tolerances
                 // (2.2204e-16 is the machine epsilon for IEEE754)

353: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-68_Buggy\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-68_Auto\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
@@ -388,7 +388,13 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                 }
 
                 // test for successful iteration.
-                if (ratio >= 1.0e-4) {
+                if (((Math.abs(actRed) <= costRelativeTolerance) &&
+                         (preRed <= costRelativeTolerance) &&
+                         (ratio <= 2.0)) ||
+                        (delta <= parRelativeTolerance * xNorm)) {
+                        return new VectorialPointValuePair(point, objective);
+                    }
+	if (ratio >= 1.0e-4) {
                     // successful iteration, update the norm
                     firstIteration = false;
                     xNorm = 0;
@@ -412,12 +418,7 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                 // tests for convergence.
                     // we use the vectorial convergence checker
                     // we use the Levenberg-Marquardt specific convergence parameters
-                    if (((Math.abs(actRed) <= costRelativeTolerance) &&
-                         (preRed <= costRelativeTolerance) &&
-                         (ratio <= 2.0)) ||
-                        (delta <= parRelativeTolerance * xNorm)) {
-                        return new VectorialPointValuePair(point, objective);
-                    }
+                    
 
                 // tests for termination and stringent tolerances
                 // (2.2204e-16 is the machine epsilon for IEEE754)

354: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-68_Buggy\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-68_Manual\\src\\org\\apache\\commons\\math\\optimization\\general\\LevenbergMarquardtOptimizer.java"	
@@ -163,6 +163,7 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
         setMaxIterations(1000);
 
         // default values for the tuning parameters
+        setConvergenceChecker(null);
         setInitialStepBoundFactor(100.0);
         setCostRelativeTolerance(1.0e-10);
         setParRelativeTolerance(1.0e-10);
@@ -244,11 +245,13 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
         // outer loop
         lmPar = 0;
         boolean firstIteration = true;
+        VectorialPointValuePair current = new VectorialPointValuePair(point, objective);
         while (true) {
 
             incrementIterationsCounter();
 
             // compute the Q.R. decomposition of the jacobian matrix
+            VectorialPointValuePair previous = current;
             updateJacobian();
             qrDecomposition();
 
@@ -300,7 +303,7 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
             }
             if (maxCosine <= orthoTolerance) {
                 // convergence has been reached
-                return new VectorialPointValuePair(point, objective);
+                return current;
             }
 
             // rescale if necessary
@@ -342,6 +345,7 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
 
                 // evaluate the function at x + p and calculate its norm
                 updateResidualsAndCost();
+                current = new VectorialPointValuePair(point, objective);
 
                 // compute the scaled actual reduction
                 double actRed = -1.0;
@@ -410,14 +414,20 @@ public class LevenbergMarquardtOptimizer extends AbstractLeastSquaresOptimizer {
                 }
 
                 // tests for convergence.
+                if (checker != null) {
                     // we use the vectorial convergence checker
+                    if (checker.converged(getIterations(), previous, current)) {
+                        return current;                        
+                    }
+                } else {
                     // we use the Levenberg-Marquardt specific convergence parameters
                     if (((Math.abs(actRed) <= costRelativeTolerance) &&
                          (preRed <= costRelativeTolerance) &&
                          (ratio <= 2.0)) ||
                         (delta <= parRelativeTolerance * xNorm)) {
-                        return new VectorialPointValuePair(point, objective);
+                        return current;
                     }
+                }
 
                 // tests for termination and stringent tolerances
                 // (2.2204e-16 is the machine epsilon for IEEE754)

355: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-70_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

356: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-70_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

357: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-75_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**

358: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-75_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**

359: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-79_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-79_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -1621,9 +1621,9 @@ public final class MathUtils {
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+      double sum = 0;
       for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+          final double dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);

360: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-79_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-79_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -1621,9 +1621,9 @@ public final class MathUtils {
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+      double sum = 0;
       for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+          final double dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);

361: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 0 * n - 1;
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

362: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

363: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1540,7 +1540,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start <= 2) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

364: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

365: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

366: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

367: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,7 +87,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
+            if (comparator.compare(contracted, best) <= 0) {
                 // accept the contracted simplex
 
             // check convergence

368: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

369: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

370: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

371: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                    if (tableau.getEntry(basicRow, i) == 1) {
                          coefficients[i] = 0;
                     }
                 }

372: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

373: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-95_Auto\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -144,7 +144,7 @@ public class FDistributionImpl
         double ret;
         double d = getDenominatorDegreesOfFreedom();
             // use mean
-            ret = d / (d - 2.0);
+            ret = d / (Double.MAX_VALUE - 2.0);
         return ret;
     }
     

374: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-95_Manual\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,12 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double ret = 1.0;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2.0) {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
     

375: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-97_Buggy\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-97_Auto\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
@@ -135,7 +135,7 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
+        if (sign >= 1E-6) {
             // check if either value is close to a zero
                 // neither value is close to zero and min and max do not bracket root.
                 throw new IllegalArgumentException

376: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-97_Buggy\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Math-97_Manual\\src\\org\\apache\\commons\\math\\analysis\\BrentSolver.java"	
@@ -135,17 +135,31 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         
         // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
+        if (sign > 0) {
             // check if either value is close to a zero
+            if (Math.abs(yMin) <= functionValueAccuracy) {
+                setResult(min, 0);
+                ret = min;
+            } else if (Math.abs(yMax) <= functionValueAccuracy) {
+                setResult(max, 0);
+                ret = max;
+            } else {
                 // neither value is close to zero and min and max do not bracket root.
                 throw new IllegalArgumentException
                 ("Function values at endpoints do not have different signs." +
                         "  Endpoints: [" + min + "," + max + "]" + 
                         "  Values: [" + yMin + "," + yMax + "]");
-        } else {
+            }
+        } else if (sign < 0){
             // solve using only the first endpoint as initial guess
             ret = solve(min, yMin, max, yMax, min, yMin);
+        } else {
             // either min or max is a root
+            if (yMin == 0.0) {
+                ret = min;
+            } else {
+                ret = max;
+            }
         }
 
         return ret;

377: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-29_Buggy\\src\\org\\mockito\\internal\\matchers\\Same.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-29_Auto\\src\\org\\mockito\\internal\\matchers\\Same.java"	
@@ -26,7 +26,10 @@ public class Same extends ArgumentMatcher<Object> implements Serializable {
     public void describeTo(Description description) {
         description.appendText("same(");
         appendQuoting(description);
-        description.appendText(wanted.toString());
+        if (wanted != null) {
+description.appendText(wanted.toString());
+}
+
         appendQuoting(description);
         description.appendText(")");
     }

378: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-29_Buggy\\src\\org\\mockito\\internal\\matchers\\Same.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-29_Manual\\src\\org\\mockito\\internal\\matchers\\Same.java"	
@@ -26,7 +26,7 @@ public class Same extends ArgumentMatcher<Object> implements Serializable {
     public void describeTo(Description description) {
         description.appendText("same(");
         appendQuoting(description);
-        description.appendText(wanted.toString());
+        description.appendText(wanted == null ? "null" : wanted.toString());
         appendQuoting(description);
         description.appendText(")");
     }

379: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-38_Buggy\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-38_Auto\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
@@ -45,6 +45,9 @@ public class ArgumentMatchingTool {
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
-        return StringDescription.toString(m).equals(arg.toString());
+        if (arg == null) {
+    return false;
+}
+return StringDescription.toString(m).equals(arg.toString());
     }
 }
\ No newline at end of file

380: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-38_Buggy\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\FixMiner_Mockito-38_Manual\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
@@ -45,6 +45,6 @@ public class ArgumentMatchingTool {
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
-        return StringDescription.toString(m).equals(arg.toString());
+        return StringDescription.toString(m).equals(arg == null? "null" : arg.toString());
     }
 }
\ No newline at end of file

381: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-12_Auto\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,11 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        if (dataset != null) {
+			setDatasetGroup(dataset.getGroup());
+			dataset.addChangeListener(this);
+		}
+		double ep = 0.0;
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

382: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-12_Manual\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

383: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-13_Auto\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -295,7 +295,8 @@ public class BorderArrangement implements Arrangement, Serializable {
         if (this.leftBlock != null) {
             Size2D size = this.leftBlock.arrange(g2, c2);
             w[2] = size.width;
-            h[2] = size.height;
+            this.topBlock = null;
+			h[2] = size.height;
         }
         if (this.rightBlock != null) {
             double maxW = Math.max(width - w[2], 0.0);
@@ -433,14 +434,9 @@ public class BorderArrangement implements Arrangement, Serializable {
             h[0] = size.height;
         }
         w[1] = w[0];
-        if (this.bottomBlock != null) {
-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
-            Size2D size = this.bottomBlock.arrange(g2, c2);
-            h[1] = size.height;
-        }
-        h[2] = constraint.getHeight() - h[1] - h[0];
+        Size2D s1 = arrangeNN(container, g2);
+        this.rightBlock = null;
+		h[2] = constraint.getHeight() - h[1] - h[0];
         if (this.leftBlock != null) {
             RectangleConstraint c3 = new RectangleConstraint(0.0,
                     new Range(0.0, constraint.getWidth()),

384: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-13_Manual\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

385: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,9 +1794,6 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
-        }
         int seriesCount = dataset.getRowCount();
         if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
             for (int i = 0; i < seriesCount; i++) {

386: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

387: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-3_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -573,9 +573,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
      * @param notify  notify listeners?
      */
     public void add(TimeSeriesDataItem item, boolean notify) {
-        if (item == null) {
-            throw new IllegalArgumentException("Null 'item' argument.");
-        }
+        updateBoundsForRemovedItem(item);
         item = (TimeSeriesDataItem) item.clone();
         Class c = item.getPeriod().getClass();
         if (this.timePeriodClass == null) {

388: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Chart-3_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -1054,6 +1054,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+        copy.minY = Double.NaN;
+        copy.maxY = Double.NaN;
         copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {

389: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-112_Auto\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1059,9 +1059,6 @@ class TypeInference
       JSType argType,
       Map<TemplateType, JSType> resolvedTypes) {
     if (paramType.isTemplateType()) {
-      // @param {T}
-      resolvedTemplateType(
-          resolvedTypes, paramType.toMaybeTemplateType(), argType);
     } else if (paramType.isUnionType()) {
       // @param {Array.<T>|NodeList|Arguments|{length:number}}
       UnionType unionType = paramType.toMaybeUnionType();

390: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-112_Manual\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1189,9 +1189,15 @@ class TypeInference
     }
 
     // Try to infer the template types
-    Map<TemplateType, JSType> inferred = 
-        inferTemplateTypesFromParameters(fnType, n);
-
+    Map<TemplateType, JSType> inferred = Maps.filterKeys(
+        inferTemplateTypesFromParameters(fnType, n),
+        new Predicate<TemplateType>() {
+
+          @Override
+          public boolean apply(TemplateType key) {
+            return keys.contains(key);
+          }}
+        );
 
     // Replace all template types. If we couldn't find a replacement, we
     // replace it with UNKNOWN.

391: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -695,13 +695,6 @@ class FunctionInjector {
     Node block = fnNode.getLastChild();
 
     boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 

392: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

393: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-117_Auto\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -725,34 +725,6 @@ class TypeValidator {
 
     // The best type name is the actual type name.
 
-    // If we're analyzing a GETPROP, the property may be inherited by the
-    // prototype chain. So climb the prototype chain and find out where
-    // the property was originally defined.
-    if (n.isGetProp()) {
-      ObjectType objectType = getJSType(n.getFirstChild()).dereference();
-      if (objectType != null) {
-        String propName = n.getLastChild().getString();
-        if (objectType.getConstructor() != null &&
-            objectType.getConstructor().isInterface()) {
-          objectType = FunctionType.getTopDefiningInterface(
-              objectType, propName);
-        } else {
-          // classes
-          while (objectType != null && !objectType.hasOwnProperty(propName)) {
-            objectType = objectType.getImplicitPrototype();
-          }
-        }
-
-        // Don't show complex function names or anonymous types.
-        // Instead, try to get a human-readable type name.
-        if (objectType != null &&
-            (objectType.getConstructor() != null ||
-             objectType.isFunctionPrototypeType())) {
-          return objectType.toString() + "." + propName;
-        }
-      }
-    }
-
     JSType type = getJSType(n);
     if (dereference) {
       ObjectType dereferenced = type.dereference();

394: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-117_Manual\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -722,8 +722,20 @@ class TypeValidator {
    *     to an Object type, if possible.
    */
   String getReadableJSTypeName(Node n, boolean dereference) {
+    JSType type = getJSType(n);
+    if (dereference) {
+      ObjectType dereferenced = type.dereference();
+      if (dereferenced != null) {
+        type = dereferenced;
+      }
+    }
 
     // The best type name is the actual type name.
+    if (type.isFunctionPrototypeType() ||
+        (type.toObjectType() != null &&
+         type.toObjectType().getConstructor() != null)) {
+      return type.toString();
+    }
 
     // If we're analyzing a GETPROP, the property may be inherited by the
     // prototype chain. So climb the prototype chain and find out where
@@ -753,18 +765,6 @@ class TypeValidator {
       }
     }
 
-    JSType type = getJSType(n);
-    if (dereference) {
-      ObjectType dereferenced = type.dereference();
-      if (dereferenced != null) {
-        type = dereferenced;
-      }
-    }
-    if (type.isFunctionPrototypeType() ||
-        (type.toObjectType() != null &&
-         type.toObjectType().getConstructor() != null)) {
-      return type.toString();
-    }
     String qualifiedName = n.getQualifiedName();
     if (qualifiedName != null) {
       return qualifiedName;

395: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-124_Auto\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -135,22 +135,6 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
         case Token.NAME:
           if (next.isQualifiedName()) {
             String nextName = next.getQualifiedName();
-            if (value.isQualifiedName() &&
-                nextName.equals(value.getQualifiedName())) {
-              // If the previous expression evaluates to value of a
-              // qualified name, and that qualified name is used again
-              // shortly, then we can exploit the assign here.
-
-              // Verify the assignment doesn't change its own value.
-              if (!isSafeReplacement(next, assign)) {
-                return false;
-              }
-
-              exprParent.removeChild(expr);
-              expr.removeChild(assign);
-              parent.replaceChild(next, assign);
-              return true;
-            }
           }
           return false;
 

396: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-124_Manual\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -210,7 +210,9 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
     }
     Preconditions.checkArgument(node.isGetProp());
 
+    while (node.isGetProp()) {
       node = node.getFirstChild();
+    }
     if (node.isName()
         && isNameAssignedTo(node.getString(), replacement)) {
       return false;

397: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-125_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,12 +1658,6 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
-        visitParameterList(t, n, fnType);
-        ensureTyped(t, n, fnType.getInstanceType());
-      } else {
-        ensureTyped(t, n);
-      }
     } else {
       report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);

398: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-125_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,7 +1658,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
+      if (fnType != null && fnType.hasInstanceType()) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {

399: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -114,14 +114,6 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       if (isResultUsed) {
         return;
       }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
         return;

400: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

401: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -114,9 +114,11 @@ final class CheckSideEffects extends AbstractPostOrderCallback
           if (ancestorType == Token.COMMA)
             continue;
           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
+			break;
+		else {
+			final String PARAM_NAME = "jscomp_throw_param";
+			break;
+		}
         }
       }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {

402: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

403: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-33_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -555,27 +555,6 @@ class PrototypeObjectType extends ObjectType {
   public void matchConstraint(ObjectType constraintObj) {
     // We only want to match contraints on anonymous types.
 
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraintObj {{prop: (number|undefined)}}
-    // function f(constraintObj) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
-    if (constraintObj.isRecordType()) {
-      for (String prop : constraintObj.getOwnPropertyNames()) {
-        JSType propType = constraintObj.getPropertyType(prop);
-        if (!isPropertyTypeDeclared(prop)) {
-          JSType typeToInfer = propType;
-          if (!hasProperty(prop)) {
-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)
-                .getLeastSupertype(propType);
-          }
-          defineInferredProperty(prop, typeToInfer, null);
-        }
-      }
-    }
+    
   }
 }
\ No newline at end of file

404: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-33_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -554,6 +554,9 @@ class PrototypeObjectType extends ObjectType {
   @Override
   public void matchConstraint(ObjectType constraintObj) {
     // We only want to match contraints on anonymous types.
+    if (hasReferenceName()) {
+      return;
+    }
 
     // Handle the case where the constraint object is a record type.
     //

405: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-3_Auto\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -152,20 +152,6 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
-        c.inlineVariable();
-
-        // If definition c has dependencies, then inlining it may have
-        // introduced new dependencies for our other inlining candidates.
-        //
-        // MustBeReachingVariableDef uses this dependency graph in its
-        // analysis, so some of these candidates may no longer be valid.
-        // We keep track of when the variable dependency graph changed
-        // so that we can back off appropriately.
-        if (!c.defMetadata.depends.isEmpty()) {
-          inlinedNewDependencies.add(t.getScope().getVar(c.varName));
-        }
-      }
     }
   }
 

406: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-3_Manual\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -152,7 +152,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
+      if (c.canInline(t.getScope())) {
         c.inlineVariable();
 
         // If definition c has dependencies, then inlining it may have
@@ -277,7 +277,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
       return defMetadata.node;
     }
 
-    private boolean canInline() {
+    private boolean canInline(final Scope scope) {
       // Cannot inline a parameter.
       if (getDefCfgNode().isFunction()) {
         return false;
@@ -372,6 +372,12 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
                   case Token.REGEXP:
                   case Token.NEW:
                     return true;
+                  case Token.NAME:
+                    Var var = scope.getOwnSlot(input.getString());
+                    if (var != null
+                        && var.getParentNode().isCatch()) {
+                      return true;
+                    }
                 }
                 return false;
               }

407: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-55_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -114,7 +114,7 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return false;
   }
 
   /**

408: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-55_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -114,7 +114,8 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return NodeUtil.isFunctionExpression(n)
+        && !NodeUtil.isGetOrSetKey(n.getParent());
   }
 
   /**

409: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-86_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2459,10 +2459,7 @@ public final class NodeUtil {
             || isToStringMethodCall(value)
             || locals.apply(value);
       case Token.NEW:
-        // TODO(nicksantos): This needs to be changed so that it
-        // returns true iff we're sure the value was never aliased from inside
-        // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

410: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-86_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2462,7 +2462,7 @@ public final class NodeUtil {
         // TODO(nicksantos): This needs to be changed so that it
         // returns true iff we're sure the value was never aliased from inside
         // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

411: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-88_Buggy\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-88_Auto\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
@@ -324,10 +324,7 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
-        // The expression to which the assignment is made is evaluated before
-        // the RHS is evaluated (normal left to right evaluation) but the KILL
-        // occurs after the RHS is evaluated.
-        return VariableLiveness.KILL;
+        int type = n.getType();
       } else {
         return VariableLiveness.READ;
       }

412: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-88_Buggy\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Closure-88_Manual\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
@@ -324,9 +324,15 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
+        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
         // The expression to which the assignment is made is evaluated before
         // the RHS is evaluated (normal left to right evaluation) but the KILL
         // occurs after the RHS is evaluated.
+        Node rhs = n.getNext();
+        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
+        if (state == VariableLiveness.READ) {
+          return state;
+        }
         return VariableLiveness.KILL;
       } else {
         return VariableLiveness.READ;

413: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-43_Auto\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,7 +419,8 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+            next(pos);
+			return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {

414: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-43_Manual\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,6 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;

415: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-59_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,8 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                buffer = new char[str.length() + CAPACITY];
+				str.getChars(0, strLen, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

416: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-59_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

417: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -320,7 +320,6 @@ public class DurationFormatUtils {
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
         days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
         years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 

418: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

419: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-7_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -450,7 +450,8 @@ public class NumberUtils {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
         if (str.startsWith("--")) {
-            return null;
+            Double d = createDouble(str);
+			return null;
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x

420: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Lang-7_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,6 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
@@ -718,10 +715,13 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
+        if (str.trim().startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
             // to be in specification of class. OS X Java parses it to 
             // a wrong value.
+            throw new NumberFormatException(str + " is not a valid number.");
+        }
         return new BigDecimal(str);
     }
 

421: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -137,18 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // This heuristic is based on empirical data gathered while investigating MATH-828.
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
-                for (Integer row : minRatioPositions) {
-                    int i = tableau.getNumObjectiveFunctions();
-                    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
-                        if (row == tableau.getBasicRow(i)) {
-                            if (i < minIndex) {
-                                minIndex = i;
-                                minRow = row;
-                            }
-                        }
-                    }
-                }
-                return minRow;
+                Integer minPos = null;
         }
         return minRatioPositions.get(0);
     }

422: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

423: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -185,7 +185,6 @@ public abstract class BaseSecantSolver
                 case REGULA_FALSI:
                     // Nothing.
                     if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }
                     break;

424: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

425: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-70_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

426: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-70_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

427: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1131,7 +1131,12 @@ public class EigenDecompositionImpl implements EigenDecomposition {
      */
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
+            for (int i = 0; i < realEigenvalues.length; ++i) {
+				if ((realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0)) {
+					return false;
+				}
+			}
+			// flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {

428: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

429: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -903,19 +903,6 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
                     for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
-                            (work[i + 2] <= TOLERANCE_2 * sigma)) {
-                            // insert a split
-                            work[i + 2]  = -sigma;
-                            split        = i / 4;
-                            diagMax      = 0;
-                            offDiagMin   = work[i + 6];
-                            previousEMin = work[i + 7];
-                        } else {
-                            diagMax      = Math.max(diagMax, work[i + 4]);
-                            offDiagMin   = Math.min(offDiagMin, work[i + 2]);
-                            previousEMin = Math.min(previousEMin, work[i + 3]);
-                        }
                     }
                     work[4 * n0 - 2] = offDiagMin;
                     work[4 * n0 - 1] = previousEMin;
@@ -1539,26 +1526,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 }
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
-                // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
-                    a2 = a2 + b2;
-                    for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
-                        if (b2 == 0.0) {
-                            break;
-                        }
-                        b1 = b2;
-                        if (work[i4]  >  work[i4 - 2]) {
-                            return;
-                        }
-                        b2 = b2 * (work[i4] / work[i4 - 2]);
-                        a2 = a2 + b2;
-                        if (100 * Math.max(b2, b1) < a2 || cnst1 < a2)  {
-                            break;
-                        }
-                    }
-                    a2 = cnst3 * a2;
-                }
+                computeGershgorinCircles();
 
                 if (a2 < cnst1) {
                     tau = gam * (1 - Math.sqrt(a2)) / (1 + a2);

430: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

431: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -60,7 +60,6 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }

432: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

433: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,14 +195,11 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
-        }
+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
+			throw MathRuntimeException.createIllegalArgumentException(
+					"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}", lowerBound,
+					initial, upperBound);
+		}
         
         return new double[]{a, b};
     }

434: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

435: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-95_Auto\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,15 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        if (p == 0) {
+			return -1;
+		}
+		if (p == 0) {
+			return -1;
+		}
+		double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+            ret = 0.0;
         return ret;
     }
     

436: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\GenProg-A_Math-95_Manual\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,12 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double ret = 1.0;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2.0) {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
     

437: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (false) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

438: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

439: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -560,7 +560,7 @@ public class XYSeries extends Series implements Cloneable, Serializable {
             // Collections.binarySearch() and tells us where to insert the
             // new item...otherwise it will be just -1 and we should just
             // append the value to the list...
-            if (this.autoSort) {
+            if (false) {
                 this.data.add(-index - 1, new XYDataItem(x, y));
             }
             else {

440: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

441: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-10_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1268,8 +1268,12 @@ public final class NodeUtil {
         return allResultsMatch(n.getFirstChild(), p)
             && allResultsMatch(n.getLastChild(), p);
       case Token.HOOK:
-        return allResultsMatch(n.getFirstChild().getNext(), p)
-            && allResultsMatch(n.getLastChild(), p);
+        {
+			if (true)
+				return true;
+			return allResultsMatch(n.getFirstChild().getNext(), p)
+					&& allResultsMatch(n.getLastChild(), p);
+		}
       default:
         return p.apply(n);
     }

442: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-10_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

443: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-112_Auto\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1144,7 +1144,7 @@ class TypeInference
   private static void resolvedTemplateType(
       Map<TemplateType, JSType> map, TemplateType template, JSType resolved) {
     JSType previous = map.get(template);
-    if (!resolved.isUnknownType()) {
+    if (false) {
       if (previous == null) {
         map.put(template, resolved);
       } else {

444: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-112_Manual\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1189,9 +1189,15 @@ class TypeInference
     }
 
     // Try to infer the template types
-    Map<TemplateType, JSType> inferred = 
-        inferTemplateTypesFromParameters(fnType, n);
-
+    Map<TemplateType, JSType> inferred = Maps.filterKeys(
+        inferTemplateTypesFromParameters(fnType, n),
+        new Predicate<TemplateType>() {
+
+          @Override
+          public boolean apply(TemplateType key) {
+            return keys.contains(key);
+          }}
+        );
 
     // Replace all template types. If we couldn't find a replacement, we
     // replace it with UNKNOWN.

445: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-113_Buggy\\src\\com\\google\\javascript\\jscomp\\ProcessClosurePrimitives.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-113_Auto\\src\\com\\google\\javascript\\jscomp\\ProcessClosurePrimitives.java"	
@@ -326,7 +326,7 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
       // the checks for broken requires turned off. In these cases, we
       // allow broken requires to be preserved by the first run to
       // let them be caught in the subsequent run.
-      if (provided != null) {
+      if (false) {
         parent.detachFromParent();
         compiler.reportCodeChange();
       }

446: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-113_Buggy\\src\\com\\google\\javascript\\jscomp\\ProcessClosurePrimitives.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-113_Manual\\src\\com\\google\\javascript\\jscomp\\ProcessClosurePrimitives.java"	
@@ -326,7 +326,7 @@ class ProcessClosurePrimitives extends AbstractPostOrderCallback
       // the checks for broken requires turned off. In these cases, we
       // allow broken requires to be preserved by the first run to
       // let them be caught in the subsequent run.
-      if (provided != null) {
+      if (provided != null || requiresLevel.isOn()) {
         parent.detachFromParent();
         compiler.reportCodeChange();
       }

447: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -727,7 +727,7 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
+          if (false) {
             return CanInlineResult.NO;
           }
           // Check for arguments that are evaluated more than once.

448: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

449: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-124_Auto\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -211,8 +211,7 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
     Preconditions.checkArgument(node.isGetProp());
 
       node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    if (true) {
       return false;
     }
 

450: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-124_Manual\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -210,7 +210,9 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
     }
     Preconditions.checkArgument(node.isGetProp());
 
+    while (node.isGetProp()) {
       node = node.getFirstChild();
+    }
     if (node.isName()
         && isNameAssignedTo(node.getString(), replacement)) {
       return false;

451: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-15_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-15_Auto\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -367,7 +367,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
+        if (true) {
           return false;
         }
       }

452: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-15_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-15_Manual\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -99,6 +99,9 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
           return true;
         }
 
+        if (n.isDelProp()) {
+          return true;
+        }
 
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {

453: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-1_Buggy\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-1_Auto\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
@@ -393,7 +393,7 @@ class RemoveUnusedVars
       Node lastArg;
       while ((lastArg = argList.getLastChild()) != null) {
         Var var = fnScope.getVar(lastArg.getString());
-        if (!referenced.contains(var)) {
+        if (false) {
           argList.removeChild(lastArg);
           compiler.reportCodeChange();
         } else {

454: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-1_Buggy\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-1_Manual\\src\\com\\google\\javascript\\jscomp\\RemoveUnusedVars.java"	
@@ -376,6 +376,9 @@ class RemoveUnusedVars
     // is removing globals, then it's OK to remove unused function args.
     //
     // See http://code.google.com/p/closure-compiler/issues/detail?id=253
+    if (!removeGlobals) {
+      return;
+    }
 
     Node function = fnScope.getRootNode();
 

455: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -117,7 +117,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       if (n == parent.getLastChild()) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
+          if (true) continue;
           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
           else break;
         }

456: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

457: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -108,7 +108,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
+      if (false) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA)

458: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

459: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-2_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1571,6 +1571,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     Set<String> currentPropertyNames;
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
+      if (true) return;
       currentPropertyNames = implicitProto.getOwnPropertyNames();
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);

460: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-2_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1569,9 +1569,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       ObjectType interfaceType) {
     ObjectType implicitProto = interfaceType.getImplicitPrototype();
     Set<String> currentPropertyNames;
+    if (implicitProto == null) {
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
+      currentPropertyNames = ImmutableSet.of();
+    } else {
       currentPropertyNames = implicitProto.getOwnPropertyNames();
+    }
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {

461: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-33_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -567,7 +567,7 @@ class PrototypeObjectType extends ObjectType {
     if (constraintObj.isRecordType()) {
       for (String prop : constraintObj.getOwnPropertyNames()) {
         JSType propType = constraintObj.getPropertyType(prop);
-        if (!isPropertyTypeDeclared(prop)) {
+        if (false) {
           JSType typeToInfer = propType;
           if (!hasProperty(prop)) {
             typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)

462: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-33_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -554,6 +554,9 @@ class PrototypeObjectType extends ObjectType {
   @Override
   public void matchConstraint(ObjectType constraintObj) {
     // We only want to match contraints on anonymous types.
+    if (hasReferenceName()) {
+      return;
+    }
 
     // Handle the case where the constraint object is a record type.
     //

463: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-38_Auto\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if (false) {
       add(" ");
     }
 

464: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-38_Manual\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if ((x < 0 || negativeZero) && prev == '-') {
       add(" ");
     }
 

465: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-3_Auto\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -402,7 +402,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
+        if (true) {
           return false;
         }
       }

466: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-3_Manual\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -152,7 +152,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
+      if (c.canInline(t.getScope())) {
         c.inlineVariable();
 
         // If definition c has dependencies, then inlining it may have
@@ -277,7 +277,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
       return defMetadata.node;
     }
 
-    private boolean canInline() {
+    private boolean canInline(final Scope scope) {
       // Cannot inline a parameter.
       if (getDefCfgNode().isFunction()) {
         return false;
@@ -372,6 +372,12 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
                   case Token.REGEXP:
                   case Token.NEW:
                     return true;
+                  case Token.NAME:
+                    Var var = scope.getOwnSlot(input.getString());
+                    if (var != null
+                        && var.getParentNode().isCatch()) {
+                      return true;
+                    }
                 }
                 return false;
               }

467: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-46_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -139,7 +139,7 @@ class RecordType extends PrototypeObjectType {
 
   @Override
   public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
+    if (true) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);

468: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-46_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,6 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

469: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-4_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-4_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
@@ -187,7 +187,7 @@ class NamedType extends ProxyObjectType {
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (false) {
       handleTypeCycle(t);
     }
 

470: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-4_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-4_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
@@ -187,7 +187,7 @@ class NamedType extends ProxyObjectType {
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 
@@ -199,7 +199,7 @@ class NamedType extends ProxyObjectType {
     }
 
     resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 

471: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-51_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-51_Auto\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -238,7 +238,7 @@ abstract class CodeConsumer {
       add(" ");
     }
 
-    if ((long) x == x) {
+    if (false) {
       long value = (long) x;
       long mantissa = value;
       int exp = 0;

472: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-51_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-51_Manual\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -238,7 +238,7 @@ abstract class CodeConsumer {
       add(" ");
     }
 
-    if ((long) x == x) {
+    if ((long) x == x && !isNegativeZero(x)) {
       long value = (long) x;
       long mantissa = value;
       int exp = 0;

473: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-55_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -76,7 +76,7 @@ class FunctionRewriter implements CompilerPass {
       }
 
       Node helperCode = parseHelperCode(reducer);
-      if (helperCode == null) {
+      if (true) {
         continue;
       }
 

474: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-55_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -114,7 +114,8 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return NodeUtil.isFunctionExpression(n)
+        && !NodeUtil.isGetOrSetKey(n.getParent());
   }
 
   /**

475: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-66_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-66_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -511,7 +511,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
       case Token.STRING:
         // Object literal keys are handled with OBJECTLIT
-        if (!NodeUtil.isObjectLitKey(n, n.getParent())) {
+        if (false) {
           ensureTyped(t, n, STRING_TYPE);
           // Object literal keys are not typeable
         }

476: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-66_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-66_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -513,7 +513,9 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
         // Object literal keys are handled with OBJECTLIT
         if (!NodeUtil.isObjectLitKey(n, n.getParent())) {
           ensureTyped(t, n, STRING_TYPE);
+        } else {
           // Object literal keys are not typeable
+          typeable = false;
         }
         break;
 

477: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-75_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-75_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -329,10 +329,7 @@ public final class NodeUtil {
       }
     }
 
-    if (s.length() > 3
-        && (s.charAt(0) == '-' || s.charAt(0) == '+')
-        && s.charAt(1) == '0'
-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {
+    if (true) {
       // hex numbers with explicit signs vary between browsers.
       return null;
     }

478: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-75_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-75_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -310,7 +310,10 @@ public final class NodeUtil {
   }
 
   static Double getStringNumberValue(String rawJsString) {
+    if (rawJsString.contains("\u000b")) {
       // vertical tab is not always whitespace
+      return null;
+    }
 
     String s = trimJsWhiteSpace(rawJsString);
     // return ScriptRuntime.toNumber(s);
@@ -372,7 +375,7 @@ public final class NodeUtil {
   static TernaryValue isStrWhiteSpaceChar(int c) {
     switch (c) {
       case '\u000B': // <VT>
-        return TernaryValue.TRUE;
+        return TernaryValue.UNKNOWN;  // IE says "no", EcmaScript says "yes"
       case ' ': // <SP>
       case '\n': // <LF>
       case '\r': // <CR>

479: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-7_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-7_Auto\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -392,7 +392,9 @@ public abstract class ChainableReverseAbstractInterpreter
           if (restricted == null) {
             restricted = restrictedAlternate;
           } else {
-            restricted = restrictedAlternate.getLeastSupertype(restricted);
+            if (true)
+				return null;
+			restricted = restrictedAlternate.getLeastSupertype(restricted);
           }
         }
       }

480: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-7_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-7_Manual\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -610,9 +610,13 @@ public abstract class ChainableReverseAbstractInterpreter
     public JSType caseObjectType(ObjectType type) {
       if (value.equals("function")) {
         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
+        if (resultEqualsValue) {
           // Objects are restricted to "Function", subtypes are left
+          return ctorType.getGreatestSubtype(type);
+        } else {
           // Only filter out subtypes of "function"
+          return type.isSubtype(ctorType) ? null : type;
+        }
       }
       return matchesExpectation("object") ? type : null;
     }

481: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-86_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2462,7 +2462,7 @@ public final class NodeUtil {
         // TODO(nicksantos): This needs to be changed so that it
         // returns true iff we're sure the value was never aliased from inside
         // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

482: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Closure-86_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2462,7 +2462,7 @@ public final class NodeUtil {
         // TODO(nicksantos): This needs to be changed so that it
         // returns true iff we're sure the value was never aliased from inside
         // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

483: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -449,10 +449,7 @@ public class NumberUtils {
             switch (lastChar) {
                 case 'l' :
                 case 'L' :
-                    if (dec == null
-                        && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                    if (false) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

484: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

485: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,7 +303,9 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
+            if (false){
             days += 31;
+            }
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.

486: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

487: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -140,7 +140,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                 for (Integer row : minRatioPositions) {
                     int i = tableau.getNumObjectiveFunctions();
                     for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
-                        if (row == tableau.getBasicRow(i)) {
+                        if (true) {
                             if (i < minIndex) {
                                 minIndex = i;
                                 minRow = row;

488: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

489: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-31_Buggy\\src\\org\\apache\\commons\\math3\\util\\ContinuedFraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-31_Auto\\src\\org\\apache\\commons\\math3\\util\\ContinuedFraction.java"	
@@ -174,7 +174,9 @@ public abstract class ContinuedFraction {
                                                x);
             }
             if (Double.isNaN(hN)) {
-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
+                if (true)
+					return -1;
+				throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
                                                x);
             }
 

490: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-31_Buggy\\src\\org\\apache\\commons\\math3\\util\\ContinuedFraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-31_Manual\\src\\org\\apache\\commons\\math3\\util\\ContinuedFraction.java"	
@@ -131,8 +131,6 @@ public abstract class ContinuedFraction {
 
         int n = 1;
         double dPrev = 0.0;
-        double p0 = 1.0;
-        double q1 = 1.0;
         double cPrev = hPrev;
         double hN = hPrev;
 
@@ -140,34 +138,18 @@ public abstract class ContinuedFraction {
             final double a = getA(n, x);
             final double b = getB(n, x);
 
-            double cN = a * hPrev + b * p0;
-            double q2 = a * q1 + b * dPrev;
-            if (Double.isInfinite(cN) || Double.isInfinite(q2)) {
-                double scaleFactor = 1d;
-                double lastScaleFactor = 1d;
-                final int maxPower = 5;
-                final double scale = FastMath.max(a,b);
-                if (scale <= 0) {  // Can't scale
-                    throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x);
-                }
-                for (int i = 0; i < maxPower; i++) {
-                    lastScaleFactor = scaleFactor;
-                    scaleFactor *= scale;
-                    if (a != 0.0 && a > b) {
-                        cN = hPrev / lastScaleFactor + (b / scaleFactor * p0);
-                        q2 = q1 / lastScaleFactor + (b / scaleFactor * dPrev);
-                    } else if (b != 0) {
-                        cN = (a / scaleFactor * hPrev) + p0 / lastScaleFactor;
-                        q2 = (a / scaleFactor * q1) + dPrev / lastScaleFactor;
-                    }
-                    if (!(Double.isInfinite(cN) || Double.isInfinite(q2))) {
-                        break;
-                    }
-                }
+            double dN = a + b * dPrev;
+            if (Precision.equals(dN, 0.0, small)) {
+                dN = small;
+            }
+            double cN = a + b / cPrev;
+            if (Precision.equals(cN, 0.0, small)) {
+                cN = small;
             }
 
-            final double deltaN = cN / q2 / cPrev;
-            hN = cPrev * deltaN;
+            dN = 1 / dN;
+            final double deltaN = cN * dN;
+            hN = hPrev * deltaN;
 
             if (Double.isInfinite(hN)) {
                 throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,
@@ -182,11 +164,9 @@ public abstract class ContinuedFraction {
                 break;
             }
 
-            dPrev = q1;
-            cPrev = cN / q2;
-            p0 = hPrev;
-            hPrev = cN;
-            q1 = q2;
+            dPrev = dN;
+            cPrev = cN;
+            hPrev = hN;
             n++;
         }
 

491: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-32_Buggy\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-32_Auto\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
@@ -133,7 +133,7 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {
 
         if (v.length == 0) {
             final BSPTree<Euclidean2D> tree = getTree(false);
-            if ((Boolean) tree.getAttribute()) {
+            if (false) {
                 // the instance covers the whole space
                 setSize(Double.POSITIVE_INFINITY);
                 setBarycenter(Vector2D.NaN);

492: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-32_Buggy\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-32_Manual\\src\\org\\apache\\commons\\math3\\geometry\\euclidean\\twod\\PolygonsSet.java"	
@@ -133,7 +133,7 @@ public class PolygonsSet extends AbstractRegion<Euclidean2D, Euclidean1D> {
 
         if (v.length == 0) {
             final BSPTree<Euclidean2D> tree = getTree(false);
-            if ((Boolean) tree.getAttribute()) {
+            if (tree.getCut() == null && (Boolean) tree.getAttribute()) {
                 // the instance covers the whole space
                 setSize(Double.POSITIVE_INFINITY);
                 setBarycenter(Vector2D.NaN);

493: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-49_Auto\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -661,7 +661,7 @@ public class OpenMapRealVector extends AbstractRealVector
     /** {@inheritDoc} */
     public void setEntry(int index, double value) {
         checkIndex(index);
-        if (!isDefaultValue(value)) {
+        if (true) {
             entries.put(index, value);
         } else if (entries.containsKey(index)) {
             entries.remove(index);

494: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-49_Manual\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -342,7 +342,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
@@ -355,7 +355,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v[iter.key()]);
@@ -367,7 +367,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));
@@ -380,7 +380,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v[iter.key()]);

495: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,7 +184,7 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
+                    if (false) {
                         x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }

496: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

497: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1135,7 +1135,9 @@ public class EigenDecompositionImpl implements EigenDecomposition {
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
+                    if (true)
+						return true;
+					final double tmp = work[i + k];
                     work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }

498: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

499: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1534,7 +1534,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double b1 = work[np - 2];
                 double b2 = work[np - 6];
                 final double gam = dN2;
-                if (work[np - 8] > b2 || work[np - 4] > b1) {
+                if (true) {
                     return;
                 }
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);

500: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

501: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,7 +87,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
+            if (true) {
                 // accept the contracted simplex
 
             // check convergence

502: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

503: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -196,12 +196,6 @@ public class UnivariateRealSolverUtils {
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};

504: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

505: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-95_Auto\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -142,7 +142,9 @@ public class FDistributionImpl
      */
     protected double getInitialDomain(double p) {
         double ret;
-        double d = getDenominatorDegreesOfFreedom();
+        if (true)
+			return 0;
+		double d = getDenominatorDegreesOfFreedom();
             // use mean
             ret = d / (d - 2.0);
         return ret;

506: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Kali-A_Math-95_Manual\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,12 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double ret = 1.0;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2.0) {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
     

507: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-13_Auto\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, serialVersionUID - w[2]),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

508: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-13_Manual\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

509: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-17_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-17_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -876,7 +876,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
-        if (end < start) {
+        if ((end < start) && (this.data.size() > 0)) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();

510: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-17_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-17_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -854,7 +854,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
      *         subclasses may differ.
      */
     public Object clone() throws CloneNotSupportedException {
-        Object clone = createCopy(0, getItemCount() - 1);
+        TimeSeries clone = (TimeSeries) super.clone();
+        clone.data = (List) ObjectUtilities.deepClone(this.data);
         return clone;
     }
 

511: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-19_Auto\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -695,7 +695,10 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.3
      */
     public int getDomainAxisIndex(CategoryAxis axis) {
-        return this.domainAxes.indexOf(axis);
+        if (axis == null) {
+    throw new IllegalArgumentException("Null 'axis' argument.");
+}
+return this.domainAxes.indexOf(axis);
     }
     
     /**

512: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-19_Manual\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -695,6 +695,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.3
      */
     public int getDomainAxisIndex(CategoryAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         return this.domainAxes.indexOf(axis);
     }
     
@@ -970,6 +973,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();

513: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

514: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

515: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-26_Auto\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,14 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
-                EntityCollection entities = owner.getEntityCollection();
+                if (owner != null) {
+	EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+}
+
         }
         return state;
 

516: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-26_Manual\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,13 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
+            if (owner != null) {
                 EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+            }
         }
         return state;
 

517: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-3_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -882,7 +882,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
                 this.data.remove(0);
                 removed = true;
             }
-            if (removed) {
+            if ((removed) || !(notify)) {
                 findBoundsByIteration();
                 if (notify) {
                     fireSeriesChanged();

518: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-3_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -1054,6 +1054,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+        copy.minY = Double.NaN;
+        copy.maxY = Double.NaN;
         copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {

519: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-4_Auto\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,7 +4490,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
-                    Collection c = r.getAnnotations();
+                    if (r != null) {
+	Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
                         XYAnnotation a = (XYAnnotation) i.next();
@@ -4498,6 +4499,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+}
+
             }
         }
 

520: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-4_Manual\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,6 +4490,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
+                if (r != null) {
                     Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
@@ -4498,6 +4499,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+                }
             }
         }
 

521: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -560,7 +560,7 @@ public class XYSeries extends Series implements Cloneable, Serializable {
             // Collections.binarySearch() and tells us where to insert the
             // new item...otherwise it will be just -1 and we should just
             // append the value to the list...
-            if (this.autoSort) {
+            if ((index >= 0 && !this.allowDuplicateXValues)) {
                 this.data.add(-index - 1, new XYDataItem(x, y));
             }
             else {

522: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

523: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-7_Auto\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,7 +297,7 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxStartIndex).getPeriod().getStart()
                 .getTime();
             long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                 .getTime();

524: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-7_Manual\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,9 +297,9 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
                 .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
                 .getTime();
             long maxMiddle = s + (e - s) / 2;
             if (middle > maxMiddle) {

525: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-8_Buggy\\src\\org\\jfree\\data\\time\\Week.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-8_Auto\\src\\org\\jfree\\data\\time\\Week.java"	
@@ -172,7 +172,7 @@ public class Week extends RegularTimePeriod implements Serializable {
      */
     public Week(Date time, TimeZone zone) {
         // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        this(time, zone, Locale.getDefault());
     }
 
     /**

526: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-8_Buggy\\src\\org\\jfree\\data\\time\\Week.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Chart-8_Manual\\src\\org\\jfree\\data\\time\\Week.java"	
@@ -172,7 +172,7 @@ public class Week extends RegularTimePeriod implements Serializable {
      */
     public Week(Date time, TimeZone zone) {
         // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        this(time, zone, Locale.getDefault());
     }
 
     /**

527: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-10_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

528: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-10_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

529: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -695,7 +695,7 @@ class FunctionInjector {
     Node block = fnNode.getLastChild();
 
     boolean hasSideEffects = false;
-    if (block.hasChildren()) {
+    if ((!isDirectCallNodeReplacementPossible(fnNode))) {
       Preconditions.checkState(block.hasOneChild());
       Node stmt = block.getFirstChild();
       if (stmt.isReturn()) {

530: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

531: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-11_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,7 +1311,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
+    } else if (n.getJSType() == null && parent.isAssign()) {
       return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {

532: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-11_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,8 +1311,6 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);

533: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-125_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,7 +1658,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
+      if ((type.isConstructor())) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {

534: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-125_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,7 +1658,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
+      if (fnType != null && fnType.hasInstanceType()) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {

535: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -114,7 +114,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       if (isResultUsed) {
         return;
       }
-      if (n == parent.getLastChild()) {
+      if ((parent == null)) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA) continue;

536: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

537: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -108,7 +108,8 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
+      if ((n.isEmpty() ||
+        n.isComma())) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA)

538: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

539: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-2_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1571,7 +1571,8 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     Set<String> currentPropertyNames;
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
-      currentPropertyNames = implicitProto.getOwnPropertyNames();
+      if (implicitProto != null) {
+	currentPropertyNames = implicitProto.getOwnPropertyNames();
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {
@@ -1585,6 +1586,8 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       }
       currentProperties.put(name, interfaceType);
     }
+}
+
     for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
       checkInterfaceConflictProperties(t, n, functionName, properties,
           currentProperties, iType);

540: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-2_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1569,9 +1569,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       ObjectType interfaceType) {
     ObjectType implicitProto = interfaceType.getImplicitPrototype();
     Set<String> currentPropertyNames;
+    if (implicitProto == null) {
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
+      currentPropertyNames = ImmutableSet.of();
+    } else {
       currentPropertyNames = implicitProto.getOwnPropertyNames();
+    }
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {

541: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-35_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-35_Auto\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1119,7 +1119,7 @@ class TypeInference
     ObjectType constraintObj =
         ObjectType.cast(constraint.restrictByNotNullOrUndefined());
     if (constraintObj != null && constraintObj.isRecordType()) {
-      ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
+      ObjectType objType = ObjectType.cast(type.collapseUnion());
       if (objType != null) {
         for (String prop : constraintObj.getOwnPropertyNames()) {
           JSType propType = constraintObj.getPropertyType(prop);

542: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-35_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-35_Manual\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1118,21 +1118,8 @@ class TypeInference
 
     ObjectType constraintObj =
         ObjectType.cast(constraint.restrictByNotNullOrUndefined());
-    if (constraintObj != null && constraintObj.isRecordType()) {
-      ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
-      if (objType != null) {
-        for (String prop : constraintObj.getOwnPropertyNames()) {
-          JSType propType = constraintObj.getPropertyType(prop);
-          if (!objType.isPropertyTypeDeclared(prop)) {
-            JSType typeToInfer = propType;
-            if (!objType.hasProperty(prop)) {
-              typeToInfer =
-                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
-            }
-            objType.defineInferredProperty(prop, typeToInfer, null);
-          }
-        }
-      }
+    if (constraintObj != null) {
+      type.matchConstraint(constraintObj);
     }
   }
 

543: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-38_Auto\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if (x <= 0 && prev == '-') {
       add(" ");
     }
 

544: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-38_Manual\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if ((x < 0 || negativeZero) && prev == '-') {
       add(" ");
     }
 

545: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-40_Buggy\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-40_Auto\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
@@ -632,7 +632,7 @@ final class NameAnalyzer implements CompilerPass {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
+          JsName name = getName(ns.name, true);
           if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));

546: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-40_Buggy\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-40_Manual\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
@@ -632,11 +632,9 @@ final class NameAnalyzer implements CompilerPass {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
-          if (name != null) {
+          JsName name = getName(ns.name, true);
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
-          }
         }
       }
     }

547: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-46_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -139,7 +139,7 @@ class RecordType extends PrototypeObjectType {
 
   @Override
   public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
+    if (!that.isNumberObjectType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);

548: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-46_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,6 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

549: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-4_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-4_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
@@ -187,7 +187,7 @@ class NamedType extends ProxyObjectType {
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 

550: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-4_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-4_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
@@ -187,7 +187,7 @@ class NamedType extends ProxyObjectType {
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 
@@ -199,7 +199,7 @@ class NamedType extends ProxyObjectType {
     }
 
     resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 

551: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-62_Auto\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

552: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-62_Manual\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

553: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-70_Buggy\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-70_Auto\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
@@ -1742,7 +1742,7 @@ final class TypedScopeCreator implements ScopeCreator {
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                  jsDocParameter.getJSType(), false);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);

554: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-70_Buggy\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-70_Manual\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
@@ -1742,7 +1742,7 @@ final class TypedScopeCreator implements ScopeCreator {
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                  jsDocParameter.getJSType(), false);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);

555: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-73_Auto\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

556: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Closure-73_Manual\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

557: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-10_Auto\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -304,7 +304,7 @@ public class FastDateParser implements DateParser, Serializable {
         boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
+            if((Character.isWhitespace(c)) && !(!wasWhite)) {
                 if(!wasWhite) {
                     wasWhite= true;
                     regex.append("\\s*+");

558: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-10_Manual\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -301,17 +301,8 @@ public class FastDateParser implements DateParser, Serializable {
      * @return The <code>StringBuilder</code>
      */
     private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {
-        boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
-            wasWhite= false;
             switch(c) {
             case '\'':
                 if(unquote) {

559: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-16_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -487,7 +487,7 @@ public class NumberUtils {
             }
             dec = null;
         }
-        if (!Character.isDigit(lastChar) && lastChar != '.') {
+        if ((!Character.isDigit(lastChar) && lastChar != '.') && (expPos < str.length() - 1)) {
             if (expPos > -1 && expPos < str.length() - 1) {
                 exp = str.substring(expPos + 1, str.length() - 1);
             } else {

560: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-16_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -455,7 +455,7 @@ public class NumberUtils {
             // a wrong value.
             return null;
         }
-        if (str.startsWith("0x") || str.startsWith("-0x")) {
+        if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             return createInteger(str);
         }   
         char lastChar = str.charAt(str.length() - 1);

561: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-18_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-18_Auto\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
@@ -492,7 +492,7 @@ public class FastDateFormat extends Format {
                 rule = new TextField(Calendar.ERA, ERAs);
                 break;
             case 'y': // year (number)
-                if (tokenLen >= 4) {
+                if ((tokenLen >= 4) || !(tokenLen == 2)) {
                     rule = selectNumberRule(Calendar.YEAR, tokenLen);
                 } else {
                     rule = TwoDigitYearField.INSTANCE;

562: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-18_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-18_Manual\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
@@ -492,10 +492,10 @@ public class FastDateFormat extends Format {
                 rule = new TextField(Calendar.ERA, ERAs);
                 break;
             case 'y': // year (number)
-                if (tokenLen >= 4) {
-                    rule = selectNumberRule(Calendar.YEAR, tokenLen);
-                } else {
+                if (tokenLen == 2) {
                     rule = TwoDigitYearField.INSTANCE;
+                } else {
+                    rule = selectNumberRule(Calendar.YEAR, tokenLen < 4 ? 4 : tokenLen);
                 }
                 break;
             case 'M': // month in year (text and number)

563: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-20_Auto\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3380,7 +3380,7 @@ public class StringUtils {
             return EMPTY;
         }
 
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
+        StringBuilder buf = new StringBuilder(noOfItems + separator.length());
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

564: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-20_Manual\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3295,7 +3295,7 @@ public class StringUtils {
             return EMPTY;
         }
         
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {
@@ -3380,7 +3380,7 @@ public class StringUtils {
             return EMPTY;
         }
 
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

565: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-21_Buggy\\src\\org\\apache\\commons\\lang3\\time\\DateUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-21_Auto\\src\\org\\apache\\commons\\lang3\\time\\DateUtils.java"	
@@ -262,7 +262,7 @@ public class DateUtils {
         return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
                 cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
                 cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
+                cal1.get(MODIFY_TRUNCATE) == cal2.get(Calendar.HOUR) &&
                 cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
                 cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                 cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&

566: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-21_Buggy\\src\\org\\apache\\commons\\lang3\\time\\DateUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-21_Manual\\src\\org\\apache\\commons\\lang3\\time\\DateUtils.java"	
@@ -262,7 +262,7 @@ public class DateUtils {
         return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
                 cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
                 cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
+                cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY) &&
                 cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
                 cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                 cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&

567: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-22_Auto\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -581,7 +581,7 @@ public final class Fraction extends Number implements Comparable<Fraction> {
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(u) <= 1 && Math.abs(v) <= 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

568: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-22_Manual\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -580,8 +580,14 @@ public final class Fraction extends Number implements Comparable<Fraction> {
      */
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
+        if ((u == 0) || (v == 0)) {
+            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
+                throw new ArithmeticException("overflow: gcd is 2^31");
+            }
+            return Math.abs(u) + Math.abs(v);
+        }
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(u) == 1 || Math.abs(v) == 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

569: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-24_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-24_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -1410,7 +1410,7 @@ public class NumberUtils {
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
                 // not allowing L with an exponent or decimal point
-                return foundDigit && !hasExp;
+                return (foundDigit && !hasExp) && !(hasDecPoint || hasExp);
             }
             // last character is illegal
             return false;

570: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-24_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-24_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -1410,7 +1410,7 @@ public class NumberUtils {
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
                 // not allowing L with an exponent or decimal point
-                return foundDigit && !hasExp;
+                return foundDigit && !hasExp && !hasDecPoint;
             }
             // last character is illegal
             return false;

571: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-27_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -486,7 +486,7 @@ public class NumberUtils {
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
-                mant = str.substring(0, expPos);
+                mant = str.substring(0, INTEGER_ZERO);
             } else {
                 mant = str;
             }

572: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-27_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -476,7 +476,7 @@ public class NumberUtils {
         if (decPos > -1) {
 
             if (expPos > -1) {
-                if (expPos < decPos) {
+                if (expPos < decPos || expPos > str.length()) {
                     throw new NumberFormatException(str + " is not a valid number.");
                 }
                 dec = str.substring(decPos + 1, expPos);
@@ -486,6 +486,9 @@ public class NumberUtils {
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
+                if (expPos > str.length()) {
+                    throw new NumberFormatException(str + " is not a valid number.");
+                }
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;

573: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-41_Buggy\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-41_Auto\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
@@ -169,7 +169,7 @@ public class ClassUtils {
         if (cls == null) {
             return StringUtils.EMPTY;
         }
-        return getShortClassName(cls.getName());
+        return getShortCanonicalName(cls.getName());
     }
 
     /**

574: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-41_Buggy\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-41_Manual\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
@@ -188,10 +188,23 @@ public class ClassUtils {
             return StringUtils.EMPTY;
         }
 
+        StringBuffer arrayPrefix = new StringBuffer();
 
         // Handle array encoding
+        if (className.startsWith("[")) {
+            while (className.charAt(0) == '[') {
+                className = className.substring(1);
+                arrayPrefix.append("[]");
+            }
             // Strip Object type encoding
+            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
+                className = className.substring(1, className.length() - 1);
+            }
+        }
 
+        if (reverseAbbreviationMap.containsKey(className)) {
+            className = reverseAbbreviationMap.get(className);
+        }
 
         int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
         int innerIdx = className.indexOf(
@@ -200,7 +213,7 @@ public class ClassUtils {
         if (innerIdx != -1) {
             out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);
         }
-        return out;
+        return out + arrayPrefix;
     }
 
     // Package name
@@ -242,12 +255,18 @@ public class ClassUtils {
      * @return the package name or an empty string
      */
     public static String getPackageName(String className) {
-        if (className == null) {
+        if (className == null || className.length() == 0) {
             return StringUtils.EMPTY;
         }
 
         // Strip array encoding
+        while (className.charAt(0) == '[') {
+            className = className.substring(1);
+        }
         // Strip Object type encoding
+        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
+            className = className.substring(1);
+        }
 
         int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
         if (i == -1) {

575: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-43_Auto\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -155,7 +155,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         while (pos.getIndex() < pattern.length()) {
             switch (c[pos.getIndex()]) {
             case QUOTE:
-                appendQuotedString(pattern, pos, stripCustom, true);
+                appendQuotedString(pattern, pos, stripCustom, false);
                 break;
             case START_FE:
                 fmtCount++;

576: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-43_Manual\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,6 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;

577: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-44_Buggy\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-44_Auto\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
@@ -191,8 +191,7 @@ public final class NumberUtils {
                 case 'l' :
                 case 'L' :
                     if (dec == null
-                        && exp == null
-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
+                        && exp == null || (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

578: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-44_Buggy\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-44_Manual\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
@@ -142,6 +142,9 @@ public final class NumberUtils {
         if (val.length() == 0) {
             throw new NumberFormatException("\"\" is not a valid number.");
         }
+        if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {
+            throw new NumberFormatException(val + " is not a valid number.");
+        }
         if (val.startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 

579: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-45_Buggy\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-45_Auto\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
@@ -619,7 +619,7 @@ public class WordUtils {
             upper = str.length();
         }
         // if upper is less than lower, raise it to lower
-        if (upper < lower) {
+        if ((upper < lower) && (upper != str.length())) {
             upper = lower;
         }
 

580: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-45_Buggy\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-45_Manual\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
@@ -613,6 +613,9 @@ public class WordUtils {
 
         // if the lower value is greater than the length of the string,
         // set to the length of the string
+        if (lower > str.length()) {
+            lower = str.length();    
+        }
         // if the upper value is -1 (i.e. no limit) or is greater
         // than the length of the string, set to the length of the string
         if (upper == -1 || upper > str.length()) {

581: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-51_Auto\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -669,7 +669,7 @@ public class BooleanUtils {
             }
             case 3: {
                 char ch = str.charAt(0);
-                if (ch == 'y') {
+                if ((ch == 'y') || !(ch == 'Y')) {
                     return 
                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
                         (str.charAt(2) == 's' || str.charAt(2) == 'S');

582: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-51_Manual\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -679,6 +679,7 @@ public class BooleanUtils {
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
                 }
+                return false;
             }
             case 4: {
                 char ch = str.charAt(0);

583: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-53_Buggy\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-53_Auto\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
@@ -661,7 +661,7 @@ public class DateUtils {
         }
 
         // reset time
-        if (date.getTime() != time) {
+        if ((!round || millisecs < 500)) {
             date.setTime(time);
             val.setTime(date);
         }

584: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-53_Buggy\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-53_Manual\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
@@ -640,18 +640,18 @@ public class DateUtils {
         int millisecs = val.get(Calendar.MILLISECOND);
         if (!round || millisecs < 500) {
             time = time - millisecs;
+        }
         if (field == Calendar.SECOND) {
             done = true;
-            }
         }
 
         // truncate seconds
         int seconds = val.get(Calendar.SECOND);
         if (!done && (!round || seconds < 30)) {
             time = time - (seconds * 1000L);
+        }
         if (field == Calendar.MINUTE) {
             done = true;
-            }
         }
 
         // truncate minutes

585: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-57_Auto\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,10 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        if (cAvailableLocaleSet == null) {
+    return false;
+}
+return cAvailableLocaleSet.contains(locale);
     }
 
     //
586: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-57_Manual\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,7 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        return availableLocaleList().contains(locale);
     }
 
     //
587: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -450,8 +450,7 @@ public class NumberUtils {
                 case 'l' :
                 case 'L' :
                     if (dec == null
-                        && exp == null
-                        && isDigits(numeric.substring(1))
+                        && exp == null || isDigits(numeric.substring(1))
                         && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
                         try {
                             return createLong(numeric);

588: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

589: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-59_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

590: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-59_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

591: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -319,7 +319,7 @@ public class DurationFormatUtils {
         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
+        days -= reduceAndCorrect(end, end, Calendar.DAY_OF_MONTH, days);
         months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
         years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 

592: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

593: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-6_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-6_Auto\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
@@ -92,7 +92,7 @@ public abstract class CharSequenceTranslator {
 //          // contract with translators is that they have to understand codepoints 
 //          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos += Character.charCount(Character.codePointAt(input, pt));
             }
         }
     }

594: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-6_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-6_Manual\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
@@ -92,7 +92,7 @@ public abstract class CharSequenceTranslator {
 //          // contract with translators is that they have to understand codepoints 
 //          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos += Character.charCount(Character.codePointAt(input, pt));
             }
         }
     }

595: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-7_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,7 +449,7 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
+        if ((StringUtils.isBlank(str))) {
             return null;
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {

596: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Lang-7_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,6 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
@@ -718,10 +715,13 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
+        if (str.trim().startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
             // to be in specification of class. OS X Java parses it to 
             // a wrong value.
+            throw new NumberFormatException(str + " is not a valid number.");
+        }
         return new BigDecimal(str);
     }
 

597: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-104_Buggy\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-104_Auto\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
@@ -159,7 +159,7 @@ public class Gamma implements Serializable {
             ret = Double.NaN;
         } else if (x == 0.0) {
             ret = 0.0;
-        } else if (a >= 1.0 && x > a) {
+        } else if (a >= 1.0 && x >= a) {
             // use regularizedGammaQ because it should converge faster in this
             // case.
             ret = 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations);

598: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-104_Buggy\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-104_Manual\\src\\org\\apache\\commons\\math\\special\\Gamma.java"	
@@ -34,7 +34,7 @@ public class Gamma implements Serializable {
     private static final long serialVersionUID = -6587513359895466954L;
 
     /** Maximum allowed numerical error. */
-    private static final double DEFAULT_EPSILON = 10e-9;
+    private static final double DEFAULT_EPSILON = 10e-15;
 
     /** Lanczos coefficients */
     private static double[] lanczos =

599: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-15_Buggy\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-15_Auto\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
@@ -1538,7 +1538,7 @@ public class FastMath {
         /* Handle special case x<0 */
         if (x < 0) {
             // y is an even integer in this case
-            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {
+            if ((y >= TWO_POWER_52 || y <= -TWO_POWER_52) && !(y < 8e298 && y > -8e298)) {
                 return pow(-x, y);
             }
 

600: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-15_Buggy\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-15_Manual\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
@@ -310,6 +310,7 @@ public class FastMath {
     /** 2^52 - double numbers this large must be integral (no fraction) or NaN or Infinite */
     private static final double TWO_POWER_52 = 4503599627370496.0;
     /** 2^53 - double numbers this large must be even. */
+    private static final double TWO_POWER_53 = 2 * TWO_POWER_52;
 
     /** Constant: {@value}. */
     private static final double F_1_3 = 1d / 3d;
@@ -1538,7 +1539,7 @@ public class FastMath {
         /* Handle special case x<0 */
         if (x < 0) {
             // y is an even integer in this case
-            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {
+            if (y >= TWO_POWER_53 || y <= -TWO_POWER_53) {
                 return pow(-x, y);
             }
 

601: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-40_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-40_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
@@ -257,7 +257,7 @@ public class BracketingNthOrderBrentSolver
                     // the guessed root is either not strictly inside the interval or it
                     // is a NaN (which occurs when some sampling points share the same y)
                     // we try again with a lower interpolation order
-                    if (signChangeIndex - start >= end - signChangeIndex) {
+                    if ((signChangeIndex - start >= end - signChangeIndex) || (y[0] * y[1] < 0)) {
                         // we have more points before the sign change, drop the lowest point
                         ++start;
                     } else {

602: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-40_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-40_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
@@ -232,10 +232,16 @@ public class BracketingNthOrderBrentSolver
             double targetY;
             if (agingA >= MAXIMAL_AGING) {
                 // we keep updating the high bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yB;
+                final int p = agingA - MAXIMAL_AGING;
+                final double weightA = (1 << p) - 1;
+                final double weightB = p + 1;
+                targetY = (weightA * yA - weightB * REDUCTION_FACTOR * yB) / (weightA + weightB);
             } else if (agingB >= MAXIMAL_AGING) {
                 // we keep updating the low bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yA;
+                final int p = agingB - MAXIMAL_AGING;
+                final double weightA = p + 1;
+                final double weightB = (1 << p) - 1;
+                targetY = (weightB * yB - weightA * REDUCTION_FACTOR * yA) / (weightA + weightB);
             } else {
                 // bracketing is balanced, try to find the root itself
                 targetY = 0;

603: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-42_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-42_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -193,7 +193,7 @@ class SimplexTableau implements Serializable {
             maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
         copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);
         matrix.setEntry(zIndex, width - 1,
-            maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());
+            maximize ? f.getConstantTerm() : -1 * f.hashCode());
 
         if (!restrictToNonNegative) {
             matrix.setEntry(zIndex, getSlackVariableOffset() - 1,

604: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-42_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-42_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -407,10 +407,12 @@ class SimplexTableau implements Serializable {
             continue;
           }
           Integer basicRow = getBasicRow(colIndex);
+          if (basicRow != null && basicRow == 0) {
               // if the basic row is found to be the objective function row
               // set the coefficient to 0 -> this case handles unconstrained 
               // variables that are still part of the objective function
-          if (basicRows.contains(basicRow)) {
+              coefficients[i] = 0;
+          } else if (basicRows.contains(basicRow)) {
               // if multiple variables can take a given value
               // then we choose the first and set the rest equal to 0
               coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);

605: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-43_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-43_Auto\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
@@ -158,7 +158,7 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {
         if (!(meanImpl instanceof Mean)) {
             meanImpl.increment(value);
         }
-        if (!(varianceImpl instanceof Variance)) {
+        if ((!(varianceImpl instanceof Variance)) || !(!(meanImpl instanceof Mean))) {
             varianceImpl.increment(value);
         }
         if (!(geoMeanImpl instanceof GeometricMean)) {

606: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-43_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-43_Manual\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
@@ -155,13 +155,13 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {
         secondMoment.increment(value);
         // If mean, variance or geomean have been overridden,
         // need to increment these
-        if (!(meanImpl instanceof Mean)) {
+        if (meanImpl != mean) {
             meanImpl.increment(value);
         }
-        if (!(varianceImpl instanceof Variance)) {
+        if (varianceImpl != variance) {
             varianceImpl.increment(value);
         }
-        if (!(geoMeanImpl instanceof GeometricMean)) {
+        if (geoMeanImpl != geoMean) {
             geoMeanImpl.increment(value);
         }
         n++;

607: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,7 +184,7 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
+                    if ((f1 == 0.0)) {
                         x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }

608: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

609: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-58_Auto\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit(guess);
     }
 
     /**

610: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-58_Manual\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit(guess);
     }
 
     /**

611: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-62_Buggy\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-62_Auto\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
@@ -159,7 +159,7 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
             try {
                 final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
                 final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
-                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
+                optima[i] = optimizer.optimize(f, goal, FastMath.min(min, bound2), FastMath.max(bound1, bound2));
             } catch (FunctionEvaluationException fee) {
                 optima[i] = null;
             } catch (ConvergenceException ce) {

612: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-62_Buggy\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-62_Manual\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
@@ -143,7 +143,7 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
                                                  final GoalType goal,
                                                  final double min, final double max)
         throws FunctionEvaluationException {
-        return optimize(f, goal, min, max, 0);
+        return optimize(f, goal, min, max, min + 0.5 * (max - min));
     }
 
     /** {@inheritDoc} */
@@ -157,9 +157,8 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
         // Multi-start loop.
         for (int i = 0; i < starts; ++i) {
             try {
-                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
-                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
-                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
+                final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
+                optima[i] = optimizer.optimize(f, goal, min, max, s);
             } catch (FunctionEvaluationException fee) {
                 optima[i] = null;
             } catch (ConvergenceException ce) {

613: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-63_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -414,7 +414,7 @@ public final class MathUtils {
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        return x == y;
     }
 
     /**

614: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-63_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -414,7 +414,7 @@ public final class MathUtils {
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        return equals(x, y, 1);
     }
 
     /**

615: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-70_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

616: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-70_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

617: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-75_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**

618: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-75_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**

619: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-7_Buggy\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-7_Auto\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
@@ -124,7 +124,7 @@ public abstract class AbstractIntegrator implements FirstOrderIntegrator {
                                 final double maxCheckInterval,
                                 final double convergence,
                                 final int maxIterationCount) {
-        addEventHandler(handler, maxCheckInterval, convergence,
+        addEventHandler(handler, maxIterationCount, convergence,
                         maxIterationCount,
                         new BracketingNthOrderBrentSolver(convergence, 5));
     }

620: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-7_Buggy\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-7_Manual\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
@@ -343,8 +343,10 @@ public abstract class AbstractIntegrator implements FirstOrderIntegrator {
                 final double[] eventY = interpolator.getInterpolatedState().clone();
 
                 // advance all event states to current time
-                currentEvent.stepAccepted(eventT, eventY);
-                isLastStep = currentEvent.stop();
+                for (final EventState state : eventsStates) {
+                    state.stepAccepted(eventT, eventY);
+                    isLastStep = isLastStep || state.stop();
+                }
 
                 // handle the first part of the step, up to the event
                 for (final StepHandler handler : stepHandlers) {
@@ -354,22 +356,19 @@ public abstract class AbstractIntegrator implements FirstOrderIntegrator {
                 if (isLastStep) {
                     // the event asked to stop integration
                     System.arraycopy(eventY, 0, y, 0, y.length);
-                    for (final EventState remaining : occuringEvents) {
-                        remaining.stepAccepted(eventT, eventY);
-                    }
                     return eventT;
                 }
 
-                boolean needReset = currentEvent.reset(eventT, eventY);
+                boolean needReset = false;
+                for (final EventState state : eventsStates) {
+                    needReset =  needReset || state.reset(eventT, eventY);
+                }
                 if (needReset) {
                     // some event handler has triggered changes that
                     // invalidate the derivatives, we need to recompute them
                     System.arraycopy(eventY, 0, y, 0, y.length);
                     computeDerivatives(eventT, y, yDot);
                     resetOccurred = true;
-                    for (final EventState remaining : occuringEvents) {
-                        remaining.stepAccepted(eventT, eventY);
-                    }
                     return eventT;
                 }
 

621: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -837,7 +837,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         }
 
         // initial checks for splits (see Parlett & Marques section 3.3)
-        flipIfWarranted(n, 2);
+        goodStep(n, 2);
 
         // two iterations with Li's test for initial splits
         initialSplits(n);

622: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

623: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1540,7 +1540,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start <= 2) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

624: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

625: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

626: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

627: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,7 +87,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
+            if (comparator.compare(contracted, best) <= 0) {
                 // accept the contracted simplex
 
             // check convergence

628: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

629: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

630: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

631: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                    if (tableau.getEntry(basicRow, i) == 1) {
                          coefficients[i] = 0;
                     }
                 }

632: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

633: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-89_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,12 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+            if (v instanceof Comparable<?>) {
+	addValue((Comparable<?>) v);
+} else {
+	throw new IllegalArgumentException("Illegal argument: v");
+}
+            
     }
     
     /**

634: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-89_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,11 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
+        if (v instanceof Comparable<?>){
             addValue((Comparable<?>) v);            
+        } else {
+            throw new IllegalArgumentException("Object must implement Comparable");
+        }
     }
     
     /**

635: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-8_Auto\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -184,7 +184,7 @@ public class DiscreteDistribution<T> {
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(1).getClass(), sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();

636: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\kPAR_Math-8_Manual\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -178,13 +178,13 @@ public class DiscreteDistribution<T> {
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+    public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        final Object[] out = new Object[sampleSize];
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();

637: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-13_Auto\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -441,13 +441,15 @@ public class BorderArrangement implements Arrangement, Serializable {
             h[1] = size.height;
         }
         h[2] = constraint.getHeight() - h[1] - h[0];
-        if (this.leftBlock != null) {
-            RectangleConstraint c3 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth()),
-                    LengthConstraintType.RANGE, h[2], null,
-                    LengthConstraintType.FIXED);
-            Size2D size = this.leftBlock.arrange(g2, c3);
-            w[2] = size.width;
+        if (null!=null) {
+            if (this.leftBlock != null) {
+                RectangleConstraint c3 = new RectangleConstraint(0.0,
+                new Range(0.0, constraint.getWidth()),
+                LengthConstraintType.RANGE, h[2], null,
+                LengthConstraintType.FIXED);
+                Size2D size = this.leftBlock.arrange(g2, c3);
+                w[2] = size.width;
+            }
         }
         h[3] = h[2];
         if (this.rightBlock != null) {

638: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-13_Manual\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

639: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-17_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-17_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -877,7 +877,9 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
-            throw new IllegalArgumentException("Requires start <= end.");
+            if (org.jfree.data.time.TimeSeries.DEFAULT_RANGE_DESCRIPTION.length() == org.jfree.data.time.TimeSeries.this.data.size()) {
+                throw new IllegalArgumentException("Requires start <= end.");
+            }
         }
         TimeSeries copy = (TimeSeries) super.clone();
 

640: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-17_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-17_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -854,7 +854,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
      *         subclasses may differ.
      */
     public Object clone() throws CloneNotSupportedException {
-        Object clone = createCopy(0, getItemCount() - 1);
+        TimeSeries clone = (TimeSeries) super.clone();
+        clone.data = (List) ObjectUtilities.deepClone(this.data);
         return clone;
     }
 

641: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-25_Auto\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -204,13 +204,15 @@ public class StatisticalBarRenderer extends BarRenderer
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
+        if (3 == 0) {
+            if (orientation == PlotOrientation.HORIZONTAL) {
+                drawHorizontalItem(g2, state, dataArea, plot, domainAxis,
+                rangeAxis, statData, row, column);
+            }
+            else if (orientation == PlotOrientation.VERTICAL) {
+                drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis,
+                statData, row, column);
+            }
         }
     }
                 

642: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-25_Manual\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -256,6 +256,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -312,7 +315,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -341,6 +346,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
                                      lowVal, rectY + rectHeight * 0.75);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
@@ -400,6 +406,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR Y
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -456,7 +465,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -484,6 +495,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
                                      rectX + rectWidth / 2.0d + 5.0d, lowVal);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);

643: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -560,7 +560,7 @@ public class XYSeries extends Series implements Cloneable, Serializable {
             // Collections.binarySearch() and tells us where to insert the
             // new item...otherwise it will be just -1 and we should just
             // append the value to the list...
-            if (this.autoSort) {
+            if (overwritten!=null) {
                 this.data.add(-index - 1, new XYDataItem(x, y));
             }
             else {

644: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

645: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-9_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-9_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -941,7 +941,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             endIndex = -(endIndex + 1); // this is first item AFTER end period
             endIndex = endIndex - 1;    // so this is last item BEFORE end
         }
-        if (endIndex < 0) {
+        if ((!((2) != (org.jfree.data.time.TimeSeries.this.data.size()))) || (endIndex < 0)) {
             emptyRange = true;
         }
         if (emptyRange) {

646: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-9_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Chart-9_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -941,7 +941,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             endIndex = -(endIndex + 1); // this is first item AFTER end period
             endIndex = endIndex - 1;    // so this is last item BEFORE end
         }
-        if (endIndex < 0) {
+        if ((endIndex < 0)  || (endIndex < startIndex)) {
             emptyRange = true;
         }
         if (emptyRange) {

647: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-44_Buggy\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-44_Auto\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
@@ -190,16 +190,18 @@ public final class NumberUtils {
             switch (lastChar) {
                 case 'l' :
                 case 'L' :
-                    if (dec == null
+                    if ((1) != (val.length())) {
+                        if (dec == null
                         && exp == null
                         && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
-                        try {
-                            return createLong(numeric);
-                        } catch (NumberFormatException nfe) {
-                            //Too big for a long
+                            try {
+                                return createLong(numeric);
+                            } catch (NumberFormatException nfe) {
+                                //Too big for a long
+                            }
+                            return createBigInteger(numeric);
+                            
                         }
-                        return createBigInteger(numeric);
-
                     }
                     throw new NumberFormatException(val + " is not a valid number.");
                 case 'f' :

648: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-44_Buggy\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-44_Manual\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
@@ -142,6 +142,9 @@ public final class NumberUtils {
         if (val.length() == 0) {
             throw new NumberFormatException("\"\" is not a valid number.");
         }
+        if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {
+            throw new NumberFormatException(val + " is not a valid number.");
+        }
         if (val.startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 

649: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-46_Auto\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -241,7 +241,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
-                            out.write('\\');
+                            if (escapeSingleQuote) {
+                                out.write('\\');
+                            }
                         out.write('/');
                         break;
                     default :

650: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-46_Manual\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -83,7 +83,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJava(String str) {
-        return escapeJavaStyleString(str, false);
+        return escapeJavaStyleString(str, false, false);
     }
 
     /**
@@ -99,7 +99,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      */
     public static void escapeJava(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, false);
+        escapeJavaStyleString(out, str, false, false);
     }
 
     /**
@@ -124,7 +124,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJavaScript(String str) {
-        return escapeJavaStyleString(str, true);
+        return escapeJavaStyleString(str, true, true);
     }
 
     /**
@@ -140,7 +140,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      **/
     public static void escapeJavaScript(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, true);
+        escapeJavaStyleString(out, str, true, true);
     }
 
     /**
@@ -151,13 +151,13 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @return the escaped string
      */
-    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
+    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {
         if (str == null) {
             return null;
         }
         try {
             StringWriter writer = new StringWriter(str.length() * 2);
-            escapeJavaStyleString(writer, str, escapeSingleQuotes);
+            escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);
             return writer.toString();
         } catch (IOException ioe) {
             // this should never ever happen while writing to a StringWriter
@@ -175,7 +175,8 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @throws IOException if an IOException occurs
      */
-    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
+    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote,
+            boolean escapeForwardSlash) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
@@ -241,7 +242,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
+                        if (escapeForwardSlash) {
                             out.write('\\');
+                        }
                         out.write('/');
                         break;
                     default :

651: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-51_Auto\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -669,10 +669,10 @@ public class BooleanUtils {
             }
             case 3: {
                 char ch = str.charAt(0);
-                if (ch == 'y') {
-                    return 
-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');
+                if (str!=null) {
+                    return
+                    (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
+                    (str.charAt(2) == 's' || str.charAt(2) == 'S');
                 }
                 if (ch == 'Y') {
                     return 

652: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-51_Manual\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -679,6 +679,7 @@ public class BooleanUtils {
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
                 }
+                return false;
             }
             case 4: {
                 char ch = str.charAt(0);

653: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-53_Buggy\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-53_Auto\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
@@ -661,9 +661,11 @@ public class DateUtils {
         }
 
         // reset time
-        if (date.getTime() != time) {
-            date.setTime(time);
-            val.setTime(date);
+        if (seconds <= org.apache.commons.lang.time.DateUtils.fields.length) {
+            if (date.getTime() != time) {
+                date.setTime(time);
+                val.setTime(date);
+            }
         }
         // 
654: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-53_Buggy\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-53_Manual\\src\\org\\apache\\commons\\lang\\time\\DateUtils.java"	
@@ -640,18 +640,18 @@ public class DateUtils {
         int millisecs = val.get(Calendar.MILLISECOND);
         if (!round || millisecs < 500) {
             time = time - millisecs;
+        }
         if (field == Calendar.SECOND) {
             done = true;
-            }
         }
 
         // truncate seconds
         int seconds = val.get(Calendar.SECOND);
         if (!done && (!round || seconds < 30)) {
             time = time - (seconds * 1000L);
+        }
         if (field == Calendar.MINUTE) {
             done = true;
-            }
         }
 
         // truncate minutes

655: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-55_Buggy\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-55_Auto\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
@@ -115,7 +115,9 @@ public class StopWatch {
         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {
             throw new IllegalStateException("Stopwatch is not running. ");
         }
-            stopTime = System.currentTimeMillis();
+            if (org.apache.commons.lang.time.StopWatch.this.stopTime < 10) {
+                stopTime = System.currentTimeMillis();
+            }
         this.runningState = STATE_STOPPED;
     }
 

656: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-55_Buggy\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-55_Manual\\src\\org\\apache\\commons\\lang\\time\\StopWatch.java"	
@@ -115,7 +115,9 @@ public class StopWatch {
         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {
             throw new IllegalStateException("Stopwatch is not running. ");
         }
+        if(this.runningState == STATE_RUNNING) {
             stopTime = System.currentTimeMillis();
+        }
         this.runningState = STATE_STOPPED;
     }
 

657: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -449,17 +449,14 @@ public class NumberUtils {
             switch (lastChar) {
                 case 'l' :
                 case 'L' :
-                    if (dec == null
-                        && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                    if (((dec == null) && (exp == null))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {
                             //Too big for a long
                         }
                         return createBigInteger(numeric);
-
+                        
                     }
                     throw new NumberFormatException(str + " is not a valid number.");
                 case 'f' :

658: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

659: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-105_Buggy\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-105_Auto\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
@@ -104,7 +104,9 @@ public class SimpleRegression implements Serializable {
      */
     public void addData(double x, double y) {
         if (n == 0) {
-            xbar = x;
+            if (((!((x) != (1))) && (!((x) != (1)))) || (y < x)) {
+                xbar = x;
+            }
             ybar = y;
         } else {
             double dx = x - xbar;

660: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-105_Buggy\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-105_Manual\\src\\org\\apache\\commons\\math\\stat\\regression\\SimpleRegression.java"	
@@ -261,7 +261,7 @@ public class SimpleRegression implements Serializable {
      * @return sum of squared errors associated with the regression model
      */
     public double getSumSquaredErrors() {
-        return sumYY - sumXY * sumXY / sumXX;
+        return Math.max(0d, sumYY - sumXY * sumXY / sumXX);
     }
 
     /**

661: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-18_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-18_Auto\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -511,7 +511,9 @@ public class CMAESOptimizer
         for (int i = 0; i < lB.length; i++) {
             if (!Double.isInfinite(lB[i]) ||
                 !Double.isInfinite(uB[i])) {
-                hasFiniteBounds = true;
+                if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.checkFeasableCount == org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.iterations) {
+                    hasFiniteBounds = true;
+                }
                 break;
             }
         }

662: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-18_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-18_Manual\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -929,7 +929,7 @@ public class CMAESOptimizer
             double[] res = new double[x.length];
             for (int i = 0; i < x.length; i++) {
                 double diff = boundaries[1][i] - boundaries[0][i];
-                res[i] = (x[i] - boundaries[0][i]) / diff;
+                res[i] = x[i] / diff;
             }
             return res;
         }
@@ -955,7 +955,7 @@ public class CMAESOptimizer
             double[] res = new double[x.length];
             for (int i = 0; i < x.length; i++) {
                 double diff = boundaries[1][i] - boundaries[0][i];
-                res[i] = diff * x[i] + boundaries[0][i];
+                res[i] = diff * x[i];
             }
             return res;
         }
@@ -987,12 +987,14 @@ public class CMAESOptimizer
                 return true;
             }
 
+            final double[] bLoEnc = encode(boundaries[0]);
+            final double[] bHiEnc = encode(boundaries[1]);
 
             for (int i = 0; i < x.length; i++) {
-                if (x[i] < 0) {
+                if (x[i] < bLoEnc[i]) {
                     return false;
                 }
-                if (x[i] > 1.0) {
+                if (x[i] > bHiEnc[i]) {
                     return false;
                 }
             }

663: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-20_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-20_Auto\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -701,7 +701,9 @@ public class CMAESOptimizer
                     .scalarMultiply(ccov1); // rank one update
             // minor correction if hsig==false
             double oldFac = hsig ? 0 : ccov1 * cc * (2. - cc);
-            oldFac += 1. - ccov1 - ccovmu;
+            if (org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.inputSigma!=null) {
+                oldFac += 1. - ccov1 - ccovmu;
+            }
             if (isActiveCMA) {
                 // Adapt covariance matrix C active CMA
                 negccov = (1. - ccovmu) * 0.25 * mueff /

664: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-20_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-20_Manual\\src\\org\\apache\\commons\\math3\\optimization\\direct\\CMAESOptimizer.java"	
@@ -918,7 +918,8 @@ public class CMAESOptimizer
          * @return the original objective variables, possibly repaired.
          */
         public double[] repairAndDecode(final double[] x) {
-            return
+            return boundaries != null && isRepairMode ?
+                decode(repair(x)) :
                 decode(x);
         }
 

665: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-33_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,8 +335,10 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
-                columnsToDrop.add(i);
+            if (org.apache.commons.math3.optimization.linear.SimplexTableau.this.numSlackVariables < org.apache.commons.math3.optimization.linear.SimplexTableau.this.constraints.size()) {
+                if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+                    columnsToDrop.add(i);
+                }
             }
         }
 

666: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-33_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, epsilon) > 0) {
                 columnsToDrop.add(i);
             }
         }

667: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-42_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-42_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -410,15 +410,17 @@ class SimplexTableau implements Serializable {
               // if the basic row is found to be the objective function row
               // set the coefficient to 0 -> this case handles unconstrained 
               // variables that are still part of the objective function
-          if (basicRows.contains(basicRow)) {
-              // if multiple variables can take a given value
-              // then we choose the first and set the rest equal to 0
-              coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);
-          } else {
-              basicRows.add(basicRow);
-              coefficients[i] =
+          if ((org.apache.commons.math.optimization.linear.SimplexTableau.this.numArtificialVariables) != (org.apache.commons.math.optimization.linear.SimplexTableau.this.numSlackVariables)) {
+              if (basicRows.contains(basicRow)) {
+                  // if multiple variables can take a given value
+                  // then we choose the first and set the rest equal to 0
+                  coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);
+              } else {
+                  basicRows.add(basicRow);
+                  coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
+              }
           }
       }
       return new RealPointValuePair(coefficients, f.getValue(coefficients));

668: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-42_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-42_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -407,10 +407,12 @@ class SimplexTableau implements Serializable {
             continue;
           }
           Integer basicRow = getBasicRow(colIndex);
+          if (basicRow != null && basicRow == 0) {
               // if the basic row is found to be the objective function row
               // set the coefficient to 0 -> this case handles unconstrained 
               // variables that are still part of the objective function
-          if (basicRows.contains(basicRow)) {
+              coefficients[i] = 0;
+          } else if (basicRows.contains(basicRow)) {
               // if multiple variables can take a given value
               // then we choose the first and set the rest equal to 0
               coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);

669: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-49_Auto\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -663,8 +663,12 @@ public class OpenMapRealVector extends AbstractRealVector
         checkIndex(index);
         if (!isDefaultValue(value)) {
             entries.put(index, value);
-        } else if (entries.containsKey(index)) {
-            entries.remove(index);
+        } else {
+            if (org.apache.commons.math.linear.OpenMapRealVector.DEFAULT_ZERO_TOLERANCE == org.apache.commons.math.linear.OpenMapRealVector.this.epsilon) {
+                if (entries.containsKey(index)) {
+                    entries.remove(index);
+                }
+            }
         }
     }
 

670: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-49_Buggy\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-49_Manual\\src\\org\\apache\\commons\\math\\linear\\OpenMapRealVector.java"	
@@ -342,7 +342,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
@@ -355,7 +355,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeDivide(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v[iter.key()]);
@@ -367,7 +367,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(RealVector v) {
         checkVectorDimensions(v.getDimension());
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));
@@ -380,7 +380,7 @@ public class OpenMapRealVector extends AbstractRealVector
     public OpenMapRealVector ebeMultiply(double[] v) {
         checkVectorDimensions(v.length);
         OpenMapRealVector res = new OpenMapRealVector(this);
-        Iterator iter = res.entries.iterator();
+        Iterator iter = entries.iterator();
         while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() * v[iter.key()]);

671: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,9 +184,11 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
+                    if (-1 == 0) {
+                        if (x == x1) {
+                            x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
+                            f0 = computeObjectiveValue(x0);
+                        }
                     }
                     break;
                 default:

672: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

673: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-69_Buggy\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-69_Auto\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
@@ -186,13 +186,15 @@ public class PearsonsCorrelation {
     public RealMatrix computeCorrelationMatrix(RealMatrix matrix) {
         int nVars = matrix.getColumnDimension();
         RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);
-        for (int i = 0; i < nVars; i++) {
-            for (int j = 0; j < i; j++) {
-              double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));
-              outMatrix.setEntry(i, j, corr);
-              outMatrix.setEntry(j, i, corr);
+        if ((nVars) != (2)) {
+            for (int i = 0; i < nVars; i++) {
+                for (int j = 0; j < i; j++) {
+                    double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));
+                    outMatrix.setEntry(i, j, corr);
+                    outMatrix.setEntry(j, i, corr);
+                }
+                outMatrix.setEntry(i, i, 1d);
             }
-            outMatrix.setEntry(i, i, 1d);
         }
         return outMatrix;
     }

674: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-69_Buggy\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-69_Manual\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
@@ -168,7 +168,7 @@ public class PearsonsCorrelation {
                 } else {
                     double r = correlationMatrix.getEntry(i, j);
                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
+                    out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
                 }
             }
         }

675: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-7_Buggy\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-7_Auto\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
@@ -348,7 +348,9 @@ public abstract class AbstractIntegrator implements FirstOrderIntegrator {
 
                 // handle the first part of the step, up to the event
                 for (final StepHandler handler : stepHandlers) {
-                    handler.handleStep(interpolator, isLastStep);
+                    if (org.apache.commons.math3.ode.AbstractIntegrator.this.stepHandlers.size() == orderingSign) {
+                        handler.handleStep(interpolator, isLastStep);
+                    }
                 }
 
                 if (isLastStep) {

676: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-7_Buggy\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-7_Manual\\src\\org\\apache\\commons\\math3\\ode\\AbstractIntegrator.java"	
@@ -343,8 +343,10 @@ public abstract class AbstractIntegrator implements FirstOrderIntegrator {
                 final double[] eventY = interpolator.getInterpolatedState().clone();
 
                 // advance all event states to current time
-                currentEvent.stepAccepted(eventT, eventY);
-                isLastStep = currentEvent.stop();
+                for (final EventState state : eventsStates) {
+                    state.stepAccepted(eventT, eventY);
+                    isLastStep = isLastStep || state.stop();
+                }
 
                 // handle the first part of the step, up to the event
                 for (final StepHandler handler : stepHandlers) {
@@ -354,22 +356,19 @@ public abstract class AbstractIntegrator implements FirstOrderIntegrator {
                 if (isLastStep) {
                     // the event asked to stop integration
                     System.arraycopy(eventY, 0, y, 0, y.length);
-                    for (final EventState remaining : occuringEvents) {
-                        remaining.stepAccepted(eventT, eventY);
-                    }
                     return eventT;
                 }
 
-                boolean needReset = currentEvent.reset(eventT, eventY);
+                boolean needReset = false;
+                for (final EventState state : eventsStates) {
+                    needReset =  needReset || state.reset(eventT, eventY);
+                }
                 if (needReset) {
                     // some event handler has triggered changes that
                     // invalidate the derivatives, we need to recompute them
                     System.arraycopy(eventY, 0, y, 0, y.length);
                     computeDerivatives(eventT, y, yDot);
                     resetOccurred = true;
-                    for (final EventState remaining : occuringEvents) {
-                        remaining.stepAccepted(eventT, eventY);
-                    }
                     return eventT;
                 }
 

677: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1134,10 +1134,12 @@ public class EigenDecompositionImpl implements EigenDecomposition {
             // flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                if (org.apache.commons.math.linear.EigenDecompositionImpl.this.cachedV!=null) {
+                    for (int k = 0; k < 4; k += step) {
+                        final double tmp = work[i + k];
+                        work[i + k] = work[j - k];
+                        work[j - k] = tmp;
+                    }
                 }
                 j -= 4;
             }

678: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

679: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1477,7 +1477,9 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
+                        if (org.apache.commons.math.linear.EigenDecompositionImpl.this.cachedV!=null) {
+                            a2 = 0.0;
+                        }
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }

680: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

681: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -60,7 +60,9 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
+                if (org.apache.commons.math.optimization.linear.SimplexSolver.DEFAULT_EPSILON == minValue) {
+                    minValue = tableau.getEntry(0, i);
+                }
                 minPos = i;
             }
         }

682: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

683: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,13 +195,13 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (-1 == fb) {
             throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            "number of iterations={0}, maximum iterations={1}, " +
+            "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
+            "final b value={6}, f(a)={7}, f(b)={8}",
+            numIterations, maximumIterations, initial,
+            lowerBound, upperBound, a, b, fa, fb);
         }
         
         return new double[]{a, b};

684: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

685: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-87_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-87_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -158,8 +158,10 @@ class SimplexTableau implements Serializable {
 
                     // x-
                     if (!restrictToNonNegative) {
-                        matrix[row][getSlackVariableOffset() - 1] =
+                        if (org.apache.commons.math.optimization.linear.SimplexTableau.this.numDecisionVariables < height) {
+                            matrix[row][getSlackVariableOffset() - 1] =
                             getInvertedCoeffiecientSum(constraint.getCoefficients());
+                        }
                     }
 
                     // RHS

686: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-87_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-87_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -272,12 +272,10 @@ class SimplexTableau implements Serializable {
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
+            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
-                } else {
+            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 return null;
-                }
             }
         }
         return row;

687: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -336,7 +336,9 @@ class SimplexTableau implements Serializable {
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
+                         if ((org.apache.commons.math.optimization.linear.SimplexTableau.this.constraints.size()) != (coefficients.length)) {
+                             coefficients[i] = 0;
+                         }
                     }
                 }
             }

688: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

689: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Time-14_Buggy\\src\\org\\joda\\time\\chrono\\BasicMonthOfYearDateTimeField.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Time-14_Auto\\src\\org\\joda\\time\\chrono\\BasicMonthOfYearDateTimeField.java"	
@@ -207,7 +207,7 @@ class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {
             return values;
         }
             // month is largest field and being added to, such as month-day
-        if (DateTimeUtils.isContiguous(partial)) {
+        if ((org.joda.time.chrono.BasicMonthOfYearDateTimeField.MIN <= fieldIndex) || ((!(1 == valueToAdd)) && ((valueToAdd) != (-1)))) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);

690: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Time-14_Buggy\\src\\org\\joda\\time\\chrono\\BasicMonthOfYearDateTimeField.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\Nopol_Time-14_Manual\\src\\org\\joda\\time\\chrono\\BasicMonthOfYearDateTimeField.java"	
@@ -206,7 +206,12 @@ class BasicMonthOfYearDateTimeField extends ImpreciseDateTimeField {
         if (valueToAdd == 0) {
             return values;
         }
+        if (partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && fieldIndex == 0) {
             // month is largest field and being added to, such as month-day
+            int curMonth0 = partial.getValue(0) - 1;
+            int newMonth = ((curMonth0 + (valueToAdd % 12) + 12) % 12) + 1;
+            return set(partial, 0, values, newMonth);
+        }
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {

691: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-12_Auto\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,11 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        if (dataset != null) {
+			setDatasetGroup(dataset.getGroup());
+			dataset.addChangeListener(this);
+		}
+		this.dataset = dataset;
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

692: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-12_Manual\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

693: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,9 +1794,6 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
-        }
         int seriesCount = dataset.getRowCount();
         if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
             for (int i = 0; i < seriesCount; i++) {

694: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

695: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -556,16 +556,7 @@ public class XYSeries extends Series implements Cloneable, Serializable {
             existing.setY(y);
         }
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
-            if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
-            }
-            else {
-                this.data.add(new XYDataItem(x, y));
-            }
+            this.data.add(new XYDataItem(x, y));
             // check if this addition will exceed the maximum item count...
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);

696: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

697: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-10_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1268,8 +1268,7 @@ public final class NodeUtil {
         return allResultsMatch(n.getFirstChild(), p)
             && allResultsMatch(n.getLastChild(), p);
       case Token.HOOK:
-        return allResultsMatch(n.getFirstChild().getNext(), p)
-            && allResultsMatch(n.getLastChild(), p);
+        int type = n.getType();
       default:
         return p.apply(n);
     }

698: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-10_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

699: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-112_Auto\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1116,8 +1116,6 @@ class TypeInference
       Iterable<Node> declParams,
       Iterable<Node> callParams,
       Map<TemplateType, JSType> resolvedTypes) {
-    maybeResolveTemplateTypeFromNodes(
-        declParams.iterator(), callParams.iterator(), resolvedTypes);
   }
 
   private void maybeResolveTemplateTypeFromNodes(

700: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-112_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-112_Manual\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1189,9 +1189,15 @@ class TypeInference
     }
 
     // Try to infer the template types
-    Map<TemplateType, JSType> inferred = 
-        inferTemplateTypesFromParameters(fnType, n);
-
+    Map<TemplateType, JSType> inferred = Maps.filterKeys(
+        inferTemplateTypesFromParameters(fnType, n),
+        new Predicate<TemplateType>() {
+
+          @Override
+          public boolean apply(TemplateType key) {
+            return keys.contains(key);
+          }}
+        );
 
     // Replace all template types. If we couldn't find a replacement, we
     // replace it with UNKNOWN.

701: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -728,7 +728,6 @@ class FunctionInjector {
       if (fnParam != null) {
         if (cArg != null) {
           if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
           }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a

702: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

703: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-117_Auto\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -725,34 +725,6 @@ class TypeValidator {
 
     // The best type name is the actual type name.
 
-    // If we're analyzing a GETPROP, the property may be inherited by the
-    // prototype chain. So climb the prototype chain and find out where
-    // the property was originally defined.
-    if (n.isGetProp()) {
-      ObjectType objectType = getJSType(n.getFirstChild()).dereference();
-      if (objectType != null) {
-        String propName = n.getLastChild().getString();
-        if (objectType.getConstructor() != null &&
-            objectType.getConstructor().isInterface()) {
-          objectType = FunctionType.getTopDefiningInterface(
-              objectType, propName);
-        } else {
-          // classes
-          while (objectType != null && !objectType.hasOwnProperty(propName)) {
-            objectType = objectType.getImplicitPrototype();
-          }
-        }
-
-        // Don't show complex function names or anonymous types.
-        // Instead, try to get a human-readable type name.
-        if (objectType != null &&
-            (objectType.getConstructor() != null ||
-             objectType.isFunctionPrototypeType())) {
-          return objectType.toString() + "." + propName;
-        }
-      }
-    }
-
     JSType type = getJSType(n);
     if (dereference) {
       ObjectType dereferenced = type.dereference();

704: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-117_Manual\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -722,8 +722,20 @@ class TypeValidator {
    *     to an Object type, if possible.
    */
   String getReadableJSTypeName(Node n, boolean dereference) {
+    JSType type = getJSType(n);
+    if (dereference) {
+      ObjectType dereferenced = type.dereference();
+      if (dereferenced != null) {
+        type = dereferenced;
+      }
+    }
 
     // The best type name is the actual type name.
+    if (type.isFunctionPrototypeType() ||
+        (type.toObjectType() != null &&
+         type.toObjectType().getConstructor() != null)) {
+      return type.toString();
+    }
 
     // If we're analyzing a GETPROP, the property may be inherited by the
     // prototype chain. So climb the prototype chain and find out where
@@ -753,18 +765,6 @@ class TypeValidator {
       }
     }
 
-    JSType type = getJSType(n);
-    if (dereference) {
-      ObjectType dereferenced = type.dereference();
-      if (dereferenced != null) {
-        type = dereferenced;
-      }
-    }
-    if (type.isFunctionPrototypeType() ||
-        (type.toObjectType() != null &&
-         type.toObjectType().getConstructor() != null)) {
-      return type.toString();
-    }
     String qualifiedName = n.getQualifiedName();
     if (qualifiedName != null) {
       return qualifiedName;

705: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-120_Buggy\\src\\com\\google\\javascript\\jscomp\\ReferenceCollectingCallback.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-120_Auto\\src\\com\\google\\javascript\\jscomp\\ReferenceCollectingCallback.java"	
@@ -182,7 +182,6 @@ class ReferenceCollectingCallback implements ScopedCallback,
     if (t.getScope().isGlobal()) {
       // Update global scope reference lists when we are done with it.
       compiler.updateGlobalVarReferences(referenceMap, t.getScopeRoot());
-      behavior.afterExitScope(t, compiler.getGlobalVarReferences());
     } else {
       behavior.afterExitScope(t, new ReferenceMapWrapper(referenceMap));
     }

706: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-120_Buggy\\src\\com\\google\\javascript\\jscomp\\ReferenceCollectingCallback.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-120_Manual\\src\\com\\google\\javascript\\jscomp\\ReferenceCollectingCallback.java"	
@@ -428,6 +428,9 @@ class ReferenceCollectingCallback implements ScopedCallback,
       for (BasicBlock block = ref.getBasicBlock();
            block != null; block = block.getParent()) {
         if (block.isFunction) {
+          if (ref.getSymbol().getScope() != ref.scope) {
+            return false;
+          }
           break;
         } else if (block.isLoop) {
           return false;

707: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-121_Buggy\\src\\com\\google\\javascript\\jscomp\\InlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-121_Auto\\src\\com\\google\\javascript\\jscomp\\InlineVariables.java"	
@@ -83,7 +83,6 @@ class InlineVariables implements CompilerPass {
   public void process(Node externs, Node root) {
     ReferenceCollectingCallback callback = new ReferenceCollectingCallback(
         compiler, new InliningBehavior(), getFilterForMode());
-    callback.process(externs, root);
   }
 
   private Predicate<Var> getFilterForMode() {

708: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-121_Buggy\\src\\com\\google\\javascript\\jscomp\\InlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-121_Manual\\src\\com\\google\\javascript\\jscomp\\InlineVariables.java"	
@@ -301,10 +301,12 @@ class InlineVariables implements CompilerPass {
       if (!maybeModifiedArguments &&
           !staleVars.contains(v) &&
           referenceInfo.isWellDefined() &&
-          referenceInfo.isAssignedOnceInLifetime()) {
+          referenceInfo.isAssignedOnceInLifetime() &&
           // Inlining the variable based solely on well-defined and assigned
           // once is *NOT* correct. We relax the correctness requirement if
           // the variable is declared constant.
+          (isInlineableDeclaredConstant(v, referenceInfo) ||
+           referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {
         List<Reference> refs = referenceInfo.references;
         for (int i = 1 /* start from a read */; i < refs.size(); i++) {
           Node nameNode = refs.get(i).getNode();

709: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-124_Auto\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -168,16 +168,7 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
           // To protect against this, we simply only inline when the left side
           // is guaranteed to evaluate to the same L-value no matter what.
           Node leftSide = next.getFirstChild();
-          if (leftSide.isName() ||
-              leftSide.isGetProp() &&
-              leftSide.getFirstChild().isThis()) {
-            // Dive down the right side of the assign.
-            parent = next;
-            next = leftSide.getNext();
-            break;
-          } else {
-            return false;
-          }
+          ;
 
         default:
           if (NodeUtil.isImmutableValue(next)

710: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-124_Buggy\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-124_Manual\\src\\com\\google\\javascript\\jscomp\\ExploitAssigns.java"	
@@ -210,7 +210,9 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
     }
     Preconditions.checkArgument(node.isGetProp());
 
+    while (node.isGetProp()) {
       node = node.getFirstChild();
+    }
     if (node.isName()
         && isNameAssignedTo(node.getString(), replacement)) {
       return false;

711: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-125_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,12 +1658,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
-        visitParameterList(t, n, fnType);
-        ensureTyped(t, n, fnType.getInstanceType());
-      } else {
-        ensureTyped(t, n);
-      }
+      final String paramName = "jscomp_throw_param";
     } else {
       report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);

712: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-125_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,7 +1658,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
+      if (fnType != null && fnType.hasInstanceType()) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {

713: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -117,7 +117,8 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       if (n == parent.getLastChild()) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
+          if (ancestorType == Token.COMMA)
+			break;
           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
           else break;
         }

714: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

715: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -105,20 +105,6 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       return;
         }
     }
-
-    // This no-op statement was there so that JSDoc information could
-    // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
       if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
            n == parent.getFirstChild().getNext().getNext())) {

716: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

717: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-33_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -555,27 +555,6 @@ class PrototypeObjectType extends ObjectType {
   public void matchConstraint(ObjectType constraintObj) {
     // We only want to match contraints on anonymous types.
 
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraintObj {{prop: (number|undefined)}}
-    // function f(constraintObj) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
-    if (constraintObj.isRecordType()) {
-      for (String prop : constraintObj.getOwnPropertyNames()) {
-        JSType propType = constraintObj.getPropertyType(prop);
-        if (!isPropertyTypeDeclared(prop)) {
-          JSType typeToInfer = propType;
-          if (!hasProperty(prop)) {
-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)
-                .getLeastSupertype(propType);
-          }
-          defineInferredProperty(prop, typeToInfer, null);
-        }
-      }
-    }
+    
   }
 }
\ No newline at end of file

718: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-33_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-33_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\PrototypeObjectType.java"	
@@ -554,6 +554,9 @@ class PrototypeObjectType extends ObjectType {
   @Override
   public void matchConstraint(ObjectType constraintObj) {
     // We only want to match contraints on anonymous types.
+    if (hasReferenceName()) {
+      return;
+    }
 
     // Handle the case where the constraint object is a record type.
     //

719: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-3_Auto\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -152,20 +152,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
-        c.inlineVariable();
-
-        // If definition c has dependencies, then inlining it may have
-        // introduced new dependencies for our other inlining candidates.
-        //
-        // MustBeReachingVariableDef uses this dependency graph in its
-        // analysis, so some of these candidates may no longer be valid.
-        // We keep track of when the variable dependency graph changed
-        // so that we can back off appropriately.
-        if (!c.defMetadata.depends.isEmpty()) {
-          inlinedNewDependencies.add(t.getScope().getVar(c.varName));
-        }
-      }
+      int index = -1;
     }
   }
 

720: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-3_Buggy\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-3_Manual\\src\\com\\google\\javascript\\jscomp\\FlowSensitiveInlineVariables.java"	
@@ -152,7 +152,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
     reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
     reachingUses.analyze();
     for (Candidate c : candidates) {
-      if (c.canInline()) {
+      if (c.canInline(t.getScope())) {
         c.inlineVariable();
 
         // If definition c has dependencies, then inlining it may have
@@ -277,7 +277,7 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
       return defMetadata.node;
     }
 
-    private boolean canInline() {
+    private boolean canInline(final Scope scope) {
       // Cannot inline a parameter.
       if (getDefCfgNode().isFunction()) {
         return false;
@@ -372,6 +372,12 @@ class FlowSensitiveInlineVariables extends AbstractPostOrderCallback
                   case Token.REGEXP:
                   case Token.NEW:
                     return true;
+                  case Token.NAME:
+                    Var var = scope.getOwnSlot(input.getString());
+                    if (var != null
+                        && var.getParentNode().isCatch()) {
+                      return true;
+                    }
                 }
                 return false;
               }

721: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-55_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -114,7 +114,7 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return false;
   }
 
   /**

722: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-55_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-55_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionRewriter.java"	
@@ -114,7 +114,8 @@ class FunctionRewriter implements CompilerPass {
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return NodeUtil.isFunctionExpression(n)
+        && !NodeUtil.isGetOrSetKey(n.getParent());
   }
 
   /**

723: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-75_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-75_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -298,7 +298,7 @@ public final class NodeUtil {
         break;
 
       case Token.STRING:
-        return getStringNumberValue(n.getString());
+        break;
 
       case Token.ARRAYLIT:
       case Token.OBJECTLIT:

724: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-75_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-75_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -310,7 +310,10 @@ public final class NodeUtil {
   }
 
   static Double getStringNumberValue(String rawJsString) {
+    if (rawJsString.contains("\u000b")) {
       // vertical tab is not always whitespace
+      return null;
+    }
 
     String s = trimJsWhiteSpace(rawJsString);
     // return ScriptRuntime.toNumber(s);
@@ -372,7 +375,7 @@ public final class NodeUtil {
   static TernaryValue isStrWhiteSpaceChar(int c) {
     switch (c) {
       case '\u000B': // <VT>
-        return TernaryValue.TRUE;
+        return TernaryValue.UNKNOWN;  // IE says "no", EcmaScript says "yes"
       case ' ': // <SP>
       case '\n': // <LF>
       case '\r': // <CR>

725: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-86_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2459,10 +2459,7 @@ public final class NodeUtil {
             || isToStringMethodCall(value)
             || locals.apply(value);
       case Token.NEW:
-        // TODO(nicksantos): This needs to be changed so that it
-        // returns true iff we're sure the value was never aliased from inside
-        // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

726: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-86_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-86_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -2462,7 +2462,7 @@ public final class NodeUtil {
         // TODO(nicksantos): This needs to be changed so that it
         // returns true iff we're sure the value was never aliased from inside
         // the constructor (similar to callHasLocalResult)
-        return true;
+        return false;
       case Token.FUNCTION:
       case Token.REGEXP:
       case Token.ARRAYLIT:

727: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-88_Buggy\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-88_Auto\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
@@ -324,10 +324,6 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
-        // The expression to which the assignment is made is evaluated before
-        // the RHS is evaluated (normal left to right evaluation) but the KILL
-        // occurs after the RHS is evaluated.
-        return VariableLiveness.KILL;
       } else {
         return VariableLiveness.READ;
       }

728: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-88_Buggy\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Closure-88_Manual\\src\\com\\google\\javascript\\jscomp\\DeadAssignmentsElimination.java"	
@@ -324,9 +324,15 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
+        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
         // The expression to which the assignment is made is evaluated before
         // the RHS is evaluated (normal left to right evaluation) but the KILL
         // occurs after the RHS is evaluated.
+        Node rhs = n.getNext();
+        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
+        if (state == VariableLiveness.READ) {
+          return state;
+        }
         return VariableLiveness.KILL;
       } else {
         return VariableLiveness.READ;

729: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-13_Buggy\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-13_Auto\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
@@ -96,7 +96,7 @@ public class SerializationUtils {
             return readObject;
 
         } catch (ClassNotFoundException ex) {
-            throw new SerializationException("ClassNotFoundException while reading cloned object data", ex);
+            return object;
         } catch (IOException ex) {
             throw new SerializationException("IOException while reading cloned object data", ex);
         } finally {

730: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-13_Buggy\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-13_Manual\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
@@ -236,6 +236,8 @@ public class SerializationUtils {
      * class here is a workaround, see the JIRA issue LANG-626. </p>
      */
      static class ClassLoaderAwareObjectInputStream extends ObjectInputStream {
+        private static final Map<String, Class<?>> primitiveTypes = 
+                new HashMap<String, Class<?>>();
         private ClassLoader classLoader;
         
         /**
@@ -249,6 +251,15 @@ public class SerializationUtils {
             super(in);
             this.classLoader = classLoader;
 
+            primitiveTypes.put("byte", byte.class);
+            primitiveTypes.put("short", short.class);
+            primitiveTypes.put("int", int.class);
+            primitiveTypes.put("long", long.class);
+            primitiveTypes.put("float", float.class);
+            primitiveTypes.put("double", double.class);
+            primitiveTypes.put("boolean", boolean.class);
+            primitiveTypes.put("char", char.class);
+            primitiveTypes.put("void", void.class);
         }
 
         /**
@@ -265,7 +276,15 @@ public class SerializationUtils {
             try {
                 return Class.forName(name, false, classLoader);
             } catch (ClassNotFoundException ex) {
+                try {
                     return Class.forName(name, false, Thread.currentThread().getContextClassLoader());
+                } catch (ClassNotFoundException cnfe) {
+                    Class<?> cls = primitiveTypes.get(name);
+                    if (cls != null)
+                        return cls;
+                    else
+                        throw cnfe;
+                }
             }
         }
 

731: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-16_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -542,7 +542,7 @@ public class NumberUtils {
                     }
                     //$FALL-THROUGH$
                 default :
-                    throw new NumberFormatException(str + " is not a valid number.");
+				return createInteger(str);
 
             }
         } else {

732: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-16_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -455,7 +455,7 @@ public class NumberUtils {
             // a wrong value.
             return null;
         }
-        if (str.startsWith("0x") || str.startsWith("-0x")) {
+        if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             return createInteger(str);
         }   
         char lastChar = str.charAt(str.length() - 1);

733: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-43_Auto\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,7 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+            pos.setIndex(pos.getIndex() + 1);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {

734: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-43_Manual\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,6 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;

735: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-46_Auto\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -241,7 +241,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
-                            out.write('\\');
+					if (escapeSingleQuote) {
+						out.write('\\');
+					}
                         out.write('/');
                         break;
                     default :

736: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-46_Buggy\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-46_Manual\\src\\org\\apache\\commons\\lang\\StringEscapeUtils.java"	
@@ -83,7 +83,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJava(String str) {
-        return escapeJavaStyleString(str, false);
+        return escapeJavaStyleString(str, false, false);
     }
 
     /**
@@ -99,7 +99,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      */
     public static void escapeJava(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, false);
+        escapeJavaStyleString(out, str, false, false);
     }
 
     /**
@@ -124,7 +124,7 @@ public class StringEscapeUtils {
      * @return String with escaped values, <code>null</code> if null string input
      */
     public static String escapeJavaScript(String str) {
-        return escapeJavaStyleString(str, true);
+        return escapeJavaStyleString(str, true, true);
     }
 
     /**
@@ -140,7 +140,7 @@ public class StringEscapeUtils {
      * @throws IOException if error occurs on underlying Writer
      **/
     public static void escapeJavaScript(Writer out, String str) throws IOException {
-        escapeJavaStyleString(out, str, true);
+        escapeJavaStyleString(out, str, true, true);
     }
 
     /**
@@ -151,13 +151,13 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @return the escaped string
      */
-    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
+    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {
         if (str == null) {
             return null;
         }
         try {
             StringWriter writer = new StringWriter(str.length() * 2);
-            escapeJavaStyleString(writer, str, escapeSingleQuotes);
+            escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);
             return writer.toString();
         } catch (IOException ioe) {
             // this should never ever happen while writing to a StringWriter
@@ -175,7 +175,8 @@ public class StringEscapeUtils {
      * @param escapeForwardSlash TODO
      * @throws IOException if an IOException occurs
      */
-    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
+    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote,
+            boolean escapeForwardSlash) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
@@ -241,7 +242,9 @@ public class StringEscapeUtils {
                         out.write('\\');
                         break;
                     case '/' :
+                        if (escapeForwardSlash) {
                             out.write('\\');
+                        }
                         out.write('/');
                         break;
                     default :

737: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-59_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,8 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                ensureCapacity(size + 5);
+				str.getChars(0, strLen, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

738: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-59_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

739: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -318,7 +318,6 @@ public class DurationFormatUtils {
         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
         days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
         months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
         years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
@@ -435,7 +434,6 @@ public class DurationFormatUtils {
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
             return newdiff;
         } else {
             return 0;

740: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

741: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-7_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -450,7 +450,7 @@ public class NumberUtils {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
         if (str.startsWith("--")) {
-            return null;
+            return Short.parseShort(str);
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x

742: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Lang-7_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,6 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
@@ -718,10 +715,13 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
+        if (str.trim().startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
             // to be in specification of class. OS X Java parses it to 
             // a wrong value.
+            throw new NumberFormatException(str + " is not a valid number.");
+        }
         return new BigDecimal(str);
     }
 

743: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-28_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -117,13 +117,6 @@ public class SimplexSolver extends AbstractLinearOptimizer {
 
             // 1. check if there's an artificial variable that can be forced out of the basis
                 for (Integer row : minRatioPositions) {
-                    for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
-                        int column = i + tableau.getArtificialVariableOffset();
-                        final double entry = tableau.getEntry(row, column);
-                        if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
-                            return row;
-                        }
-                    }
                 }
 
             // 2. apply Bland's rule to prevent cycling:

744: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-28_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-28_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexSolver.java"	
@@ -116,6 +116,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // there's a degeneracy as indicated by a tie in the minimum ratio test
 
             // 1. check if there's an artificial variable that can be forced out of the basis
+            if (tableau.getNumArtificialVariables() > 0) {
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
@@ -125,6 +126,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                         }
                     }
                 }
+            }
 
             // 2. apply Bland's rule to prevent cycling:
             //    take the row for which the corresponding basic variable has the smallest index
@@ -135,6 +137,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             // Additional heuristic: if we did not get a solution after half of maxIterations
             //                       revert to the simple case of just returning the top-most row
             // This heuristic is based on empirical data gathered while investigating MATH-828.
+            if (getIterations() < getMaxIterations() / 2) {
                 Integer minRow = null;
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
@@ -149,6 +152,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
                     }
                 }
                 return minRow;
+            }
         }
         return minRatioPositions.get(0);
     }

745: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-33_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,9 +335,6 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
-                columnsToDrop.add(i);
-            }
         }
 
         // non-basic artificial variables

746: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-33_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, epsilon) > 0) {
                 columnsToDrop.add(i);
             }
         }

747: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-40_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-40_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
@@ -254,7 +254,8 @@ public class BracketingNthOrderBrentSolver
                 if (!((nextX > xA) && (nextX < xB))) {
                     // the guessed root is not strictly inside of the tightest bracketing interval
 
-                    // the guessed root is either not strictly inside the interval or it
+                    signChangeIndex = 2;
+					// the guessed root is either not strictly inside the interval or it
                     // is a NaN (which occurs when some sampling points share the same y)
                     // we try again with a lower interpolation order
                     if (signChangeIndex - start >= end - signChangeIndex) {

748: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-40_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-40_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BracketingNthOrderBrentSolver.java"	
@@ -232,10 +232,16 @@ public class BracketingNthOrderBrentSolver
             double targetY;
             if (agingA >= MAXIMAL_AGING) {
                 // we keep updating the high bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yB;
+                final int p = agingA - MAXIMAL_AGING;
+                final double weightA = (1 << p) - 1;
+                final double weightB = p + 1;
+                targetY = (weightA * yA - weightB * REDUCTION_FACTOR * yB) / (weightA + weightB);
             } else if (agingB >= MAXIMAL_AGING) {
                 // we keep updating the low bracket, try to compensate this
-                targetY = -REDUCTION_FACTOR * yA;
+                final int p = agingB - MAXIMAL_AGING;
+                final double weightA = p + 1;
+                final double weightB = (1 << p) - 1;
+                targetY = (weightB * yB - weightA * REDUCTION_FACTOR * yA) / (weightA + weightB);
             } else {
                 // bracketing is balanced, try to find the root itself
                 targetY = 0;

749: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -183,11 +183,7 @@ public abstract class BaseSecantSolver
                     f0 *= f1 / (f1 + fx);
                     break;
                 case REGULA_FALSI:
-                    // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
+                    ;
                     break;
                 default:
                     // Should never happen.

750: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

751: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-53_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-53_Auto\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -149,7 +149,9 @@ public class Complex implements FieldElement<Complex>, Serializable  {
      */
     public Complex add(Complex rhs)
         throws NullArgumentException {
-        MathUtils.checkNotNull(rhs);
+        if (isNaN || rhs.isNaN) {
+			return NaN;
+		}
         return createComplex(real + rhs.getReal(),
             imaginary + rhs.getImaginary());
     }

752: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-53_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-53_Manual\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -150,6 +150,9 @@ public class Complex implements FieldElement<Complex>, Serializable  {
     public Complex add(Complex rhs)
         throws NullArgumentException {
         MathUtils.checkNotNull(rhs);
+        if (isNaN || rhs.isNaN) {
+            return NaN;
+        }
         return createComplex(real + rhs.getReal(),
             imaginary + rhs.getImaginary());
     }

753: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-58_Auto\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**

754: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-58_Manual\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit(guess);
     }
 
     /**

755: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-5_Auto\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -302,7 +302,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+            return INF;
         }
 
         if (isInfinite) {

756: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-5_Manual\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -302,7 +302,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+            return INF;
         }
 
         if (isInfinite) {

757: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-70_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

758: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-70_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

759: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1131,7 +1131,12 @@ public class EigenDecompositionImpl implements EigenDecomposition {
      */
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
+            for (int i = 0; i < realEigenvalues.length; ++i) {
+				if ((realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0)) {
+					return false;
+				}
+			}
+			// flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {

760: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

761: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1539,27 +1539,6 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 }
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
-                // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
-                    a2 = a2 + b2;
-                    for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
-                        if (b2 == 0.0) {
-                            break;
-                        }
-                        b1 = b2;
-                        if (work[i4]  >  work[i4 - 2]) {
-                            return;
-                        }
-                        b2 = b2 * (work[i4] / work[i4 - 2]);
-                        a2 = a2 + b2;
-                        if (100 * Math.max(b2, b1) < a2 || cnst1 < a2)  {
-                            break;
-                        }
-                    }
-                    a2 = cnst3 * a2;
-                }
-
                 if (a2 < cnst1) {
                     tau = gam * (1 - Math.sqrt(a2)) / (1 + a2);
                 } else {

762: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

763: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -60,7 +60,6 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         Integer minPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
-                minValue = tableau.getEntry(0, i);
                 minPos = i;
             }
         }

764: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

765: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,12 +87,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
-                return;
-            }
+            break;
 
         }
 

766: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

767: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,15 +195,6 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
-        }
-        
         return new double[]{a, b};
     }
 

768: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

769: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,9 @@ class SimplexTableau implements Serializable {
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                    coefficients[i] = (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()))
+							- (restrictToNonNegative ? 0 : mostNegative);
+					if (tableau.getEntry(basicRow, j) == 1) {
                          coefficients[i] = 0;
                     }
                 }

770: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

771: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-95_Auto\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -143,8 +143,7 @@ public class FDistributionImpl
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+            ret = 1.0;
         return ret;
     }
     

772: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\RSRepair-A_Math-95_Manual\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,12 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double ret = 1.0;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2.0) {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
     

773: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-12_Auto\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,9 +142,19 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
+// start of generated patch
+if(dataset!=null){
+dataset.addChangeListener(this);
+}
+this.dataset=dataset;
+PiePlot piePlot=new PiePlot(null);
+this.pieChart=new JFreeChart(piePlot);
+// end of generated patch
+/* start of original code
         this.dataset = dataset;
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
+end of original code*/
         this.pieChart.removeLegend();
         this.dataExtractOrder = TableOrder.BY_COLUMN;
         this.pieChart.setBackgroundPaint(null);

774: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-12_Manual\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

775: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,9 +1794,16 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
+// start of generated patch
+if(dataset==null){
+return result;
+}
+// end of generated patch
+/* start of original code
         if (dataset != null) {
             return result;
         }
+end of original code*/
         int seriesCount = dataset.getRowCount();
         if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
             for (int i = 0; i < seriesCount; i++) {

776: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

777: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-22_Buggy\\src\\org\\jfree\\data\\KeyedObjects2D.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-22_Auto\\src\\org\\jfree\\data\\KeyedObjects2D.java"	
@@ -228,6 +228,15 @@ public class KeyedObjects2D implements Cloneable, Serializable {
             throw new UnknownKeyException("Column key (" + columnKey 
                     + ") not recognised.");
         }
+// start of generated patch
+if(row>=column){
+KeyedObjects rowData=(KeyedObjects)this.rows.get(row);
+return rowData.getObject(columnKey);
+}else {
+return null;
+}
+// end of generated patch
+/* start of original code
         if (row >= 0) {
         KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
             return rowData.getObject(columnKey);
@@ -235,6 +244,7 @@ public class KeyedObjects2D implements Cloneable, Serializable {
         else {
             return null;
         }
+end of original code*/
     }
 
     /**
@@ -341,8 +351,17 @@ public class KeyedObjects2D implements Cloneable, Serializable {
      * @see #removeColumn(Comparable)
      */
     public void removeRow(Comparable rowKey) {
+// start of generated patch
+int index=getRowIndex(rowKey);
+if(index<0){
+throw new UnknownKeyException("The key ("+rowKey.toString());
+}
+removeRow(index);
+// end of generated patch
+/* start of original code
         int index = getRowIndex(rowKey);
         removeRow(index);
+end of original code*/
     }
 
     /**
@@ -367,6 +386,20 @@ public class KeyedObjects2D implements Cloneable, Serializable {
      * @see #removeRow(Comparable)
      */
     public void removeColumn(Comparable columnKey) {
+// start of generated patch
+int index=getColumnIndex(columnKey);
+if(index<0){
+throw new UnknownKeyException("Column key ("+columnKey);
+}
+Iterator iterator=this.rows.iterator();
+while(iterator.hasNext()){
+KeyedObjects rowData=(KeyedObjects)iterator.next();
+this.rows.remove(index);
+rowData.removeValue(columnKey);
+}
+this.columnKeys.remove(columnKey);
+// end of generated patch
+/* start of original code
         int index = getColumnIndex(columnKey);
         if (index < 0) {
             throw new UnknownKeyException("Column key (" + columnKey 
@@ -378,6 +411,7 @@ public class KeyedObjects2D implements Cloneable, Serializable {
                 rowData.removeValue(columnKey);
         }
         this.columnKeys.remove(columnKey);
+ end of original code*/
     }
 
     /**

778: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-22_Buggy\\src\\org\\jfree\\data\\KeyedObjects2D.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-22_Manual\\src\\org\\jfree\\data\\KeyedObjects2D.java"	
@@ -228,9 +228,10 @@ public class KeyedObjects2D implements Cloneable, Serializable {
             throw new UnknownKeyException("Column key (" + columnKey 
                     + ") not recognised.");
         }
-        if (row >= 0) {
         KeyedObjects rowData = (KeyedObjects) this.rows.get(row);
-            return rowData.getObject(columnKey);
+        int index = rowData.getIndex(columnKey);
+        if (index >= 0) {
+            return rowData.getObject(index);
         }
         else {
             return null;
@@ -315,8 +316,29 @@ public class KeyedObjects2D implements Cloneable, Serializable {
         }
         
         // 2. check whether the column is now empty.
+        allNull = true;
         
+        for (int item = 0, itemCount = this.rows.size(); item < itemCount; 
+             item++) {
+            row = (KeyedObjects) this.rows.get(item);
+            int columnIndex = row.getIndex(columnKey);
+            if (columnIndex >= 0 && row.getObject(columnIndex) != null) {
+                allNull = false;
+                break;
+            }
+        }
         
+        if (allNull) {
+            for (int item = 0, itemCount = this.rows.size(); item < itemCount; 
+                 item++) {
+                row = (KeyedObjects) this.rows.get(item);
+                int columnIndex = row.getIndex(columnKey);
+                if (columnIndex >= 0) {
+                    row.removeValue(columnIndex);
+                }
+            }
+            this.columnKeys.remove(columnKey);
+        }
     }
 
     /**
@@ -342,6 +364,10 @@ public class KeyedObjects2D implements Cloneable, Serializable {
      */
     public void removeRow(Comparable rowKey) {
         int index = getRowIndex(rowKey);
+        if (index < 0) {
+            throw new UnknownKeyException("Row key (" + rowKey 
+                    + ") not recognised.");
+        }
         removeRow(index);
     }
 
@@ -375,7 +401,10 @@ public class KeyedObjects2D implements Cloneable, Serializable {
         Iterator iterator = this.rows.iterator();
         while (iterator.hasNext()) {
             KeyedObjects rowData = (KeyedObjects) iterator.next();
-                rowData.removeValue(columnKey);
+            int i = rowData.getIndex(columnKey);
+            if (i >= 0) {
+                rowData.removeValue(i);
+            }
         }
         this.columnKeys.remove(columnKey);
     }

779: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-25_Auto\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -204,6 +204,14 @@ public class StatisticalBarRenderer extends BarRenderer
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
+// start of generated patch
+if(orientation==PlotOrientation.VERTICAL){
+drawHorizontalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,statData,row,column);
+}else if(orientation==PlotOrientation.VERTICAL){
+drawVerticalItem(g2,state,dataArea,plot,domainAxis,rangeAxis,statData,row,column);
+}
+// end of generated patch
+/* start of original code
         if (orientation == PlotOrientation.HORIZONTAL) {
             drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
                     rangeAxis, statData, row, column);
@@ -212,6 +220,7 @@ public class StatisticalBarRenderer extends BarRenderer
             drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
                     statData, row, column);
         }
+ end of original code*/
     }
                 
     /**

780: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Chart-25_Manual\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -256,6 +256,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -312,7 +315,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -341,6 +346,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
                                      lowVal, rectY + rectHeight * 0.75);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
@@ -400,6 +406,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR Y
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -456,7 +465,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -484,6 +495,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
                                      rectX + rectWidth / 2.0d + 5.0d, lowVal);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);

781: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -698,9 +698,16 @@ class FunctionInjector {
     if (block.hasChildren()) {
       Preconditions.checkState(block.hasOneChild());
       Node stmt = block.getFirstChild();
+// start of generated patch
+if(stmt.getFirstChild().isReturn()){
+hasSideEffects=NodeUtil.mayHaveSideEffects(stmt.getFirstChild(),compiler);
+}
+// end of generated patch
+/* start of original code
       if (stmt.isReturn()) {
         hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
       }
+ end of original code*/
     }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();

782: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

783: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-11_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,12 +1311,21 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
+} else // start of generated patch
+if(t.getScope().getVar(property.getString())!=null&&parent.isAssign()){
+return ;
+}else if(validator.expectNotNullOrUndefined(t,n,childType,"No properties on this expression",getNativeType(OBJECT_TYPE))){
+checkPropertyAccess(childType,property.getString(),t,n);
+}
+// end of generated patch
+/* start of original code
     } else if (n.getJSType() != null && parent.isAssign()) {
       return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);
     }
+ end of original code*/
     ensureTyped(t, n);
   }
 

784: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-11_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,8 +1311,6 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);

785: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-125_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,12 +1658,22 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
+// start of generated patch
+if(fnType!=null&&fnType.isConstructor()){
+visitParameterList(t,n,fnType);
+ensureTyped(t,n,fnType.getInstanceType());
+}else {
+ensureTyped(t,n);
+}
+// end of generated patch
+/* start of original code
       if (fnType != null) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {
         ensureTyped(t, n);
       }
+ end of original code*/
     } else {
       report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);

786: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-125_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-125_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1658,7 +1658,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
-      if (fnType != null) {
+      if (fnType != null && fnType.hasInstanceType()) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {

787: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-14_Buggy\\src\\com\\google\\javascript\\jscomp\\ControlFlowAnalysis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-14_Auto\\src\\com\\google\\javascript\\jscomp\\ControlFlowAnalysis.java"	
@@ -763,9 +763,16 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {
         // If we are coming out of the FINALLY block...
         } else if (parent.getLastChild() == node){
           if (cfa != null) {
+// start of generated patch
+for(Node finallyNode : cfa.finallyMap.get(parent)){
+cfa.createEdge(fromNode,Branch.ON_EX,finallyNode);
+}
+// end of generated patch
+/* start of original code
             for (Node finallyNode : cfa.finallyMap.get(parent)) {
               cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);
             }
+ end of original code*/
           }
           return computeFollowNode(fromNode, parent, cfa);
         }

788: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-14_Buggy\\src\\com\\google\\javascript\\jscomp\\ControlFlowAnalysis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-14_Manual\\src\\com\\google\\javascript\\jscomp\\ControlFlowAnalysis.java"	
@@ -764,7 +764,7 @@ final class ControlFlowAnalysis implements Callback, CompilerPass {
         } else if (parent.getLastChild() == node){
           if (cfa != null) {
             for (Node finallyNode : cfa.finallyMap.get(parent)) {
-              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);
+              cfa.createEdge(fromNode, Branch.ON_EX, finallyNode);
             }
           }
           return computeFollowNode(fromNode, parent, cfa);

789: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-19_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-19_Auto\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -167,6 +167,15 @@ public abstract class ChainableReverseAbstractInterpreter
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
+// start of generated patch
+case Token.THIS :
+
+break;
+default :
+throw new IllegalArgumentException("Node cannot be refined. \n"+node.toStringTree());
+
+// end of generated patch
+/* start of original code
         break;
 
         // "this" references aren't currently modeled in the CFG.
@@ -174,6 +183,7 @@ public abstract class ChainableReverseAbstractInterpreter
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
+ end of original code*/
     }
   }
 

790: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-19_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-19_Manual\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -169,7 +169,9 @@ public abstract class ChainableReverseAbstractInterpreter
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
 
+      case Token.THIS:
         // "this" references aren't currently modeled in the CFG.
+        break;
 
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +

791: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -115,12 +115,21 @@ final class CheckSideEffects extends AbstractPostOrderCallback
         return;
       }
       if (n == parent.getLastChild()) {
+// start of generated patch
+for(Node an : parent.getAncestors()){
+int ancestorType=parent.getParent().getType();
+if(ancestorType==Token.COMMA)continue;
+if(ancestorType!=Token.EXPR_RESULT&&ancestorType!=Token.BLOCK)return ;else break;
+}
+// end of generated patch
+/* start of original code
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA) continue;
           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
           else break;
         }
+ end of original code*/
       }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {

792: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

793: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -109,6 +109,14 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
       if (n == parent.getLastChild()) {
+// start of generated patch
+for(Node an : parent.getAncestors()){
+int ancestorType=parent.getParent().getType();
+if(ancestorType==Token.COMMA)continue;
+if(ancestorType!=Token.EXPR_RESULT&&ancestorType!=Token.BLOCK)return ;else break;
+}
+// end of generated patch
+/* start of original code
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA)
@@ -118,6 +126,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
           else
             break;
         }
+ end of original code*/
       }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
       if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||

794: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

795: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-38_Auto\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,9 +242,16 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
+// start of generated patch
+if(prev=='-'){
+add(" ");
+}
+// end of generated patch
+/* start of original code
     if (x < 0 && prev == '-') {
       add(" ");
     }
+ end of original code*/
 
     if ((long) x == x && !negativeZero) {
       long value = (long) x;

796: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-38_Manual\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if ((x < 0 || negativeZero) && prev == '-') {
       add(" ");
     }
 

797: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-46_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -139,6 +139,19 @@ class RecordType extends PrototypeObjectType {
 
   @Override
   public JSType getLeastSupertype(JSType that) {
+// start of generated patch
+if(!that.isRecordType()){
+return super.getLeastSupertype(that);
+}
+RecordTypeBuilder builder=new RecordTypeBuilder(registry);
+for(String property : properties.keySet()){
+if(that.toMaybeRecordType().hasProperty(property)&&that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))){
+builder.addProperty(property,getPropertyType(property),getPropertyNode(property));
+}
+}
+return getLeastSupertype(this,that);
+// end of generated patch
+/* start of original code
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
@@ -152,6 +165,7 @@ class RecordType extends PrototypeObjectType {
       }
     }
     return builder.build();
+ end of original code*/
   }
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {

798: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-46_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,6 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

799: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-57_Buggy\\src\\com\\google\\javascript\\jscomp\\ClosureCodingConvention.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-57_Auto\\src\\com\\google\\javascript\\jscomp\\ClosureCodingConvention.java"	
@@ -194,9 +194,16 @@ public class ClosureCodingConvention extends DefaultCodingConvention {
         String qualifiedName = callee.getQualifiedName();
         if (functionName.equals(qualifiedName)) {
           Node target = callee.getNext();
+// start of generated patch
+if(target!=null&&target.getType()==Token.STRING){
+className=target.getString();
+}
+// end of generated patch
+/* start of original code
           if (target != null) {
             className = target.getString();
           }
+ end of original code*/
         }
       }
     }

800: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-57_Buggy\\src\\com\\google\\javascript\\jscomp\\ClosureCodingConvention.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-57_Manual\\src\\com\\google\\javascript\\jscomp\\ClosureCodingConvention.java"	
@@ -194,7 +194,7 @@ public class ClosureCodingConvention extends DefaultCodingConvention {
         String qualifiedName = callee.getQualifiedName();
         if (functionName.equals(qualifiedName)) {
           Node target = callee.getNext();
-          if (target != null) {
+          if (target != null && target.getType() == Token.STRING) {
             className = target.getString();
           }
         }

801: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-62_Auto\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -94,6 +94,20 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // padding equal to the excerpt and arrow at the end
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
+// start of generated patch
+if(excerpt.equals(LINE)&&0<=charno&&charno<=sourceExcerpt.length()){
+for(int i=0;i<charno;i++){
+char c=sourceExcerpt.charAt(i);
+if(Character.isWhitespace(c)){
+b.append(c);
+}else {
+b.append(' ');
+}
+}
+b.append("^\n");
+}
+// end of generated patch
+/* start of original code
       if (excerpt.equals(LINE)
           && 0 <= charno && charno < sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
@@ -106,6 +120,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
         }
         b.append("^\n");
       }
+ end of original code*/
     }
     return b.toString();
   }

802: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-62_Manual\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

803: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-6_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-6_Auto\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -402,11 +402,20 @@ class TypeValidator {
   boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType,
       JSType leftType, String msg) {
     if (!rightType.canAssignTo(leftType)) {
+// start of generated patch
+if(!shouldReport&&(shouldReport||!NodeUtil.mayHaveSideEffects(n,t.getCompiler()))){
+registerMismatch(rightType,leftType,null);
+}else {
+mismatch(t,n,msg,rightType,leftType);
+}
+// end of generated patch
+/* start of original code
       if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
         registerMismatch(rightType, leftType, null);
       } else {
       mismatch(t, n, msg, rightType, leftType);
       }
+ end of original code*/
       return false;
     }
     return true;

804: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-6_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-6_Manual\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -363,9 +363,6 @@ class TypeValidator {
       JSType leftType, Node owner, String propName) {
     // The NoType check is a hack to make typedefs work OK.
     if (!leftType.isNoType() && !rightType.canAssignTo(leftType)) {
-      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
       // Do not type-check interface methods, because we expect that
       // they will have dummy implementations that do not match the type
       // annotations.
@@ -382,7 +379,6 @@ class TypeValidator {
           "assignment to property " + propName + " of " +
           getReadableJSTypeName(owner, true),
           rightType, leftType);
-      }
       return false;
     }
     return true;
@@ -402,11 +398,7 @@ class TypeValidator {
   boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType,
       JSType leftType, String msg) {
     if (!rightType.canAssignTo(leftType)) {
-      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
       mismatch(t, n, msg, rightType, leftType);
-      }
       return false;
     }
     return true;

805: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-73_Auto\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,6 +1042,14 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
+// start of generated patch
+if(c>0x1f&&c<0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+// end of generated patch
+/* start of original code
             if (c > 0x1f && c <= 0x7f) {
               sb.append(c);
             } else {
@@ -1050,6 +1058,7 @@ class CodeGenerator {
               // so we play it safe and unicode escape them.
               appendHexJavaScriptRepresentation(sb, c);
             }
+ end of original code*/
           }
       }
     }

806: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Closure-73_Manual\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

807: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-12_Buggy\\src\\org\\apache\\commons\\lang3\\RandomStringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-12_Auto\\src\\org\\apache\\commons\\lang3\\RandomStringUtils.java"	
@@ -228,6 +228,19 @@ public class RandomStringUtils {
             throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
         }
 
+// start of generated patch
+if(chars==null&&end==0){
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
+}
+char[] buffer=new char[count];
+int gap=end-start;
+// end of generated patch
+/* start of original code
         if (start == 0 && end == 0) {
                 if (!letters && !numbers) {
                     end = Integer.MAX_VALUE;
@@ -239,6 +252,7 @@ public class RandomStringUtils {
 
         char[] buffer = new char[count];
         int gap = end - start;
+ end of original code*/
 
         while (count-- != 0) {
             char ch;

808: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-12_Buggy\\src\\org\\apache\\commons\\lang3\\RandomStringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-12_Manual\\src\\org\\apache\\commons\\lang3\\RandomStringUtils.java"	
@@ -227,14 +227,21 @@ public class RandomStringUtils {
         } else if (count < 0) {
             throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
         }
+        if (chars != null && chars.length == 0) {
+            throw new IllegalArgumentException("The chars array must not be empty");
+        }
 
         if (start == 0 && end == 0) {
+            if (chars != null) {
+                end = chars.length;
+            } else {
                 if (!letters && !numbers) {
                     end = Integer.MAX_VALUE;
                 } else {
                     end = 'z' + 1;
                     start = ' ';                
                 }
+            }
         }
 
         char[] buffer = new char[count];

809: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-16_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -445,9 +445,17 @@ public class NumberUtils {
         if (str == null) {
             return null;
         }
+// start of generated patch
+str=str.toLowerCase();
+if(StringUtils.isBlank(str)){
+throw new NumberFormatException("A blank string is not a valid number");
+}
+// end of generated patch
+/* start of original code
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
+ end of original code*/
         if (str.startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 

810: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-16_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-16_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -455,7 +455,7 @@ public class NumberUtils {
             // a wrong value.
             return null;
         }
-        if (str.startsWith("0x") || str.startsWith("-0x")) {
+        if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             return createInteger(str);
         }   
         char lastChar = str.charAt(str.length() - 1);

811: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-1_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-1_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -465,9 +465,21 @@ public class NumberUtils {
         }
         if (pfxLen > 0) { // we have a hex number
             final int hexDigits = str.length() - pfxLen;
+// start of generated patch
+if(hexDigits>16){
+try{
+return createLong(str);
+}catch (final NumberFormatException nfe) {
+}
+
+return createBigInteger(str);
+}
+// end of generated patch
+/* start of original code
             if (hexDigits > 16) { // too many for Long
                 return createBigInteger(str);
             }
+ end of original code*/
             if (hexDigits > 8) { // too many for an int
                 return createLong(str);
             }

812: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-1_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-1_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -464,11 +464,20 @@ public class NumberUtils {
             }
         }
         if (pfxLen > 0) { // we have a hex number
+            char firstSigDigit = 0; // strip leading zeroes
+            for(int i = pfxLen; i < str.length(); i++) {
+                firstSigDigit = str.charAt(i);
+                if (firstSigDigit == '0') { // count leading zeroes
+                    pfxLen++;
+                } else {
+                    break;
+                }
+            }
             final int hexDigits = str.length() - pfxLen;
-            if (hexDigits > 16) { // too many for Long
+            if (hexDigits > 16 || (hexDigits == 16 && firstSigDigit > '7')) { // too many for Long
                 return createBigInteger(str);
             }
-            if (hexDigits > 8) { // too many for an int
+            if (hexDigits > 8 || (hexDigits == 8 && firstSigDigit > '7')) { // too many for an int
                 return createLong(str);
             }
             return createInteger(str);

813: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-27_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -485,11 +485,19 @@ public class NumberUtils {
             }
             mant = str.substring(0, decPos);
         } else {
+if(expPos>-1&&expPos<str.length()-1){
+mant=str.substring(0,expPos);
+}else {
+mant=str;
+}
+// end of generated patch
+/* start of original code
             if (expPos > -1) {
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;
             }
+ end of original code*/
             dec = null;
         }
         if (!Character.isDigit(lastChar) && lastChar != '.') {

814: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-27_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -476,7 +476,7 @@ public class NumberUtils {
         if (decPos > -1) {
 
             if (expPos > -1) {
-                if (expPos < decPos) {
+                if (expPos < decPos || expPos > str.length()) {
                     throw new NumberFormatException(str + " is not a valid number.");
                 }
                 dec = str.substring(decPos + 1, expPos);
@@ -486,6 +486,9 @@ public class NumberUtils {
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
+                if (expPos > str.length()) {
+                    throw new NumberFormatException(str + " is not a valid number.");
+                }
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;

815: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-33_Buggy\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-33_Auto\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
@@ -906,9 +906,16 @@ public class ClassUtils {
             return ArrayUtils.EMPTY_CLASS_ARRAY;
         }
         Class<?>[] classes = new Class[array.length];
+// start of generated patch
+for(int i=0;i<array.length;i++){
+classes[i]=array[i]==null?null:array[i].getClass();
+}
+// end of generated patch
+/* start of original code
         for (int i = 0; i < array.length; i++) {
             classes[i] = array[i].getClass();
         }
+ end of original code*/
         return classes;
     }
 

816: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-33_Buggy\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-33_Manual\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
@@ -907,7 +907,7 @@ public class ClassUtils {
         }
         Class<?>[] classes = new Class[array.length];
         for (int i = 0; i < array.length; i++) {
-            classes[i] = array[i].getClass();
+            classes[i] = array[i] == null ? null : array[i].getClass();
         }
         return classes;
     }

817: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-39_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-39_Auto\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3672,12 +3672,25 @@ public class StringUtils {
         int increase = 0;
 
         // count the replacement text elements that are larger than their corresponding text being replaced
+// start of generated patch
+for(int i=0;i<searchList.length;i++){
+if(noMoreMatchesForReplIndex[i]||searchList[i]==null||searchList[i].length()==0||replacementList[i]==null){
+continue;
+}
+int greater=replacementList[i].length()-searchList[i].length();
+if(greater>0){
+increase+=3*greater;
+}
+}
+// end of generated patch
+/* start of original code
         for (int i = 0; i < searchList.length; i++) {
             int greater = replacementList[i].length() - searchList[i].length();
             if (greater > 0) {
                 increase += 3 * greater; // assume 3 matches
             }
         }
+ end of original code*/
         // have upper-bound at 20% increase, then let Java take over
         increase = Math.min(increase, text.length() / 5);
 

818: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-39_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-39_Manual\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3673,6 +3673,9 @@ public class StringUtils {
 
         // count the replacement text elements that are larger than their corresponding text being replaced
         for (int i = 0; i < searchList.length; i++) {
+            if (searchList[i] == null || replacementList[i] == null) {
+                continue;
+            }
             int greater = replacementList[i].length() - searchList[i].length();
             if (greater > 0) {
                 increase += 3 * greater; // assume 3 matches

819: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-41_Buggy\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-41_Auto\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
@@ -166,10 +166,18 @@ public class ClassUtils {
      * @return the class name without the package name or an empty string
      */
     public static String getShortClassName(Class<?> cls) {
+// start of generated patch
+if(cls==null){
+return StringUtils.EMPTY;
+}
+return getShortCanonicalName(cls.getName());
+// end of generated patch
+/* start of original code
         if (cls == null) {
             return StringUtils.EMPTY;
         }
         return getShortClassName(cls.getName());
+ end of original code*/
     }
 
     /**
@@ -226,10 +234,18 @@ public class ClassUtils {
      * @return the package name or an empty string
      */
     public static String getPackageName(Class<?> cls) {
+// start of generated patch
+if(cls==null){
+return StringUtils.EMPTY;
+}
+return getPackageCanonicalName(cls.getName());
+// end of generated patch
+/* start of original code
         if (cls == null) {
             return StringUtils.EMPTY;
         }
         return getPackageName(cls.getName());
+ end of original code*/
     }
 
     /**

820: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-41_Buggy\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-41_Manual\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
@@ -188,10 +188,23 @@ public class ClassUtils {
             return StringUtils.EMPTY;
         }
 
+        StringBuffer arrayPrefix = new StringBuffer();
 
         // Handle array encoding
+        if (className.startsWith("[")) {
+            while (className.charAt(0) == '[') {
+                className = className.substring(1);
+                arrayPrefix.append("[]");
+            }
             // Strip Object type encoding
+            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
+                className = className.substring(1, className.length() - 1);
+            }
+        }
 
+        if (reverseAbbreviationMap.containsKey(className)) {
+            className = reverseAbbreviationMap.get(className);
+        }
 
         int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
         int innerIdx = className.indexOf(
@@ -200,7 +213,7 @@ public class ClassUtils {
         if (innerIdx != -1) {
             out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);
         }
-        return out;
+        return out + arrayPrefix;
     }
 
     // Package name
@@ -242,12 +255,18 @@ public class ClassUtils {
      * @return the package name or an empty string
      */
     public static String getPackageName(String className) {
-        if (className == null) {
+        if (className == null || className.length() == 0) {
             return StringUtils.EMPTY;
         }
 
         // Strip array encoding
+        while (className.charAt(0) == '[') {
+            className = className.substring(1);
+        }
         // Strip Object type encoding
+        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
+            className = className.substring(1);
+        }
 
         int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
         if (i == -1) {

821: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-43_Auto\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -418,9 +418,17 @@ public class ExtendedMessageFormat extends MessageFormat {
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
+// start of generated patch
+if(escapingOn&&c[start]==QUOTE){
+next(pos);
+return appendTo==null?null:appendTo.append(QUOTE);
+}
+// end of generated patch
+/* start of original code
         if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
+ end of original code*/
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {

822: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-43_Manual\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,6 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;

823: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-45_Buggy\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-45_Auto\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
@@ -619,12 +619,21 @@ public class WordUtils {
             upper = str.length();
         }
         // if upper is less than lower, raise it to lower
+// start of generated patch
+if((lower+(upper-3))<lower){
+upper=lower;
+}
+StringBuffer result=new StringBuffer();
+int index=StringUtils.indexOf(str," ",lower);
+// end of generated patch
+/* start of original code
         if (upper < lower) {
             upper = lower;
         }
 
         StringBuffer result = new StringBuffer();
         int index = StringUtils.indexOf(str, " ", lower);
+ end of original code*/
         if (index == -1) {
             result.append(str.substring(0, upper));
             // only if abbreviation has occured do we append the appendToEnd value

824: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-45_Buggy\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-45_Manual\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
@@ -613,6 +613,9 @@ public class WordUtils {
 
         // if the lower value is greater than the length of the string,
         // set to the length of the string
+        if (lower > str.length()) {
+            lower = str.length();    
+        }
         // if the upper value is -1 (i.e. no limit) or is greater
         // than the length of the string, set to the length of the string
         if (upper == -1 || upper > str.length()) {

825: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-50_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-50_Auto\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -293,9 +293,19 @@ public class FastDateFormat extends Format {
                 locale = Locale.getDefault();
             }
             try {
+// start of generated patch
+if(locale!=null){
+key=new Pair(key,locale);
+}
+SimpleDateFormat formatter=(SimpleDateFormat)DateFormat.getDateInstance(style,locale);
+String pattern=formatter.toPattern();
+format=getInstance(pattern,timeZone,locale);
+// end of generated patch
+/* start of original code
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
                 String pattern = formatter.toPattern();
                 format = getInstance(pattern, timeZone, locale);
+ end of original code*/
                 cDateInstanceCache.put(key, format);
                 
             } catch (ClassCastException ex) {
@@ -472,10 +482,20 @@ public class FastDateFormat extends Format {
                 locale = Locale.getDefault();
             }
             try {
+// start of generated patch
+if(locale!=null){
+key=new Pair(key,locale);
+}
+SimpleDateFormat formatter=(SimpleDateFormat)DateFormat.getDateTimeInstance(dateStyle,timeStyle,locale);
+String pattern=formatter.toPattern();
+format=getInstance(pattern,timeZone,locale);
+// end of generated patch
+/* start of original code
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,
                         locale);
                 String pattern = formatter.toPattern();
                 format = getInstance(pattern, timeZone, locale);
+ end of original code*/
                 cDateTimeInstanceCache.put(key, format);
 
             } catch (ClassCastException ex) {

826: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-50_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-50_Manual\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -282,16 +282,14 @@ public class FastDateFormat extends Format {
             key = new Pair(key, timeZone);
         }
 
-        if (locale != null) {
-            key = new Pair(key, locale);
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
 
+        key = new Pair(key, locale);
 
         FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
                 String pattern = formatter.toPattern();
@@ -462,15 +460,13 @@ public class FastDateFormat extends Format {
         if (timeZone != null) {
             key = new Pair(key, timeZone);
         }
-        if (locale != null) {
-            key = new Pair(key, locale);
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
+        key = new Pair(key, locale);
 
         FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,
                         locale);

827: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -449,6 +449,17 @@ public class NumberUtils {
             switch (lastChar) {
                 case 'l' :
                 case 'L' :
+// start of generated patch
+if(dec==null&&exp==null&&(numeric.charAt(0)=='-'&&isDigits(numeric.substring(1))||isDigits(numeric))){
+try{
+return createLong(numeric);
+}catch (NumberFormatException nfe) {
+}
+
+return createBigInteger(numeric);
+}
+// end of generated patch
+/* start of original code
                     if (dec == null
                         && exp == null
                         && isDigits(numeric.substring(1))
@@ -461,6 +472,7 @@ public class NumberUtils {
                         return createBigInteger(numeric);
 
                     }
+ end of original code*/
                     throw new NumberFormatException(str + " is not a valid number.");
                 case 'f' :
                 case 'F' :

828: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

829: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-60_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-60_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1670,11 +1670,20 @@ public class StrBuilder implements Cloneable {
      */
     public boolean contains(char ch) {
         char[] thisBuf = buffer;
+// start of generated patch
+for(int i=0;i<size;i++){
+if(thisBuf[i]==ch){
+return true;
+}
+}
+// end of generated patch
+/* start of original code
         for (int i = 0; i < thisBuf.length; i++) {
             if (thisBuf[i] == ch) {
                 return true;
             }
         }
+ end of original code*/
         return false;
     }
 
@@ -1727,11 +1736,20 @@ public class StrBuilder implements Cloneable {
             return -1;
         }
         char[] thisBuf = buffer;
+// start of generated patch
+for(int i=startIndex;i<size;i++){
+if(thisBuf[i]==ch){
+return i;
+}
+}
+// end of generated patch
+/* start of original code
         for (int i = startIndex; i < thisBuf.length; i++) {
             if (thisBuf[i] == ch) {
                 return i;
             }
         }
+ end of original code*/
         return -1;
     }
 

830: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-60_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-60_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1670,7 +1670,7 @@ public class StrBuilder implements Cloneable {
      */
     public boolean contains(char ch) {
         char[] thisBuf = buffer;
-        for (int i = 0; i < thisBuf.length; i++) {
+        for (int i = 0; i < this.size; i++) {
             if (thisBuf[i] == ch) {
                 return true;
             }
@@ -1727,7 +1727,7 @@ public class StrBuilder implements Cloneable {
             return -1;
         }
         char[] thisBuf = buffer;
-        for (int i = startIndex; i < thisBuf.length; i++) {
+        for (int i = startIndex; i < size; i++) {
             if (thisBuf[i] == ch) {
                 return i;
             }

831: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-61_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-61_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1775,6 +1775,17 @@ public class StrBuilder implements Cloneable {
         char[] thisBuf = buffer;
         int len = thisBuf.length - strLen;
         outer:
+// start of generated patch
+for(int i=startIndex;i<size;i++){
+for(int j=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continue outer;
+}
+}
+return i;
+}
+// end of generated patch
+/* start of original code
         for (int i = startIndex; i < len; i++) {
             for (int j = 0; j < strLen; j++) {
                 if (str.charAt(j) != thisBuf[i + j]) {
@@ -1783,6 +1794,7 @@ public class StrBuilder implements Cloneable {
             }
             return i;
         }
+ end of original code*/
         return -1;
     }
 

832: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-61_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-61_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1773,7 +1773,7 @@ public class StrBuilder implements Cloneable {
             return -1;
         }
         char[] thisBuf = buffer;
-        int len = thisBuf.length - strLen;
+        int len = size - strLen + 1;
         outer:
         for (int i = startIndex; i < len; i++) {
             for (int j = 0; j < strLen; j++) {

833: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -433,6 +433,16 @@ public class DurationFormatUtils {
         end.add( field, -1 * difference );
         int endValue = end.get(field);
         int startValue = start.get(field);
+// start of generated patch
+if(endValue<field){
+int newdiff=startValue-endValue;
+end.add(field,newdiff);
+return newdiff;
+}else {
+return 0;
+}
+// end of generated patch
+/* start of original code
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
             end.add( field, newdiff );
@@ -440,6 +450,7 @@ public class DurationFormatUtils {
         } else {
             return 0;
         }
+ end of original code*/
     }
 
     static final Object y = "y";

834: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

835: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-33_Auto\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,9 +335,16 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
+// start of generated patch
+if(Precision.compareTo(entry,0.0,epsilon)>0){
+columnsToDrop.add(i);
+}
+// end of generated patch
+/* start of original code
             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                 columnsToDrop.add(i);
             }
+ end of original code*/
         }
 
         // non-basic artificial variables

836: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-33_Buggy\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-33_Manual\\src\\org\\apache\\commons\\math3\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, epsilon) > 0) {
                 columnsToDrop.add(i);
             }
         }

837: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-35_Auto\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -47,8 +47,17 @@ public class ElitisticListPopulation extends ListPopulation {
     public ElitisticListPopulation(final List<Chromosome> chromosomes,
                                    final int populationLimit,
                                    final double elitismRate) {
+// start of generated patch
+super(chromosomes,populationLimit);
+if(elitismRate<0||elitismRate>1){
+throw new OutOfRangeException(LocalizedFormats.ELITISM_RATE,elitismRate,0,1);
+}
+this.elitismRate=elitismRate;
+// end of generated patch
+/* start of original code
         super(chromosomes, populationLimit);
         this.elitismRate = elitismRate;
+ end of original code*/
     }
 
     /**
@@ -61,8 +70,17 @@ public class ElitisticListPopulation extends ListPopulation {
      * @throws OutOfRangeException if the elitism rate is outside the [0, 1] range
      */
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
+// start of generated patch
+super(populationLimit);
+if(elitismRate<0||elitismRate>1){
+throw new OutOfRangeException(LocalizedFormats.ELITISM_RATE,elitismRate,0,1);
+}
+this.elitismRate=elitismRate;
+// end of generated patch
+/* start of original code
         super(populationLimit);
         this.elitismRate = elitismRate;
+ end of original code*/
     }
 
     /**

838: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-35_Buggy\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-35_Manual\\src\\org\\apache\\commons\\math3\\genetics\\ElitisticListPopulation.java"	
@@ -48,7 +48,7 @@ public class ElitisticListPopulation extends ListPopulation {
                                    final int populationLimit,
                                    final double elitismRate) {
         super(chromosomes, populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**
@@ -62,7 +62,7 @@ public class ElitisticListPopulation extends ListPopulation {
      */
     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {
         super(populationLimit);
-        this.elitismRate = elitismRate;
+        setElitismRate(elitismRate);
     }
 
     /**

839: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-41_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-41_Auto\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
@@ -517,9 +517,16 @@ public class Variance extends AbstractStorelessUnivariateStatistic implements Se
                 }
 
                 double sumWts = 0;
+// start of generated patch
+for(int i=begin;i<begin+length;i++){
+sumWts+=weights[i];
+}
+// end of generated patch
+/* start of original code
                 for (int i = 0; i < weights.length; i++) {
                     sumWts += weights[i];
                 }
+ end of original code*/
 
                 if (isBiasCorrected) {
                     var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0);

840: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-41_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-41_Manual\\src\\org\\apache\\commons\\math\\stat\\descriptive\\moment\\Variance.java"	
@@ -517,7 +517,7 @@ public class Variance extends AbstractStorelessUnivariateStatistic implements Se
                 }
 
                 double sumWts = 0;
-                for (int i = 0; i < weights.length; i++) {
+                for (int i = begin; i < begin + length; i++) {
                     sumWts += weights[i];
                 }
 

841: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-43_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-43_Auto\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
@@ -574,8 +574,15 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {
      * @since 1.2
      */
     public void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl) {
+// start of generated patch
+this.sumImpl=geoMeanImpl;
+checkEmpty();
+this.geoMeanImpl=geoMeanImpl;
+// end of generated patch
+/* start of original code
         checkEmpty();
         this.geoMeanImpl = geoMeanImpl;
+ end of original code*/
     }
 
     /**
@@ -632,8 +639,15 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {
      * @since 1.2
      */
     public void setVarianceImpl(StorelessUnivariateStatistic varianceImpl) {
+// start of generated patch
+this.sumImpl=varianceImpl;
+checkEmpty();
+this.varianceImpl=varianceImpl;
+// end of generated patch
+/* start of original code
         checkEmpty();
         this.varianceImpl = varianceImpl;
+ end of original code*/
     }
 
     /**

842: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-43_Buggy\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-43_Manual\\src\\org\\apache\\commons\\math\\stat\\descriptive\\SummaryStatistics.java"	
@@ -155,13 +155,13 @@ public class SummaryStatistics implements StatisticalSummary, Serializable {
         secondMoment.increment(value);
         // If mean, variance or geomean have been overridden,
         // need to increment these
-        if (!(meanImpl instanceof Mean)) {
+        if (meanImpl != mean) {
             meanImpl.increment(value);
         }
-        if (!(varianceImpl instanceof Variance)) {
+        if (varianceImpl != variance) {
             varianceImpl.increment(value);
         }
-        if (!(geoMeanImpl instanceof GeometricMean)) {
+        if (geoMeanImpl != geoMean) {
             geoMeanImpl.increment(value);
         }
         n++;

843: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,18 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
+// start of generated patch
+if(x==x0){
+x0=0.5*(x0+x1-FastMath.max(rtol*FastMath.abs(x1),atol));
+f0=computeObjectiveValue(x0);
+}
+// end of generated patch
+/* start of original code
                     if (x == x1) {
                         x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }
+ end of original code*/
                     break;
                 default:
                     // Should never happen.

844: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

845: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-53_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-53_Auto\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -149,9 +149,18 @@ public class Complex implements FieldElement<Complex>, Serializable  {
      */
     public Complex add(Complex rhs)
         throws NullArgumentException {
+// start of generated patch
+MathUtils.checkNotNull(rhs);
+if(isNaN||rhs.isNaN){
+return NaN;
+}
+return createComplex(real+rhs.getReal(),imaginary+rhs.getImaginary());
+// end of generated patch
+/* start of original code
         MathUtils.checkNotNull(rhs);
         return createComplex(real + rhs.getReal(),
             imaginary + rhs.getImaginary());
+ end of original code*/
     }
 
     /**

846: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-53_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-53_Manual\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -150,6 +150,9 @@ public class Complex implements FieldElement<Complex>, Serializable  {
     public Complex add(Complex rhs)
         throws NullArgumentException {
         MathUtils.checkNotNull(rhs);
+        if (isNaN || rhs.isNaN) {
+            return NaN;
+        }
         return createComplex(real + rhs.getReal(),
             imaginary + rhs.getImaginary());
     }

847: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-57_Auto\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -172,6 +172,17 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
+// start of generated patch
+double sum=0;
+for(int i=0;i<pointSet.size();i++){
+ final T p=pointSet.get(i);
+ final Cluster<T> nearest=getNearestCluster(resultSet,p);
+ final double d=p.distanceFrom(nearest.getCenter());
+sum+=d*d;
+dx2[i]=sum;
+}
+// end of generated patch
+/* start of original code
             int sum = 0;
             for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
@@ -180,6 +191,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
                 sum += d * d;
                 dx2[i] = sum;
             }
+ end of original code*/
 
             // Add one new data point as a center. Each point x is chosen with
             // probability proportional to D(x)2

848: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-57_Manual\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -172,7 +172,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
+            double sum = 0;
             for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
                 final Cluster<T> nearest = getNearestCluster(resultSet, p);

849: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-59_Buggy\\src\\org\\apache\\commons\\math\\util\\FastMath.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-59_Auto\\src\\org\\apache\\commons\\math\\util\\FastMath.java"	
@@ -904,7 +904,7 @@ public class FastMath {
      *  For x between 0 and 1, returns exp(x), uses extended precision
      *  @param x argument of exponential
      *  @param result placeholder where to place exp(x) split in two terms
-     *  for extra precision (i.e. exp(x) = result[0] Â° result[1]
+     *  for extra precision (i.e. exp(x) = result[0] ?? result[1]
      *  @return exp(x)
      */
     private static double slowexp(final double x, final double result[]) {
@@ -3479,7 +3479,12 @@ public class FastMath {
      * @return b if a is lesser or equal to b, a otherwise
      */
     public static float max(final float a, final float b) {
+// start of generated patch
+return (a<=b)?b:(Float.isNaN(a+b)?Float.NaN:a);
+// end of generated patch
+/* start of original code
         return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);
+ end of original code*/
     }
 
     /** Compute the maximum of two values

850: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-59_Buggy\\src\\org\\apache\\commons\\math\\util\\FastMath.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-59_Manual\\src\\org\\apache\\commons\\math\\util\\FastMath.java"	
@@ -3479,7 +3479,7 @@ public class FastMath {
      * @return b if a is lesser or equal to b, a otherwise
      */
     public static float max(final float a, final float b) {
-        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);
+        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : a);
     }
 
     /** Compute the maximum of two values

851: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-5_Auto\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -301,9 +301,16 @@ public class Complex implements FieldElement<Complex>, Serializable  {
             return NaN;
         }
 
+// start of generated patch
+if(real==0.0&&imaginary==0.0){
+return INF;
+}
+// end of generated patch
+/* start of original code
         if (real == 0.0 && imaginary == 0.0) {
             return NaN;
         }
+ end of original code*/
 
         if (isInfinite) {
             return ZERO;

852: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-5_Manual\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -302,7 +302,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+            return INF;
         }
 
         if (isInfinite) {

853: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-63_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -414,7 +414,12 @@ public final class MathUtils {
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
+// start of generated patch
+return equals(x,y,1)||FastMath.abs(y-x)<=SAFE_MIN;
+// end of generated patch
+/* start of original code
         return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+ end of original code*/
     }
 
     /**

854: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-63_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -414,7 +414,7 @@ public final class MathUtils {
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        return equals(x, y, 1);
     }
 
     /**

855: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-69_Buggy\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-69_Auto\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
@@ -163,6 +163,16 @@ public class PearsonsCorrelation {
         double[][] out = new double[nVars][nVars];
         for (int i = 0; i < nVars; i++) {
             for (int j = 0; j < nVars; j++) {
+// start of generated patch
+if(i==j&&i<nVars){
+out[i][j]=0.0;
+}else {
+double r=correlationMatrix.getEntry(i,j);
+double t=Math.abs(r*Math.sqrt((nObs-2)/(1-r*r)));
+out[i][j]=2*(1-tDistribution.cumulativeProbability(t));
+}
+// end of generated patch
+/* start of original code
                 if (i == j) {
                     out[i][j] = 0d;
                 } else {
@@ -170,6 +180,7 @@ public class PearsonsCorrelation {
                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                     out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
                 }
+ end of original code*/
             }
         }
         return new BlockRealMatrix(out);

856: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-69_Buggy\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-69_Manual\\src\\org\\apache\\commons\\math\\stat\\correlation\\PearsonsCorrelation.java"	
@@ -168,7 +168,7 @@ public class PearsonsCorrelation {
                 } else {
                     double r = correlationMatrix.getEntry(i, j);
                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
+                    out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
                 }
             }
         }

857: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-70_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,12 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
+// start of generated patch
+return solve(f,min,max);
+// end of generated patch
+/* start of original code
         return solve(min, max);
+ end of original code*/
     }
 
     /** {@inheritDoc} */

858: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-70_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

859: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-71_Buggy\\src\\org\\apache\\commons\\math\\ode\\nonstiff\\RungeKuttaIntegrator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-71_Auto\\src\\org\\apache\\commons\\math\\ode\\nonstiff\\RungeKuttaIntegrator.java"	
@@ -171,6 +171,16 @@ public abstract class RungeKuttaIntegrator extends AbstractIntegrator {
         interpolator.storeTime(stepStart + stepSize);
         if (manager.evaluateStep(interpolator)) {
             final double dt = manager.getEventTime() - stepStart;
+// start of generated patch
+if(Math.abs(dt)<=Math.ulp(stepStart)){
+System.arraycopy(y,0,yTmp,0,y0.length);
+stepSize=0;
+loop=false;
+}else {
+stepSize=dt;
+}
+// end of generated patch
+/* start of original code
             if (Math.abs(dt) <= Math.ulp(stepStart)) {
                 // we cannot simply truncate the step, reject the current computation
                 // and let the loop compute another state with the truncated step.
@@ -182,6 +192,7 @@ public abstract class RungeKuttaIntegrator extends AbstractIntegrator {
                 // reject the step to match exactly the next switch time
                 stepSize = dt;
             }
+ end of original code*/
         } else {
           loop = false;
         }

860: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-71_Buggy\\src\\org\\apache\\commons\\math\\ode\\nonstiff\\RungeKuttaIntegrator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-71_Manual\\src\\org\\apache\\commons\\math\\ode\\nonstiff\\RungeKuttaIntegrator.java"	
@@ -177,6 +177,9 @@ public abstract class RungeKuttaIntegrator extends AbstractIntegrator {
                 // it is so small (much probably exactly 0 due to limited accuracy)
                 // that the code above would fail handling it.
                 // So we set up an artificial 0 size step by copying states
+                interpolator.storeTime(stepStart);
+                System.arraycopy(y, 0, yTmp, 0, y0.length);
+                stepSize = 0;
                 loop     = false;
             } else {
                 // reject the step to match exactly the next switch time

861: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-72_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-72_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
@@ -111,10 +111,18 @@ public class BrentSolver extends UnivariateRealSolverImpl {
 
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
+// start of generated patch
+if(Math.abs(yMin)<=functionValueAccuracy){
+setResult(min,0);
+return result;
+}
+// end of generated patch
+/* start of original code
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
             return result;
         }
+ end of original code*/
 
         // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {

862: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-72_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-72_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
@@ -112,7 +112,7 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
-            setResult(yMin, 0);
+            setResult(min, 0);
             return result;
         }
 
@@ -124,7 +124,7 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
-            setResult(yMax, 0);
+            setResult(max, 0);
             return result;
         }
 

863: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-73_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-73_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
@@ -129,6 +129,13 @@ public class BrentSolver extends UnivariateRealSolverImpl {
         }
 
         // reduce interval if initial and max bracket the root
+// start of generated patch
+if(yInitial*yMax<0){
+return solve(f,initial,yInitial,max,yMax,initial,yInitial);
+}
+return solve(f,min,initial);
+// end of generated patch
+/* start of original code
         if (yInitial * yMax < 0) {
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
@@ -136,6 +143,7 @@ public class BrentSolver extends UnivariateRealSolverImpl {
 
         // full Brent algorithm starting with provided initial guess
         return solve(f, min, yMin, max, yMax, initial, yInitial);
+ end of original code*/
 
     }
 

864: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-73_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-73_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BrentSolver.java"	
@@ -133,6 +133,10 @@ public class BrentSolver extends UnivariateRealSolverImpl {
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
 
+        if (yMin * yMax > 0) {
+            throw MathRuntimeException.createIllegalArgumentException(
+                  NON_BRACKETING_MESSAGE, min, max, yMin, yMax);
+        }
 
         // full Brent algorithm starting with provided initial guess
         return solve(f, min, yMin, max, yMax, initial, yInitial);

865: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-75_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,12 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
+// start of generated patch
+return getPct((Comparable<?>)v);
+// end of generated patch
+/* start of original code
         return getCumPct((Comparable<?>) v);
+ end of original code*/
     }
 
     /**

866: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-75_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**

867: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-79_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-79_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -1621,12 +1621,22 @@ public final class MathUtils {
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
+// start of generated patch
+double sum=0;
+for(int i=0;i<p1.length;i++){
+ final double dp=p1[i]-p2[i];
+sum+=dp*dp;
+}
+return Math.sqrt(sum);
+// end of generated patch
+/* start of original code
       int sum = 0;
       for (int i = 0; i < p1.length; i++) {
           final int dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);
+ end of original code*/
     }
 
     /**

868: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-79_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-79_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -1621,9 +1621,9 @@ public final class MathUtils {
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+      double sum = 0;
       for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+          final double dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);

869: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1134,11 +1134,20 @@ public class EigenDecompositionImpl implements EigenDecomposition {
             // flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
+// start of generated patch
+for(int k=0;k<0;k+=step){
+ final double tmp=work[i+k];
+work[i+k]=work[j-k];
+work[j-k]=tmp;
+}
+// end of generated patch
+/* start of original code
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
                     work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }
+ end of original code*/
                 j -= 4;
             }
             return true;

870: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

871: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1540,6 +1540,28 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
+// start of generated patch
+if(end-start>end){
+b2=work[nn-13]/work[nn-15];
+a2=a2+b2;
+for(int i4=nn-17;i4>=4*start+2+pingPong;i4-=4){
+if(b2==0.0){
+break;
+}
+b1=b2;
+if(work[i4]>work[i4-2]){
+return ;
+}
+b2=b2*(work[i4]/work[i4-2]);
+a2=a2+b2;
+if(100*Math.max(b2,b1)<a2||cnst1<a2){
+break;
+}
+}
+a2=cnst3*a2;
+}
+// end of generated patch
+/* start of original code
                 if (end - start > 2) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
@@ -1559,6 +1581,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     }
                     a2 = cnst3 * a2;
                 }
+ end of original code*/
 
                 if (a2 < cnst1) {
                     tau = gam * (1 - Math.sqrt(a2)) / (1 + a2);

872: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

873: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -81,10 +81,18 @@ public class SimplexSolver extends AbstractLinearOptimizer {
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
+// start of generated patch
+if(ratio<=minRatio){
+minRatio=ratio;
+minRatioPos=i;
+}
+// end of generated patch
+/* start of original code
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
                 }
+ end of original code*/
             }
         }
         return minRatioPos;

874: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

875: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,12 +87,19 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
+// start of generated patch
+if(comparator.compare(contracted,best)<=0){
+return ;
+}
+// end of generated patch
+/* start of original code
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
 
             // check convergence
                 return;
             }
+ end of original code*/
 
         }
 

876: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

877: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,6 +195,12 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
+// start of generated patch
+if(fa*upperBound>=0.0){
+throw new ConvergenceException("number of iterations={0}, maximum iterations={1}, "+"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, ",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);
+}
+// end of generated patch
+/* start of original code
         if (fa * fb >= 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
@@ -203,6 +209,7 @@ public class UnivariateRealSolverUtils {
                       numIterations, maximumIterations, initial,
                       lowerBound, upperBound, a, b, fa, fb);
         }
+ end of original code*/
         
         return new double[]{a, b};
     }

878: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

879: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-8_Auto\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -186,9 +186,16 @@ public class DiscreteDistribution<T> {
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
+// start of generated patch
+for(int i=sampleSize;i<sampleSize;i++){
+out[i]=sample();
+}
+// end of generated patch
+/* start of original code
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
+ end of original code*/
 
         return out;
 

880: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\SimFix_Math-8_Manual\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -178,13 +178,13 @@ public class DiscreteDistribution<T> {
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+    public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        final Object[] out = new Object[sampleSize];
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();

881: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-11_Buggy\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-11_Auto\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
@@ -272,7 +272,7 @@ public class ShapeUtilities {
             return false;
         }
         PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+        PathIterator iterator2 = p2.getPathIterator(null);
         double[] d1 = new double[6];
         double[] d2 = new double[6];
         boolean done = iterator1.isDone() && iterator2.isDone();

882: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-11_Buggy\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-11_Manual\\src\\org\\jfree\\chart\\util\\ShapeUtilities.java"	
@@ -272,7 +272,7 @@ public class ShapeUtilities {
             return false;
         }
         PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+        PathIterator iterator2 = p2.getPathIterator(null);
         double[] d1 = new double[6];
         double[] d2 = new double[6];
         boolean done = iterator1.isDone() && iterator2.isDone();

883: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-12_Auto\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

884: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-12_Buggy\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-12_Manual\\src\\org\\jfree\\chart\\plot\\MultiplePiePlot.java"	
@@ -142,7 +142,7 @@ public class MultiplePiePlot extends Plot implements Cloneable, Serializable {
      */
     public MultiplePiePlot(CategoryDataset dataset) {
         super();
-        this.dataset = dataset;
+        setDataset(dataset);
         PiePlot piePlot = new PiePlot(null);
         this.pieChart = new JFreeChart(piePlot);
         this.pieChart.removeLegend();

885: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-13_Auto\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, constraint.getHeight() - w[2]),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

886: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-13_Buggy\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-13_Manual\\src\\org\\jfree\\chart\\block\\BorderArrangement.java"	
@@ -452,7 +452,7 @@ public class BorderArrangement implements Arrangement, Serializable {
         h[3] = h[2];
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
-                    new Range(0.0, constraint.getWidth() - w[2]),
+                    new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);

887: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-19_Auto\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -970,7 +970,10 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
-        int result = this.rangeAxes.indexOf(axis);
+        if (axis == null) {
+	    throw new IllegalArgumentException("Null 'axis' argument.");
+	}
+int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();
             if (parent instanceof CategoryPlot) {

888: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-19_Buggy\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-19_Manual\\src\\org\\jfree\\chart\\plot\\CategoryPlot.java"	
@@ -695,6 +695,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.3
      */
     public int getDomainAxisIndex(CategoryAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         return this.domainAxes.indexOf(axis);
     }
     
@@ -970,6 +973,9 @@ public class CategoryPlot extends Plot implements ValueAxisPlot,
      * @since 1.0.7
      */
     public int getRangeAxisIndex(ValueAxis axis) {
+        if (axis == null) {
+            throw new IllegalArgumentException("Null 'axis' argument.");
+        }
         int result = this.rangeAxes.indexOf(axis);
         if (result < 0) { // try the parent plot
             Plot parent = getParent();

889: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-1_Auto\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

890: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-1_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-1_Manual\\src\\org\\jfree\\chart\\renderer\\category\\AbstractCategoryItemRenderer.java"	
@@ -1794,7 +1794,7 @@ public abstract class AbstractCategoryItemRenderer extends AbstractRenderer
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();

891: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-20_Buggy\\src\\org\\jfree\\chart\\plot\\ValueMarker.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-20_Auto\\src\\org\\jfree\\chart\\plot\\ValueMarker.java"	
@@ -92,7 +92,7 @@ public class ValueMarker extends Marker {
      */
     public ValueMarker(double value, Paint paint, Stroke stroke, 
                        Paint outlinePaint, Stroke outlineStroke, float alpha) {
-        super(paint, stroke, paint, stroke, alpha);
+        super(paint, stroke, outlinePaint, outlineStroke, alpha);
         this.value = value;
     }
     

892: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-20_Buggy\\src\\org\\jfree\\chart\\plot\\ValueMarker.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-20_Manual\\src\\org\\jfree\\chart\\plot\\ValueMarker.java"	
@@ -92,7 +92,7 @@ public class ValueMarker extends Marker {
      */
     public ValueMarker(double value, Paint paint, Stroke stroke, 
                        Paint outlinePaint, Stroke outlineStroke, float alpha) {
-        super(paint, stroke, paint, stroke, alpha);
+        super(paint, stroke, outlinePaint, outlineStroke, alpha);
         this.value = value;
     }
     

893: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-24_Buggy\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-24_Auto\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
@@ -123,7 +123,7 @@ public class GrayPaintScale
     public Paint getPaint(double value) {
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound 
+        int g = (int) ((v - this.lowerBound) / (this.upperBound 
                 - this.lowerBound) * 255.0);
         return new Color(g, g, g);
     }

894: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-24_Buggy\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-24_Manual\\src\\org\\jfree\\chart\\renderer\\GrayPaintScale.java"	
@@ -123,7 +123,7 @@ public class GrayPaintScale
     public Paint getPaint(double value) {
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound 
+        int g = (int) ((v - this.lowerBound) / (this.upperBound 
                 - this.lowerBound) * 255.0);
         return new Color(g, g, g);
     }

895: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-25_Auto\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -170,49 +170,7 @@ public class StatisticalBarRenderer extends BarRenderer
         notifyListeners(new RendererChangeEvent(this));
     }
     
-    /**
-     * Draws the bar with its standard deviation line range for a single 
-     * (series, category) data item.
-     *
-     * @param g2  the graphics device.
-     * @param state  the renderer state.
-     * @param dataArea  the data area.
-     * @param plot  the plot.
-     * @param domainAxis  the domain axis.
-     * @param rangeAxis  the range axis.
-     * @param data  the data.
-     * @param row  the row index (zero-based).
-     * @param column  the column index (zero-based).
-     * @param pass  the pass index.
-     */
-    public void drawItem(Graphics2D g2,
-                         CategoryItemRendererState state,
-                         Rectangle2D dataArea,
-                         CategoryPlot plot,
-                         CategoryAxis domainAxis,
-                         ValueAxis rangeAxis,
-                         CategoryDataset data,
-                         int row,
-                         int column,
-                         int pass) {
-
-        // defensive check
-        if (!(data instanceof StatisticalCategoryDataset)) {
-            throw new IllegalArgumentException(
-                "Requires StatisticalCategoryDataset.");
-        }
-        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
-
-        PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
-        }
-    }
+    
                 
     /**
      * Draws an item for a plot with a horizontal orientation.

896: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-25_Buggy\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-25_Manual\\src\\org\\jfree\\chart\\renderer\\category\\StatisticalBarRenderer.java"	
@@ -256,6 +256,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -312,7 +315,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -341,6 +346,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(lowVal, rectY + rectHeight * 0.25, 
                                      lowVal, rectY + rectHeight * 0.75);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);
@@ -400,6 +406,9 @@ public class StatisticalBarRenderer extends BarRenderer
 
         // BAR Y
         Number meanValue = dataset.getMeanValue(row, column);
+        if (meanValue == null) {
+            return;
+        }
 
         double value = meanValue.doubleValue();
         double base = 0.0;
@@ -456,7 +465,9 @@ public class StatisticalBarRenderer extends BarRenderer
         }
 
         // standard deviation lines
-            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
+        Number n = dataset.getStdDevValue(row, column);
+        if (n != null) {
+            double valueDelta = n.doubleValue();
             double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
                     + valueDelta, dataArea, yAxisLocation);
             double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue() 
@@ -484,6 +495,7 @@ public class StatisticalBarRenderer extends BarRenderer
             line = new Line2D.Double(rectX + rectWidth / 2.0d - 5.0d, lowVal,
                                      rectX + rectWidth / 2.0d + 5.0d, lowVal);
             g2.draw(line);
+        }
         
         CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                 column);

897: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-26_Auto\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,14 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
-                EntityCollection entities = owner.getEntityCollection();
+                if (owner != null) {
+	EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+	}
+
         }
         return state;
 

898: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-26_Buggy\\src\\org\\jfree\\chart\\axis\\Axis.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-26_Manual\\src\\org\\jfree\\chart\\axis\\Axis.java"	
@@ -1189,11 +1189,13 @@ public abstract class Axis implements Cloneable, Serializable {
         }
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
+            if (owner != null) {
                 EntityCollection entities = owner.getEntityCollection();
                 if (entities != null) {
                     entities.add(new AxisLabelEntity(this, hotspot, 
                             this.labelToolTip, this.labelURL));
                 }
+            }
         }
         return state;
 

899: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-3_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -561,7 +561,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
      *              permitted).
      */
     public void add(TimeSeriesDataItem item) {
-        add(item, true);
+        updateBoundsForRemovedItem(item);
+	add(item, true);
     }
 
     /**

900: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-3_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-3_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -1054,6 +1054,8 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+        copy.minY = Double.NaN;
+        copy.maxY = Double.NaN;
         copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {

901: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-4_Auto\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,7 +4490,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
-                    Collection c = r.getAnnotations();
+                    if (r != null) {
+	Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
                         XYAnnotation a = (XYAnnotation) i.next();
@@ -4498,6 +4499,8 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+	}
+
             }
         }
 

902: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-4_Buggy\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-4_Manual\\src\\org\\jfree\\chart\\plot\\XYPlot.java"	
@@ -4490,6 +4490,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                     }
                 }
                 
+                if (r != null) {
                     Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
@@ -4498,6 +4499,7 @@ public class XYPlot extends Plot implements ValueAxisPlot, Pannable,
                             includedAnnotations.add(a);
                         }
                     }
+                }
             }
         }
 

903: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-5_Auto\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -524,7 +524,7 @@ public class XYSeries extends Series implements Cloneable, Serializable {
      * @since 1.0.10
      */
     public XYDataItem addOrUpdate(double x, double y) {
-        return addOrUpdate(new Double(x), new Double(y));
+        return addOrUpdate(new Double(getItemCount()), new Double(y));
     }
 
     /**

904: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-5_Buggy\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-5_Manual\\src\\org\\jfree\\data\\xy\\XYSeries.java"	
@@ -541,11 +541,15 @@ public class XYSeries extends Series implements Cloneable, Serializable {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+        if (this.allowDuplicateXValues) {
+            add(x, y);
+            return null;
+        }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();

905: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-7_Auto\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,7 +297,7 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxStartIndex).getPeriod().getStart()
                 .getTime();
             long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                 .getTime();

906: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-7_Buggy\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-7_Manual\\src\\org\\jfree\\data\\time\\TimePeriodValues.java"	
@@ -297,9 +297,9 @@ public class TimePeriodValues extends Series implements Serializable {
         }
         
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
                 .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
                 .getTime();
             long maxMiddle = s + (e - s) / 2;
             if (middle > maxMiddle) {

907: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-8_Buggy\\src\\org\\jfree\\data\\time\\Week.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-8_Auto\\src\\org\\jfree\\data\\time\\Week.java"	
@@ -172,7 +172,7 @@ public class Week extends RegularTimePeriod implements Serializable {
      */
     public Week(Date time, TimeZone zone) {
         // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        this(time, zone, Locale.getDefault());
     }
 
     /**

908: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-8_Buggy\\src\\org\\jfree\\data\\time\\Week.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-8_Manual\\src\\org\\jfree\\data\\time\\Week.java"	
@@ -172,7 +172,7 @@ public class Week extends RegularTimePeriod implements Serializable {
      */
     public Week(Date time, TimeZone zone) {
         // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        this(time, zone, Locale.getDefault());
     }
 
     /**

909: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-9_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-9_Auto\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -941,7 +941,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             endIndex = -(endIndex + 1); // this is first item AFTER end period
             endIndex = endIndex - 1;    // so this is last item BEFORE end
         }
-        if (endIndex < 0) {
+        if (endIndex < startIndex || (endIndex < 0)) {
             emptyRange = true;
         }
         if (emptyRange) {

910: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-9_Buggy\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Chart-9_Manual\\src\\org\\jfree\\data\\time\\TimeSeries.java"	
@@ -941,7 +941,7 @@ public class TimeSeries extends Series implements Cloneable, Serializable {
             endIndex = -(endIndex + 1); // this is first item AFTER end period
             endIndex = endIndex - 1;    // so this is last item BEFORE end
         }
-        if (endIndex < 0) {
+        if ((endIndex < 0)  || (endIndex < startIndex)) {
             emptyRange = true;
         }
         if (emptyRange) {

911: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-102_Buggy\\src\\com\\google\\javascript\\jscomp\\Normalize.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-102_Auto\\src\\com\\google\\javascript\\jscomp\\Normalize.java"	
@@ -86,12 +86,14 @@ class Normalize implements CompilerPass, Callback {
   @Override
   public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
-    if (MAKE_LOCAL_NAMES_UNIQUE) {
+    
+    removeDuplicateDeclarations(root);
+	if (MAKE_LOCAL_NAMES_UNIQUE) {
       MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
       NodeTraversal t = new NodeTraversal(compiler, renamer);
       t.traverseRoots(externs, root);
     }
-    removeDuplicateDeclarations(root);
+
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
   }

912: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-102_Buggy\\src\\com\\google\\javascript\\jscomp\\Normalize.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-102_Manual\\src\\com\\google\\javascript\\jscomp\\Normalize.java"	
@@ -86,12 +86,12 @@ class Normalize implements CompilerPass, Callback {
   @Override
   public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
+    removeDuplicateDeclarations(root);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
       MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
       NodeTraversal t = new NodeTraversal(compiler, renamer);
       t.traverseRoots(externs, root);
     }
-    removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
   }

913: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-10_Auto\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

914: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-10_Buggy\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-10_Manual\\src\\com\\google\\javascript\\jscomp\\NodeUtil.java"	
@@ -1414,7 +1414,7 @@ public final class NodeUtil {
 
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }

915: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-115_Auto\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -695,7 +695,7 @@ class FunctionInjector {
     Node block = fnNode.getLastChild();
 
     boolean hasSideEffects = false;
-    if (block.hasChildren()) {
+    if ((block.hasChildren()) && (!block.hasChildren())) {
       Preconditions.checkState(block.hasOneChild());
       Node stmt = block.getFirstChild();
       if (stmt.isReturn()) {

916: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-115_Buggy\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-115_Manual\\src\\com\\google\\javascript\\jscomp\\FunctionInjector.java"	
@@ -694,14 +694,6 @@ class FunctionInjector {
 
     Node block = fnNode.getLastChild();
 
-    boolean hasSideEffects = false;
-    if (block.hasChildren()) {
-      Preconditions.checkState(block.hasOneChild());
-      Node stmt = block.getFirstChild();
-      if (stmt.isReturn()) {
-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
-      }
-    }
     // CALL NODE: [ NAME, ARG1, ARG2, ... ]
     Node cArg = callNode.getFirstChild().getNext();
 
@@ -727,9 +719,6 @@ class FunctionInjector {
       // For each named parameter check if a mutable argument use more than one.
       if (fnParam != null) {
         if (cArg != null) {
-          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
-          }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a
           // parameter reference will be in a loop.

917: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-117_Auto\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -728,7 +728,21 @@ class TypeValidator {
     // If we're analyzing a GETPROP, the property may be inherited by the
     // prototype chain. So climb the prototype chain and find out where
     // the property was originally defined.
-    if (n.isGetProp()) {
+    
+
+    JSType type = getJSType(n);
+    if (dereference) {
+      ObjectType dereferenced = type.dereference();
+      if (dereferenced != null) {
+        type = dereferenced;
+      }
+    }
+    if (type.isFunctionPrototypeType() ||
+        (type.toObjectType() != null &&
+         type.toObjectType().getConstructor() != null)) {
+      return type.toString();
+    }
+	if (n.isGetProp()) {
       ObjectType objectType = getJSType(n.getFirstChild()).dereference();
       if (objectType != null) {
         String propName = n.getLastChild().getString();
@@ -753,18 +767,6 @@ class TypeValidator {
       }
     }
 
-    JSType type = getJSType(n);
-    if (dereference) {
-      ObjectType dereferenced = type.dereference();
-      if (dereferenced != null) {
-        type = dereferenced;
-      }
-    }
-    if (type.isFunctionPrototypeType() ||
-        (type.toObjectType() != null &&
-         type.toObjectType().getConstructor() != null)) {
-      return type.toString();
-    }
     String qualifiedName = n.getQualifiedName();
     if (qualifiedName != null) {
       return qualifiedName;

918: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-117_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-117_Manual\\src\\com\\google\\javascript\\jscomp\\TypeValidator.java"	
@@ -722,8 +722,20 @@ class TypeValidator {
    *     to an Object type, if possible.
    */
   String getReadableJSTypeName(Node n, boolean dereference) {
+    JSType type = getJSType(n);
+    if (dereference) {
+      ObjectType dereferenced = type.dereference();
+      if (dereferenced != null) {
+        type = dereferenced;
+      }
+    }
 
     // The best type name is the actual type name.
+    if (type.isFunctionPrototypeType() ||
+        (type.toObjectType() != null &&
+         type.toObjectType().getConstructor() != null)) {
+      return type.toString();
+    }
 
     // If we're analyzing a GETPROP, the property may be inherited by the
     // prototype chain. So climb the prototype chain and find out where
@@ -753,18 +765,6 @@ class TypeValidator {
       }
     }
 
-    JSType type = getJSType(n);
-    if (dereference) {
-      ObjectType dereferenced = type.dereference();
-      if (dereferenced != null) {
-        type = dereferenced;
-      }
-    }
-    if (type.isFunctionPrototypeType() ||
-        (type.toObjectType() != null &&
-         type.toObjectType().getConstructor() != null)) {
-      return type.toString();
-    }
     String qualifiedName = n.getQualifiedName();
     if (qualifiedName != null) {
       return qualifiedName;

919: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-11_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,7 +1311,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
+    } else if (n.getJSType() == null && parent.isAssign()) {
       return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {

920: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-11_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-11_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1311,8 +1311,6 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);

921: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-13_Buggy\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-13_Auto\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
@@ -123,8 +123,10 @@ class PeepholeOptimizationsPass
     do {
       Node c = node.getFirstChild();
       while(c != null) {
-        traverse(c);
+        
         Node next = c.getNext();
+	traverse(c);
+
         c = next;
       }
 

922: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-13_Buggy\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-13_Manual\\src\\com\\google\\javascript\\jscomp\\PeepholeOptimizationsPass.java"	
@@ -123,8 +123,8 @@ class PeepholeOptimizationsPass
     do {
       Node c = node.getFirstChild();
       while(c != null) {
-        traverse(c);
         Node next = c.getNext();
+        traverse(c);
         c = next;
       }
 

923: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-19_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-19_Auto\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -172,8 +172,7 @@ public abstract class ChainableReverseAbstractInterpreter
         // "this" references aren't currently modeled in the CFG.
 
       default:
-        throw new IllegalArgumentException("Node cannot be refined. \n" +
-            node.toStringTree());
+        
     }
   }
 

924: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-19_Buggy\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-19_Manual\\src\\com\\google\\javascript\\jscomp\\type\\ChainableReverseAbstractInterpreter.java"	
@@ -169,7 +169,9 @@ public abstract class ChainableReverseAbstractInterpreter
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
 
+      case Token.THIS:
         // "this" references aren't currently modeled in the CFG.
+        break;
 
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +

925: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-21_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -114,7 +114,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
       if (isResultUsed) {
         return;
       }
-      if (n == parent.getLastChild()) {
+      if ((n == parent.getLastChild()) && (n.isExprResult())) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA) continue;

926: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-21_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-21_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,7 +98,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (n.isExprResult()) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
     }
 
@@ -110,24 +110,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
-    if (parent.getType() == Token.COMMA) {
-      if (isResultUsed) {
-        return;
-      }
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
-        return;
-      }
-    }
-    if (
+    if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {

927: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-22_Auto\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -108,7 +108,7 @@ final class CheckSideEffects extends AbstractPostOrderCallback
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
+      if ((n == parent.getLastChild()) && !(parent.getType() == Token.COMMA)) {
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA)

928: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-22_Buggy\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-22_Manual\\src\\com\\google\\javascript\\jscomp\\CheckSideEffects.java"	
@@ -98,44 +98,20 @@ final class CheckSideEffects extends AbstractPostOrderCallback
     // Do not try to remove a block or an expr result. We already handle
     // these cases when we visit the child, and the peephole passes will
     // fix up the tree in more clever ways when these are removed.
-    if (parent.getType() == Token.COMMA) {
-      Node gramps = parent.getParent();
-      if (gramps.isCall() && parent == gramps.getFirstChild()) {
-        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
+    if (n.isExprResult() || n.isBlock()) {
       return;
-        }
     }
 
     // This no-op statement was there so that JSDoc information could
     // be attached to the name. This check should not complain about it.
-      if (n == parent.getLastChild()) {
-        for (Node an : parent.getAncestors()) {
-          int ancestorType = an.getType();
-          if (ancestorType == Token.COMMA)
-            continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
-            return;
-          else
-            break;
-        }
-      }
-    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
-           n == parent.getFirstChild().getNext().getNext())) {
-      } else {
+    if (n.isQualifiedName() && n.getJSDocInfo() != null) {
       return;
-      }
     }
 
     boolean isResultUsed = NodeUtil.isExpressionResultUsed(n);
     boolean isSimpleOp = NodeUtil.isSimpleOperatorType(n.getType());
     if (!isResultUsed &&
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
-        return;
-      } else if (n.isExprResult()) {
-        return;
-      }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
         msg = "Is there a missing '+' on the previous line?";

929: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-2_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1571,7 +1571,8 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
     Set<String> currentPropertyNames;
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
-      currentPropertyNames = implicitProto.getOwnPropertyNames();
+      if (implicitProto != null) {
+	currentPropertyNames = implicitProto.getOwnPropertyNames();
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {
@@ -1585,6 +1586,8 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       }
       currentProperties.put(name, interfaceType);
     }
+	}
+
     for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
       checkInterfaceConflictProperties(t, n, functionName, properties,
           currentProperties, iType);

930: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-2_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-2_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1569,9 +1569,13 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
       ObjectType interfaceType) {
     ObjectType implicitProto = interfaceType.getImplicitPrototype();
     Set<String> currentPropertyNames;
+    if (implicitProto == null) {
       // This can be the case if interfaceType is proxy to a non-existent
       // object (which is a bad type annotation, but shouldn't crash).
+      currentPropertyNames = ImmutableSet.of();
+    } else {
       currentPropertyNames = implicitProto.getOwnPropertyNames();
+    }
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {

931: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-35_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-35_Auto\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1119,7 +1119,7 @@ class TypeInference
     ObjectType constraintObj =
         ObjectType.cast(constraint.restrictByNotNullOrUndefined());
     if (constraintObj != null && constraintObj.isRecordType()) {
-      ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
+      ObjectType objType = ObjectType.cast(type.collapseUnion());
       if (objType != null) {
         for (String prop : constraintObj.getOwnPropertyNames()) {
           JSType propType = constraintObj.getPropertyType(prop);

932: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-35_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-35_Manual\\src\\com\\google\\javascript\\jscomp\\TypeInference.java"	
@@ -1118,21 +1118,8 @@ class TypeInference
 
     ObjectType constraintObj =
         ObjectType.cast(constraint.restrictByNotNullOrUndefined());
-    if (constraintObj != null && constraintObj.isRecordType()) {
-      ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
-      if (objType != null) {
-        for (String prop : constraintObj.getOwnPropertyNames()) {
-          JSType propType = constraintObj.getPropertyType(prop);
-          if (!objType.isPropertyTypeDeclared(prop)) {
-            JSType typeToInfer = propType;
-            if (!objType.hasProperty(prop)) {
-              typeToInfer =
-                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
-            }
-            objType.defineInferredProperty(prop, typeToInfer, null);
-          }
-        }
-      }
+    if (constraintObj != null) {
+      type.matchConstraint(constraintObj);
     }
   }
 

933: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-38_Auto\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if (x<=0 && prev == '-') {
       add(" ");
     }
 

934: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-38_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-38_Manual\\src\\com\\google\\javascript\\jscomp\\CodeConsumer.java"	
@@ -242,7 +242,7 @@ abstract class CodeConsumer {
     // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if ((x < 0 || negativeZero) && prev == '-') {
       add(" ");
     }
 

935: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-40_Buggy\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-40_Auto\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
@@ -632,7 +632,7 @@ final class NameAnalyzer implements CompilerPass {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
+          JsName name = getName(ns.name, true);
           if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));

936: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-40_Buggy\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-40_Manual\\src\\com\\google\\javascript\\jscomp\\NameAnalyzer.java"	
@@ -632,11 +632,9 @@ final class NameAnalyzer implements CompilerPass {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
-          if (name != null) {
+          JsName name = getName(ns.name, true);
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
-          }
         }
       }
     }

937: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-46_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,7 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
+  
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

938: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-46_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-46_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\RecordType.java"	
@@ -137,22 +137,6 @@ class RecordType extends PrototypeObjectType {
         propertyNode);
   }
 
-  @Override
-  public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
   JSType getGreatestSubtypeHelper(JSType that) {
     if (that.isRecordType()) {
       RecordType thatRecord = that.toMaybeRecordType();

939: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-4_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-4_Auto\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
@@ -187,7 +187,7 @@ class NamedType extends ProxyObjectType {
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 

940: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-4_Buggy\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-4_Manual\\src\\com\\google\\javascript\\rhino\\jstype\\NamedType.java"	
@@ -187,7 +187,7 @@ class NamedType extends ProxyObjectType {
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 
@@ -199,7 +199,7 @@ class NamedType extends ProxyObjectType {
     }
 
     resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectInheritanceCycle()) {
       handleTypeCycle(t);
     }
 

941: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-62_Auto\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno<=sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

942: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-62_Buggy\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-62_Manual\\src\\com\\google\\javascript\\jscomp\\LightweightMessageFormatter.java"	
@@ -95,7 +95,7 @@ public class LightweightMessageFormatter extends AbstractMessageFormatter {
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {

943: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-66_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-66_Auto\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -1910,7 +1910,7 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
    * @return a number between 0.0 and 100.0
    */
   double getTypedPercent() {
-    int total = nullCount + unknownCount + typedCount;
+    int total = this.noTypeCheckSection + unknownCount + typedCount;
     if (total == 0) {
       return 0.0;
     } else {

944: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-66_Buggy\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-66_Manual\\src\\com\\google\\javascript\\jscomp\\TypeCheck.java"	
@@ -513,7 +513,9 @@ public class TypeCheck implements NodeTraversal.Callback, CompilerPass {
         // Object literal keys are handled with OBJECTLIT
         if (!NodeUtil.isObjectLitKey(n, n.getParent())) {
           ensureTyped(t, n, STRING_TYPE);
+        } else {
           // Object literal keys are not typeable
+          typeable = false;
         }
         break;
 

945: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-70_Buggy\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-70_Auto\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
@@ -1742,7 +1742,7 @@ final class TypedScopeCreator implements ScopeCreator {
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                  jsDocParameter.getJSType(), false);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);

946: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-70_Buggy\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-70_Manual\\src\\com\\google\\javascript\\jscomp\\TypedScopeCreator.java"	
@@ -1742,7 +1742,7 @@ final class TypedScopeCreator implements ScopeCreator {
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                  jsDocParameter.getJSType(), false);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);

947: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-73_Auto\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c<0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

948: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-73_Buggy\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Closure-73_Manual\\src\\com\\google\\javascript\\jscomp\\CodeGenerator.java"	
@@ -1042,7 +1042,7 @@ class CodeGenerator {
             // No charsetEncoder provided - pass straight latin characters
             // through, and escape the rest.  Doing the explicit character
             // check is measurably faster than using the CharsetEncoder.
-            if (c > 0x1f && c <= 0x7f) {
+            if (c > 0x1f && c < 0x7f) {
               sb.append(c);
             } else {
               // Other characters can be misinterpreted by some js parsers,

949: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-10_Auto\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -304,13 +304,7 @@ public class FastDateParser implements DateParser, Serializable {
         boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
+            
             wasWhite= false;
             switch(c) {
             case '\'':

950: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-10_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-10_Manual\\src\\org\\apache\\commons\\lang3\\time\\FastDateParser.java"	
@@ -301,17 +301,8 @@ public class FastDateParser implements DateParser, Serializable {
      * @return The <code>StringBuilder</code>
      */
     private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {
-        boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
-            wasWhite= false;
             switch(c) {
             case '\'':
                 if(unquote) {

951: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-13_Buggy\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-13_Auto\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
@@ -251,23 +251,7 @@ public class SerializationUtils {
 
         }
 
-        /**
-         * Overriden version that uses the parametrized <code>ClassLoader</code> or the <code>ClassLoader</code>
-         * of the current <code>Thread</code> to resolve the class.
-         * @param desc An instance of class <code>ObjectStreamClass</code>.
-         * @return A <code>Class</code> object corresponding to <code>desc</code>.
-         * @throws IOException Any of the usual Input/Output exceptions.
-         * @throws ClassNotFoundException If class of a serialized object cannot be found.
-         */
-        @Override
-        protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
-            String name = desc.getName();
-            try {
-                return Class.forName(name, false, classLoader);
-            } catch (ClassNotFoundException ex) {
-                    return Class.forName(name, false, Thread.currentThread().getContextClassLoader());
-            }
-        }
+        
 
     }
 

952: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-13_Buggy\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-13_Manual\\src\\org\\apache\\commons\\lang3\\SerializationUtils.java"	
@@ -236,6 +236,8 @@ public class SerializationUtils {
      * class here is a workaround, see the JIRA issue LANG-626. </p>
      */
      static class ClassLoaderAwareObjectInputStream extends ObjectInputStream {
+        private static final Map<String, Class<?>> primitiveTypes = 
+                new HashMap<String, Class<?>>();
         private ClassLoader classLoader;
         
         /**
@@ -249,6 +251,15 @@ public class SerializationUtils {
             super(in);
             this.classLoader = classLoader;
 
+            primitiveTypes.put("byte", byte.class);
+            primitiveTypes.put("short", short.class);
+            primitiveTypes.put("int", int.class);
+            primitiveTypes.put("long", long.class);
+            primitiveTypes.put("float", float.class);
+            primitiveTypes.put("double", double.class);
+            primitiveTypes.put("boolean", boolean.class);
+            primitiveTypes.put("char", char.class);
+            primitiveTypes.put("void", void.class);
         }
 
         /**
@@ -265,7 +276,15 @@ public class SerializationUtils {
             try {
                 return Class.forName(name, false, classLoader);
             } catch (ClassNotFoundException ex) {
+                try {
                     return Class.forName(name, false, Thread.currentThread().getContextClassLoader());
+                } catch (ClassNotFoundException cnfe) {
+                    Class<?> cls = primitiveTypes.get(name);
+                    if (cls != null)
+                        return cls;
+                    else
+                        throw cnfe;
+                }
             }
         }
 

953: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-18_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-18_Auto\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
@@ -492,7 +492,7 @@ public class FastDateFormat extends Format {
                 rule = new TextField(Calendar.ERA, ERAs);
                 break;
             case 'y': // year (number)
-                if (tokenLen >= 4) {
+                if ((tokenLen >= 4) || !(tokenLen == 2)) {
                     rule = selectNumberRule(Calendar.YEAR, tokenLen);
                 } else {
                     rule = TwoDigitYearField.INSTANCE;

954: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-18_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-18_Manual\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
@@ -492,10 +492,10 @@ public class FastDateFormat extends Format {
                 rule = new TextField(Calendar.ERA, ERAs);
                 break;
             case 'y': // year (number)
-                if (tokenLen >= 4) {
-                    rule = selectNumberRule(Calendar.YEAR, tokenLen);
-                } else {
+                if (tokenLen == 2) {
                     rule = TwoDigitYearField.INSTANCE;
+                } else {
+                    rule = selectNumberRule(Calendar.YEAR, tokenLen < 4 ? 4 : tokenLen);
                 }
                 break;
             case 'M': // month in year (text and number)

955: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-20_Auto\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3295,7 +3295,7 @@ public class StringUtils {
             return EMPTY;
         }
         
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
+        StringBuilder buf = new StringBuilder();
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

956: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-20_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-20_Manual\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3295,7 +3295,7 @@ public class StringUtils {
             return EMPTY;
         }
         
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {
@@ -3380,7 +3380,7 @@ public class StringUtils {
             return EMPTY;
         }
 
-        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
+        StringBuilder buf = new StringBuilder(noOfItems * 16);
 
         for (int i = startIndex; i < endIndex; i++) {
             if (i > startIndex) {

957: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-22_Auto\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -581,7 +581,7 @@ public final class Fraction extends Number implements Comparable<Fraction> {
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(u)==1 || Math.abs(v) <= 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

958: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-22_Buggy\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-22_Manual\\src\\org\\apache\\commons\\lang3\\math\\Fraction.java"	
@@ -580,8 +580,14 @@ public final class Fraction extends Number implements Comparable<Fraction> {
      */
     private static int greatestCommonDivisor(int u, int v) {
         // From Commons Math:
+        if ((u == 0) || (v == 0)) {
+            if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {
+                throw new ArithmeticException("overflow: gcd is 2^31");
+            }
+            return Math.abs(u) + Math.abs(v);
+        }
         //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
+        if (Math.abs(u) == 1 || Math.abs(v) == 1) {
             return 1;
         }
         // keep u and v negative, as negative integers range down to

959: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-24_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-24_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -1410,7 +1410,7 @@ public class NumberUtils {
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
                 // not allowing L with an exponent or decimal point
-                return foundDigit && !hasExp;
+                return (foundDigit && !hasExp) && !(hasDecPoint || hasExp);
             }
             // last character is illegal
             return false;

960: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-24_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-24_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -1410,7 +1410,7 @@ public class NumberUtils {
             if (chars[i] == 'l'
                 || chars[i] == 'L') {
                 // not allowing L with an exponent or decimal point
-                return foundDigit && !hasExp;
+                return foundDigit && !hasExp && !hasDecPoint;
             }
             // last character is illegal
             return false;

961: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-26_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-26_Auto\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
@@ -817,7 +817,7 @@ public class FastDateFormat extends Format {
      * @return the formatted string
      */
     public String format(Date date) {
-        Calendar c = new GregorianCalendar(mTimeZone);
+        Calendar c = new GregorianCalendar(mTimeZone, this.mLocale);
         c.setTime(date);
         return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();
     }

962: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-26_Buggy\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-26_Manual\\src\\org\\apache\\commons\\lang3\\time\\FastDateFormat.java"	
@@ -817,7 +817,7 @@ public class FastDateFormat extends Format {
      * @return the formatted string
      */
     public String format(Date date) {
-        Calendar c = new GregorianCalendar(mTimeZone);
+        Calendar c = new GregorianCalendar(mTimeZone, mLocale);
         c.setTime(date);
         return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();
     }

963: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-27_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -485,7 +485,7 @@ public class NumberUtils {
             }
             mant = str.substring(0, decPos);
         } else {
-            if (expPos > -1) {
+            if (expPos<-1) {
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;

964: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-27_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-27_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -476,7 +476,7 @@ public class NumberUtils {
         if (decPos > -1) {
 
             if (expPos > -1) {
-                if (expPos < decPos) {
+                if (expPos < decPos || expPos > str.length()) {
                     throw new NumberFormatException(str + " is not a valid number.");
                 }
                 dec = str.substring(decPos + 1, expPos);
@@ -486,6 +486,9 @@ public class NumberUtils {
             mant = str.substring(0, decPos);
         } else {
             if (expPos > -1) {
+                if (expPos > str.length()) {
+                    throw new NumberFormatException(str + " is not a valid number.");
+                }
                 mant = str.substring(0, expPos);
             } else {
                 mant = str;

965: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-33_Buggy\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-33_Auto\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
@@ -907,7 +907,9 @@ public class ClassUtils {
         }
         Class<?>[] classes = new Class[array.length];
         for (int i = 0; i < array.length; i++) {
-            classes[i] = array[i].getClass();
+            if (classes == null) continue;
+	if (array[i] == null) continue;
+	classes[i] = array[i].getClass();
         }
         return classes;
     }

966: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-33_Buggy\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-33_Manual\\src\\org\\apache\\commons\\lang3\\ClassUtils.java"	
@@ -907,7 +907,7 @@ public class ClassUtils {
         }
         Class<?>[] classes = new Class[array.length];
         for (int i = 0; i < array.length; i++) {
-            classes[i] = array[i].getClass();
+            classes[i] = array[i] == null ? null : array[i].getClass();
         }
         return classes;
     }

967: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-39_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-39_Auto\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3673,7 +3673,9 @@ public class StringUtils {
 
         // count the replacement text elements that are larger than their corresponding text being replaced
         for (int i = 0; i < searchList.length; i++) {
-            int greater = replacementList[i].length() - searchList[i].length();
+            if (replacementList[i] == null) continue;
+	if (searchList[i] == null) continue;
+	int greater = replacementList[i].length() - searchList[i].length();
             if (greater > 0) {
                 increase += 3 * greater; // assume 3 matches
             }

968: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-39_Buggy\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-39_Manual\\src\\org\\apache\\commons\\lang3\\StringUtils.java"	
@@ -3673,6 +3673,9 @@ public class StringUtils {
 
         // count the replacement text elements that are larger than their corresponding text being replaced
         for (int i = 0; i < searchList.length; i++) {
+            if (searchList[i] == null || replacementList[i] == null) {
+                continue;
+            }
             int greater = replacementList[i].length() - searchList[i].length();
             if (greater > 0) {
                 increase += 3 * greater; // assume 3 matches

969: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-41_Buggy\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-41_Auto\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
@@ -229,7 +229,7 @@ public class ClassUtils {
         if (cls == null) {
             return StringUtils.EMPTY;
         }
-        return getPackageName(cls.getName());
+        return getPackageCanonicalName(cls.getName());
     }
 
     /**

970: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-41_Buggy\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-41_Manual\\src\\org\\apache\\commons\\lang\\ClassUtils.java"	
@@ -188,10 +188,23 @@ public class ClassUtils {
             return StringUtils.EMPTY;
         }
 
+        StringBuffer arrayPrefix = new StringBuffer();
 
         // Handle array encoding
+        if (className.startsWith("[")) {
+            while (className.charAt(0) == '[') {
+                className = className.substring(1);
+                arrayPrefix.append("[]");
+            }
             // Strip Object type encoding
+            if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
+                className = className.substring(1, className.length() - 1);
+            }
+        }
 
+        if (reverseAbbreviationMap.containsKey(className)) {
+            className = reverseAbbreviationMap.get(className);
+        }
 
         int lastDotIdx = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
         int innerIdx = className.indexOf(
@@ -200,7 +213,7 @@ public class ClassUtils {
         if (innerIdx != -1) {
             out = out.replace(INNER_CLASS_SEPARATOR_CHAR, PACKAGE_SEPARATOR_CHAR);
         }
-        return out;
+        return out + arrayPrefix;
     }
 
     // Package name
@@ -242,12 +255,18 @@ public class ClassUtils {
      * @return the package name or an empty string
      */
     public static String getPackageName(String className) {
-        if (className == null) {
+        if (className == null || className.length() == 0) {
             return StringUtils.EMPTY;
         }
 
         // Strip array encoding
+        while (className.charAt(0) == '[') {
+            className = className.substring(1);
+        }
         // Strip Object type encoding
+        if (className.charAt(0) == 'L' && className.charAt(className.length() - 1) == ';') {
+            className = className.substring(1);
+        }
 
         int i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);
         if (i == -1) {

971: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-43_Auto\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -155,7 +155,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         while (pos.getIndex() < pattern.length()) {
             switch (c[pos.getIndex()]) {
             case QUOTE:
-                appendQuotedString(pattern, pos, stripCustom, true);
+                appendQuotedString(pattern, pos, stripCustom, false);
                 break;
             case START_FE:
                 fmtCount++;

972: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-43_Buggy\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-43_Manual\\src\\org\\apache\\commons\\lang\\text\\ExtendedMessageFormat.java"	
@@ -419,6 +419,7 @@ public class ExtendedMessageFormat extends MessageFormat {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;

973: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-44_Buggy\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-44_Auto\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
@@ -190,9 +190,9 @@ public final class NumberUtils {
             switch (lastChar) {
                 case 'l' :
                 case 'L' :
-                    if (dec == null
+                    if (dec != numeric || (dec == null
                         && exp == null
-                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

974: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-44_Buggy\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-44_Manual\\src\\org\\apache\\commons\\lang\\NumberUtils.java"	
@@ -142,6 +142,9 @@ public final class NumberUtils {
         if (val.length() == 0) {
             throw new NumberFormatException("\"\" is not a valid number.");
         }
+        if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {
+            throw new NumberFormatException(val + " is not a valid number.");
+        }
         if (val.startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 

975: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-45_Buggy\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-45_Auto\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
@@ -619,7 +619,7 @@ public class WordUtils {
             upper = str.length();
         }
         // if upper is less than lower, raise it to lower
-        if (upper < lower) {
+        if ((upper < lower) && (upper != str.length())) {
             upper = lower;
         }
 

976: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-45_Buggy\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-45_Manual\\src\\org\\apache\\commons\\lang\\WordUtils.java"	
@@ -613,6 +613,9 @@ public class WordUtils {
 
         // if the lower value is greater than the length of the string,
         // set to the length of the string
+        if (lower > str.length()) {
+            lower = str.length();    
+        }
         // if the upper value is -1 (i.e. no limit) or is greater
         // than the length of the string, set to the length of the string
         if (upper == -1 || upper > str.length()) {

977: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-47_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-47_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1183,7 +1183,8 @@ public class StrBuilder implements Cloneable {
         if (width > 0) {
             ensureCapacity(size + width);
             String str = (obj == null ? getNullText() : obj.toString());
-            int strLen = str.length();
+            if (str == null) str = new String();
+ int strLen = str.length();
             if (strLen >= width) {
                 str.getChars(strLen - width, strLen, buffer, size);
             } else {

978: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-47_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-47_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1183,6 +1183,9 @@ public class StrBuilder implements Cloneable {
         if (width > 0) {
             ensureCapacity(size + width);
             String str = (obj == null ? getNullText() : obj.toString());
+            if (str == null) {
+                str = "";
+            }
             int strLen = str.length();
             if (strLen >= width) {
                 str.getChars(strLen - width, strLen, buffer, size);
@@ -1227,6 +1230,9 @@ public class StrBuilder implements Cloneable {
         if (width > 0) {
             ensureCapacity(size + width);
             String str = (obj == null ? getNullText() : obj.toString());
+            if (str == null) {
+                str = "";
+            }
             int strLen = str.length();
             if (strLen >= width) {
                 str.getChars(0, width, buffer, size);

979: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-50_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-50_Auto\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -466,7 +466,7 @@ public class FastDateFormat extends Format {
             key = new Pair(key, locale);
         }
 
-        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
+        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
         if (format == null) {
             if (locale == null) {
                 locale = Locale.getDefault();

980: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-50_Buggy\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-50_Manual\\src\\org\\apache\\commons\\lang\\time\\FastDateFormat.java"	
@@ -282,16 +282,14 @@ public class FastDateFormat extends Format {
             key = new Pair(key, timeZone);
         }
 
-        if (locale != null) {
-            key = new Pair(key, locale);
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
 
+        key = new Pair(key, locale);
 
         FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);
                 String pattern = formatter.toPattern();
@@ -462,15 +460,13 @@ public class FastDateFormat extends Format {
         if (timeZone != null) {
             key = new Pair(key, timeZone);
         }
-        if (locale != null) {
-            key = new Pair(key, locale);
+        if (locale == null) {
+            locale = Locale.getDefault();
         }
+        key = new Pair(key, locale);
 
         FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
-                locale = Locale.getDefault();
-            }
             try {
                 SimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateTimeInstance(dateStyle, timeStyle,
                         locale);

981: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-51_Auto\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -679,6 +679,8 @@ public class BooleanUtils {
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
                 }
+	 return false;
+
             }
             case 4: {
                 char ch = str.charAt(0);

982: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-51_Buggy\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-51_Manual\\src\\org\\apache\\commons\\lang\\BooleanUtils.java"	
@@ -679,6 +679,7 @@ public class BooleanUtils {
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
                 }
+                return false;
             }
             case 4: {
                 char ch = str.charAt(0);

983: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-57_Auto\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,7 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        return availableLocaleList().contains(locale);
     }
 
     //
984: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-57_Buggy\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-57_Manual\\src\\org\\apache\\commons\\lang\\LocaleUtils.java"	
@@ -220,7 +220,7 @@ public class LocaleUtils {
      * @return true if the locale is a known locale
      */
     public static boolean isAvailableLocale(Locale locale) {
-        return cAvailableLocaleSet.contains(locale);
+        return availableLocaleList().contains(locale);
     }
 
     //
985: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-58_Auto\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -449,10 +449,10 @@ public class NumberUtils {
             switch (lastChar) {
                 case 'l' :
                 case 'L' :
-                    if (dec == null
+                    if (dec != numeric || (dec == null
                         && exp == null
                         && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0))))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

986: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-58_Buggy\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-58_Manual\\src\\org\\apache\\commons\\lang\\math\\NumberUtils.java"	
@@ -451,8 +451,7 @@ public class NumberUtils {
                 case 'L' :
                     if (dec == null
                         && exp == null
-                        && isDigits(numeric.substring(1))
-                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
+                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
                         try {
                             return createLong(numeric);
                         } catch (NumberFormatException nfe) {

987: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-59_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

988: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-59_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-59_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -881,7 +881,7 @@ public class StrBuilder implements Cloneable {
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);

989: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-60_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-60_Auto\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1111,7 +1111,7 @@ public class StrBuilder implements Cloneable {
      * @throws IndexOutOfBoundsException if any index is invalid
      */
     private void deleteImpl(int startIndex, int endIndex, int len) {
-        System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);
+        System.arraycopy(buffer, endIndex, buffer, startIndex, capacity() - endIndex);
         size -= len;
     }
 

990: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-60_Buggy\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-60_Manual\\src\\org\\apache\\commons\\lang\\text\\StrBuilder.java"	
@@ -1670,7 +1670,7 @@ public class StrBuilder implements Cloneable {
      */
     public boolean contains(char ch) {
         char[] thisBuf = buffer;
-        for (int i = 0; i < thisBuf.length; i++) {
+        for (int i = 0; i < this.size; i++) {
             if (thisBuf[i] == ch) {
                 return true;
             }
@@ -1727,7 +1727,7 @@ public class StrBuilder implements Cloneable {
             return -1;
         }
         char[] thisBuf = buffer;
-        for (int i = startIndex; i < thisBuf.length; i++) {
+        for (int i = startIndex; i < size; i++) {
             if (thisBuf[i] == ch) {
                 return i;
             }

991: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-63_Auto\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -283,7 +283,8 @@ public class DurationFormatUtils {
         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
         int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
-        int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
+        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
+	int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
 
         // each initial estimate is adjusted in case it is under 0
         while (milliseconds < 0) {
@@ -320,7 +321,7 @@ public class DurationFormatUtils {
         minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
         days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
+        
         years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 

992: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-63_Buggy\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-63_Manual\\src\\org\\apache\\commons\\lang\\time\\DurationFormatUtils.java"	
@@ -303,25 +303,20 @@ public class DurationFormatUtils {
             days -= 1;
         }
         while (days < 0) {
-            days += 31;
+            end.add(Calendar.MONTH, -1);
+            days += end.getActualMaximum(Calendar.DAY_OF_MONTH);
 //days += 31; // TODO: Need tests to show this is bad and the new code is good.
 // HEN: It's a tricky subject. Jan 15th to March 10th. If I count days-first it is 
 // 1 month and 26 days, but if I count month-first then it is 1 month and 23 days.
 // Also it's contextual - if asked for no M in the format then I should probably 
 // be doing no calculating here.
             months -= 1;
+            end.add(Calendar.MONTH, 1);
         }
         while (months < 0) {
             months += 12;
             years -= 1;
         }
-        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
-        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
-        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
-        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
-        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
-        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
 
         // This next block of code adds in values that 
         // aren't requested. This allows the user to ask for the 
@@ -429,18 +424,6 @@ public class DurationFormatUtils {
         }
         return buffer.toString();
     }
-    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
-        end.add( field, -1 * difference );
-        int endValue = end.get(field);
-        int startValue = start.get(field);
-        if (endValue < startValue) {
-            int newdiff = startValue - endValue;
-            end.add( field, newdiff );
-            return newdiff;
-        } else {
-            return 0;
-        }
-    }
 
     static final Object y = "y";
     static final Object M = "M";

993: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-6_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-6_Auto\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
@@ -92,7 +92,7 @@ public abstract class CharSequenceTranslator {
 //          // contract with translators is that they have to understand codepoints 
 //          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos += Character.charCount(Character.codePointAt(input, pt));
             }
         }
     }

994: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-6_Buggy\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-6_Manual\\src\\org\\apache\\commons\\lang3\\text\\translate\\CharSequenceTranslator.java"	
@@ -92,7 +92,7 @@ public abstract class CharSequenceTranslator {
 //          // contract with translators is that they have to understand codepoints 
 //          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos += Character.charCount(Character.codePointAt(input, pt));
             }
         }
     }

995: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-7_Auto\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,7 +449,7 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
+        if ((str.startsWith("--")) && (StringUtils.isBlank(str))) {
             return null;
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {

996: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-7_Buggy\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Lang-7_Manual\\src\\org\\apache\\commons\\lang3\\math\\NumberUtils.java"	
@@ -449,9 +449,6 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }  
-        if (str.startsWith("--")) {
-            return null;
-        }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
             int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
@@ -718,10 +715,13 @@ public class NumberUtils {
         if (StringUtils.isBlank(str)) {
             throw new NumberFormatException("A blank string is not a valid number");
         }
+        if (str.trim().startsWith("--")) {
             // this is protection for poorness in java.lang.BigDecimal.
             // it accepts this as a legal value, but it does not appear 
             // to be in specification of class. OS X Java parses it to 
             // a wrong value.
+            throw new NumberFormatException(str + " is not a valid number.");
+        }
         return new BigDecimal(str);
     }
 

997: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-11_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\MultivariateNormalDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-11_Auto\\src\\org\\apache\\commons\\math3\\distribution\\MultivariateNormalDistribution.java"	
@@ -180,7 +180,7 @@ public class MultivariateNormalDistribution
             throw new DimensionMismatchException(vals.length, dim);
         }
 
-        return FastMath.pow(2 * FastMath.PI, -dim / 2) *
+        return FastMath.pow(2 * FastMath.PI, -dim / 2d) *
             FastMath.pow(covarianceMatrixDeterminant, -0.5) *
             getExponentTerm(vals);
     }

998: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-11_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\MultivariateNormalDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-11_Manual\\src\\org\\apache\\commons\\math3\\distribution\\MultivariateNormalDistribution.java"	
@@ -180,7 +180,7 @@ public class MultivariateNormalDistribution
             throw new DimensionMismatchException(vals.length, dim);
         }
 
-        return FastMath.pow(2 * FastMath.PI, -dim / 2) *
+        return FastMath.pow(2 * FastMath.PI, -0.5 * dim) *
             FastMath.pow(covarianceMatrixDeterminant, -0.5) *
             getExponentTerm(vals);
     }

999: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-15_Buggy\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-15_Auto\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
@@ -1538,7 +1538,7 @@ public class FastMath {
         /* Handle special case x<0 */
         if (x < 0) {
             // y is an even integer in this case
-            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {
+            if ((y >= TWO_POWER_52 || y <= -TWO_POWER_52) && !(y < 8e298 && y > -8e298)) {
                 return pow(-x, y);
             }
 

1000: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-15_Buggy\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-15_Manual\\src\\org\\apache\\commons\\math3\\util\\FastMath.java"	
@@ -310,6 +310,7 @@ public class FastMath {
     /** 2^52 - double numbers this large must be integral (no fraction) or NaN or Infinite */
     private static final double TWO_POWER_52 = 4503599627370496.0;
     /** 2^53 - double numbers this large must be even. */
+    private static final double TWO_POWER_53 = 2 * TWO_POWER_52;
 
     /** Constant: {@value}. */
     private static final double F_1_3 = 1d / 3d;
@@ -1538,7 +1539,7 @@ public class FastMath {
         /* Handle special case x<0 */
         if (x < 0) {
             // y is an even integer in this case
-            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {
+            if (y >= TWO_POWER_53 || y <= -TWO_POWER_53) {
                 return pow(-x, y);
             }
 

1001: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-2_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\HypergeometricDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-2_Auto\\src\\org\\apache\\commons\\math3\\distribution\\HypergeometricDistribution.java"	
@@ -290,8 +290,8 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {
      */
     protected double calculateNumericalVariance() {
         final double N = getPopulationSize();
-        final double m = getNumberOfSuccesses();
-        final double n = getSampleSize();
+        final int m = getNumberOfSuccesses();
+        final int n = getSampleSize();
         return (n * m * (N - n) * (N - m)) / (N * N * (N - 1));
     }
 

1002: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-2_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\HypergeometricDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-2_Manual\\src\\org\\apache\\commons\\math3\\distribution\\HypergeometricDistribution.java"	
@@ -265,7 +265,7 @@ public class HypergeometricDistribution extends AbstractIntegerDistribution {
      * size {@code n}, the mean is {@code n * m / N}.
      */
     public double getNumericalMean() {
-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
+        return getSampleSize() * (getNumberOfSuccesses() / (double) getPopulationSize());
     }
 
     /**

1003: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-50_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,7 +184,7 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
+                    if (x>x1) {
                         x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
                         f0 = computeObjectiveValue(x0);
                     }

1004: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-50_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-50_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BaseSecantSolver.java"	
@@ -184,10 +184,6 @@ public abstract class BaseSecantSolver
                     break;
                 case REGULA_FALSI:
                     // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
                     break;
                 default:
                     // Should never happen.

1005: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-52_Buggy\\src\\org\\apache\\commons\\math\\geometry\\euclidean\\threed\\Rotation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-52_Auto\\src\\org\\apache\\commons\\math\\geometry\\euclidean\\threed\\Rotation.java"	
@@ -341,7 +341,7 @@ public class Rotation implements Serializable {
   Vector3D k     = v1Su1.crossProduct(v2Su2);
   Vector3D u3    = u1.crossProduct(u2);
   double c       = k.dotProduct(u3);
-  if (c == 0) {
+  if (c<=0) {
     // the (q1, q2, q3) vector is close to the (u1, u2) plane
     // we try other vectors
     Vector3D v3 = Vector3D.crossProduct(v1, v2);

1006: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-52_Buggy\\src\\org\\apache\\commons\\math\\geometry\\euclidean\\threed\\Rotation.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-52_Manual\\src\\org\\apache\\commons\\math\\geometry\\euclidean\\threed\\Rotation.java"	
@@ -341,7 +341,8 @@ public class Rotation implements Serializable {
   Vector3D k     = v1Su1.crossProduct(v2Su2);
   Vector3D u3    = u1.crossProduct(u2);
   double c       = k.dotProduct(u3);
-  if (c == 0) {
+  final double inPlaneThreshold = 0.001;
+  if (c <= inPlaneThreshold * k.getNorm() * u3.getNorm()) {
     // the (q1, q2, q3) vector is close to the (u1, u2) plane
     // we try other vectors
     Vector3D v3 = Vector3D.crossProduct(v1, v2);
@@ -350,13 +351,13 @@ public class Rotation implements Serializable {
     Vector3D u2Prime = u1.crossProduct(u3);
     c = k.dotProduct(u2Prime);
 
-    if (c == 0) {
+    if (c <= inPlaneThreshold * k.getNorm() * u2Prime.getNorm()) {
       // the (q1, q2, q3) vector is also close to the (u1, u3) plane,
       // it is almost aligned with u1: we try (u2, u3) and (v2, v3)
       k = v2Su2.crossProduct(v3Su3);;
       c = k.dotProduct(u2.crossProduct(u3));;
 
-      if (c == 0) {
+      if (c <= 0) {
         // the (q1, q2, q3) vector is aligned with everything
         // this is really the identity rotation
         q0 = 1.0;

1007: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-57_Auto\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -172,7 +172,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
+            double sum = 0;
             for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
                 final Cluster<T> nearest = getNearestCluster(resultSet, p);

1008: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-57_Buggy\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-57_Manual\\src\\org\\apache\\commons\\math\\stat\\clustering\\KMeansPlusPlusClusterer.java"	
@@ -172,7 +172,7 @@ public class KMeansPlusPlusClusterer<T extends Clusterable<T>> {
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
+            double sum = 0;
             for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
                 final Cluster<T> nearest = getNearestCluster(resultSet, p);

1009: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-58_Auto\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit(guess);
     }
 
     /**

1010: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-58_Buggy\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-58_Manual\\src\\org\\apache\\commons\\math\\optimization\\fitting\\GaussianFitter.java"	
@@ -118,7 +118,7 @@ public class GaussianFitter extends CurveFitter {
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit(guess);
     }
 
     /**

1011: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-5_Auto\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -302,7 +302,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+            return INF;
         }
 
         if (isInfinite) {

1012: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-5_Buggy\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-5_Manual\\src\\org\\apache\\commons\\math3\\complex\\Complex.java"	
@@ -302,7 +302,7 @@ public class Complex implements FieldElement<Complex>, Serializable  {
         }
 
         if (real == 0.0 && imaginary == 0.0) {
-            return NaN;
+            return INF;
         }
 
         if (isInfinite) {

1013: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-62_Buggy\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-62_Auto\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
@@ -159,7 +159,7 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
             try {
                 final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
                 final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
-                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
+                optima[i] = optimizer.optimize(f, goal, FastMath.min(min, bound2), FastMath.max(bound1, bound2));
             } catch (FunctionEvaluationException fee) {
                 optima[i] = null;
             } catch (ConvergenceException ce) {

1014: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-62_Buggy\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-62_Manual\\src\\org\\apache\\commons\\math\\optimization\\univariate\\MultiStartUnivariateRealOptimizer.java"	
@@ -143,7 +143,7 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
                                                  final GoalType goal,
                                                  final double min, final double max)
         throws FunctionEvaluationException {
-        return optimize(f, goal, min, max, 0);
+        return optimize(f, goal, min, max, min + 0.5 * (max - min));
     }
 
     /** {@inheritDoc} */
@@ -157,9 +157,8 @@ public class MultiStartUnivariateRealOptimizer<FUNC extends UnivariateRealFuncti
         // Multi-start loop.
         for (int i = 0; i < starts; ++i) {
             try {
-                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
-                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
-                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
+                final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
+                optima[i] = optimizer.optimize(f, goal, min, max, s);
             } catch (FunctionEvaluationException fee) {
                 optima[i] = null;
             } catch (ConvergenceException ce) {

1015: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-63_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -527,7 +527,7 @@ public final class MathUtils {
             return false;
         }
         for (int i = 0; i < x.length; ++i) {
-            if (!equals(x[i], y[i])) {
+            if (!equals(x[i], y[i], i)) {
                 return false;
             }
         }

1016: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-63_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-63_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -414,7 +414,7 @@ public final class MathUtils {
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        return equals(x, y, 1);
     }
 
     /**

1017: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-65_Buggy\\src\\org\\apache\\commons\\math\\optimization\\general\\AbstractLeastSquaresOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-65_Auto\\src\\org\\apache\\commons\\math\\optimization\\general\\AbstractLeastSquaresOptimizer.java"	
@@ -255,7 +255,7 @@ public abstract class AbstractLeastSquaresOptimizer implements DifferentiableMul
         double chiSquare = 0;
         for (int i = 0; i < rows; ++i) {
             final double residual = residuals[i];
-            chiSquare += residual * residual / residualsWeights[i];
+            chiSquare += residual * residual * residualsWeights[i];
         }
         return chiSquare;
     }

1018: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-65_Buggy\\src\\org\\apache\\commons\\math\\optimization\\general\\AbstractLeastSquaresOptimizer.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-65_Manual\\src\\org\\apache\\commons\\math\\optimization\\general\\AbstractLeastSquaresOptimizer.java"	
@@ -237,12 +237,7 @@ public abstract class AbstractLeastSquaresOptimizer implements DifferentiableMul
      * @return RMS value
      */
     public double getRMS() {
-        double criterion = 0;
-        for (int i = 0; i < rows; ++i) {
-            final double residual = residuals[i];
-            criterion += residual * residual * residualsWeights[i];
-        }
-        return Math.sqrt(criterion / rows);
+        return Math.sqrt(getChiSquare() / rows);
     }
 
     /**
@@ -255,7 +250,7 @@ public abstract class AbstractLeastSquaresOptimizer implements DifferentiableMul
         double chiSquare = 0;
         for (int i = 0; i < rows; ++i) {
             final double residual = residuals[i];
-            chiSquare += residual * residual / residualsWeights[i];
+            chiSquare += residual * residual * residualsWeights[i];
         }
         return chiSquare;
     }

1019: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-70_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

1020: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-70_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-70_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\BisectionSolver.java"	
@@ -69,7 +69,7 @@ public class BisectionSolver extends UnivariateRealSolverImpl {
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        return solve(f, min, max);
     }
 
     /** {@inheritDoc} */

1021: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-75_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**

1022: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-75_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-75_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -300,7 +300,7 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**

1023: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-79_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-79_Auto\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -1621,9 +1621,9 @@ public final class MathUtils {
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+      double sum = 0;
       for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+          final double dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);

1024: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-79_Buggy\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-79_Manual\\src\\org\\apache\\commons\\math\\util\\MathUtils.java"	
@@ -1621,9 +1621,9 @@ public final class MathUtils {
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+      double sum = 0;
       for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+          final double dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);

1025: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-80_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * this.pingPong - 1;
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

1026: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-80_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-80_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1132,7 +1132,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
-            int j = 4 * n - 1;
+            int j = 4 * (n - 1);
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];

1027: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-81_Auto\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -1540,7 +1540,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start==2) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

1028: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-81_Buggy\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-81_Manual\\src\\org\\apache\\commons\\math\\linear\\EigenDecompositionImpl.java"	
@@ -600,6 +600,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
         lowerSpectra = Math.min(lowerSpectra, lower);
         final double upper = dCurrent + eCurrent;
         work[upperStart + m - 1] = upper;
+        upperSpectra = Math.max(upperSpectra, upper);
         minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax);
 
     }
@@ -902,8 +903,8 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                     diagMax    = work[4 * i0];
                     offDiagMin = work[4 * i0 + 2];
                     double previousEMin = work[4 * i0 + 3];
-                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
-                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
+                    for (int i = 4 * i0; i < 4 * n0 - 16; i += 4) {
+                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) ||
                             (work[i + 2] <= TOLERANCE_2 * sigma)) {
                             // insert a split
                             work[i + 2]  = -sigma;
@@ -1540,7 +1541,7 @@ public class EigenDecompositionImpl implements EigenDecomposition {
                 double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);
 
                 // approximate contribution to norm squared from i < nn-2.
-                if (end - start > 2) {
+                if (end - start > 3) {
                     b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {

1029: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-82_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon)>0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

1030: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-82_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-82_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexSolver.java"	
@@ -79,7 +79,7 @@ public class SimplexSolver extends AbstractLinearOptimizer {
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;

1031: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-84_Auto\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -87,7 +87,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
+            if (comparator.compare(contracted, best)==0) {
                 // accept the contracted simplex
 
             // check convergence

1032: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-84_Buggy\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-84_Manual\\src\\org\\apache\\commons\\math\\optimization\\direct\\MultiDirectional.java"	
@@ -61,6 +61,7 @@ public class MultiDirectional extends DirectSearchOptimizer {
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        final RealConvergenceChecker checker = getConvergenceChecker();
         while (true) {
 
             incrementIterationsCounter();
@@ -89,8 +90,16 @@ public class MultiDirectional extends DirectSearchOptimizer {
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
             // check convergence
+            final int iter = getIterations();
+            boolean converged = true;
+            for (int i = 0; i < simplex.length; ++i) {
+                converged &= checker.converged(iter, original[i], simplex[i]);
+            }
+            if (converged) {
                 return;
             }
 

1033: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-85_Auto\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb>0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

1034: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-85_Buggy\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-85_Manual\\src\\org\\apache\\commons\\math\\analysis\\solvers\\UnivariateRealSolverUtils.java"	
@@ -195,7 +195,7 @@ public class UnivariateRealSolverUtils {
         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && 
                 ((a > lowerBound) || (b < upperBound)));
    
-        if (fa * fb >= 0.0 ) {
+        if (fa * fb > 0.0 ) {
             throw new ConvergenceException(
                       "number of iterations={0}, maximum iterations={1}, " +
                       "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +

1035: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-88_Auto\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -335,7 +335,7 @@ class SimplexTableau implements Serializable {
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                    if (j == i && (tableau.getEntry(basicRow, j) == 1)) {
                          coefficients[i] = 0;
                     }
                 }

1036: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-88_Buggy\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-88_Manual\\src\\org\\apache\\commons\\math\\optimization\\linear\\SimplexTableau.java"	
@@ -326,19 +326,18 @@ class SimplexTableau implements Serializable {
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));

1037: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-89_Auto\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,12 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+            if (v instanceof Comparable<?>) {
+	addValue((Comparable<?>) v);
+	} else {
+	throw new IllegalArgumentException("Illegal argument: v");
+}
+            
     }
     
     /**

1038: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-89_Buggy\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-89_Manual\\src\\org\\apache\\commons\\math\\stat\\Frequency.java"	
@@ -107,7 +107,11 @@ public class Frequency implements Serializable {
      */
     @Deprecated
     public void addValue(Object v) {
+        if (v instanceof Comparable<?>){
             addValue((Comparable<?>) v);            
+        } else {
+            throw new IllegalArgumentException("Object must implement Comparable");
+        }
     }
     
     /**

1039: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-8_Auto\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -186,7 +186,7 @@ public class DiscreteDistribution<T> {
 
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
+        for (int i = 0; i==sampleSize; i++) {
             out[i] = sample();
         }
 

1040: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-8_Buggy\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-8_Manual\\src\\org\\apache\\commons\\math3\\distribution\\DiscreteDistribution.java"	
@@ -178,13 +178,13 @@ public class DiscreteDistribution<T> {
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+    public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        final Object[] out = new Object[sampleSize];
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();

1041: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-95_Auto\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -144,7 +144,7 @@ public class FDistributionImpl
         double ret;
         double d = getDenominatorDegreesOfFreedom();
             // use mean
-            ret = d / (d - 2.0);
+            ret = d / (d + 2.0);
         return ret;
     }
     

1042: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-95_Buggy\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-95_Manual\\src\\org\\apache\\commons\\math\\distribution\\FDistributionImpl.java"	
@@ -141,10 +141,12 @@ public class FDistributionImpl
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double ret = 1.0;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2.0) {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
     

1043: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-96_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-96_Auto\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -255,7 +255,7 @@ public class Complex implements Serializable  {
                 if (rhs.isNaN()) {
                     ret = this.isNaN();
                 } else {
-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
+                    ret = (Double.doubleToRawLongBits(real)>=Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
                 }
             } catch (ClassCastException ex) {
                 // ignore exception

1044: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-96_Buggy\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Math-96_Manual\\src\\org\\apache\\commons\\math\\complex\\Complex.java"	
@@ -255,7 +255,7 @@ public class Complex implements Serializable  {
                 if (rhs.isNaN()) {
                     ret = this.isNaN();
                 } else {
-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
+                    ret = (real == rhs.real) && (imaginary == rhs.imaginary); 
                 }
             } catch (ClassCastException ex) {
                 // ignore exception

1045: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-26_Buggy\\src\\org\\mockito\\internal\\util\\Primitives.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-26_Auto\\src\\org\\mockito\\internal\\util\\Primitives.java"	
@@ -63,6 +63,6 @@ public class Primitives {
         primitiveValues.put(int.class, 0);
         primitiveValues.put(long.class, 0L);
         primitiveValues.put(float.class, 0F);
-        primitiveValues.put(double.class, 0);
+        primitiveValues.put(double.class, 0d);
     }
 }
\ No newline at end of file

1046: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-26_Buggy\\src\\org\\mockito\\internal\\util\\Primitives.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-26_Manual\\src\\org\\mockito\\internal\\util\\Primitives.java"	
@@ -63,6 +63,6 @@ public class Primitives {
         primitiveValues.put(int.class, 0);
         primitiveValues.put(long.class, 0L);
         primitiveValues.put(float.class, 0F);
-        primitiveValues.put(double.class, 0);
+        primitiveValues.put(double.class, 0D);
     }
 }
\ No newline at end of file

1047: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-29_Buggy\\src\\org\\mockito\\internal\\matchers\\Same.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-29_Auto\\src\\org\\mockito\\internal\\matchers\\Same.java"	
@@ -26,7 +26,10 @@ public class Same extends ArgumentMatcher<Object> implements Serializable {
     public void describeTo(Description description) {
         description.appendText("same(");
         appendQuoting(description);
-        description.appendText(wanted.toString());
+        if (wanted != null) {
+	description.appendText(wanted.toString());
+	}
+
         appendQuoting(description);
         description.appendText(")");
     }

1048: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-29_Buggy\\src\\org\\mockito\\internal\\matchers\\Same.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-29_Manual\\src\\org\\mockito\\internal\\matchers\\Same.java"	
@@ -26,7 +26,7 @@ public class Same extends ArgumentMatcher<Object> implements Serializable {
     public void describeTo(Description description) {
         description.appendText("same(");
         appendQuoting(description);
-        description.appendText(wanted.toString());
+        description.appendText(wanted == null ? "null" : wanted.toString());
         appendQuoting(description);
         description.appendText(")");
     }

1049: _Auto\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-38_Buggy\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-38_Auto\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
@@ -45,6 +45,9 @@ public class ArgumentMatchingTool {
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
-        return StringDescription.toString(m).equals(arg.toString());
+        if (arg == null) {
+	    return false;
+	}
+return StringDescription.toString(m).equals(arg.toString());
     }
 }
\ No newline at end of file

1050: _Manual\
--- "a/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-38_Buggy\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
+++ "b/C:\\Users\\UROS\\Documents\\GitHub\\APR-PQA\\0. Data_Sources\\scripts\\Chunk_And_Lines\\..\\APR_Efficiency_Result_526_Packages\\TBar_Mockito-38_Manual\\src\\org\\mockito\\internal\\verification\\argumentmatching\\ArgumentMatchingTool.java"	
@@ -45,6 +45,6 @@ public class ArgumentMatchingTool {
     }
 
     private boolean toStringEquals(Matcher m, Object arg) {
-        return StringDescription.toString(m).equals(arg.toString());
+        return StringDescription.toString(m).equals(arg == null? "null" : arg.toString());
     }
 }
\ No newline at end of file

